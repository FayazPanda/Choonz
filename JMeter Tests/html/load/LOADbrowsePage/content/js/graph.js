/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 2611.0, "series": [{"data": [[0.0, 1.0], [0.1, 2.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 3.0], [3.1, 3.0], [3.2, 3.0], [3.3, 3.0], [3.4, 3.0], [3.5, 3.0], [3.6, 3.0], [3.7, 3.0], [3.8, 3.0], [3.9, 3.0], [4.0, 3.0], [4.1, 3.0], [4.2, 3.0], [4.3, 3.0], [4.4, 3.0], [4.5, 3.0], [4.6, 3.0], [4.7, 3.0], [4.8, 3.0], [4.9, 3.0], [5.0, 3.0], [5.1, 3.0], [5.2, 3.0], [5.3, 3.0], [5.4, 3.0], [5.5, 3.0], [5.6, 3.0], [5.7, 3.0], [5.8, 3.0], [5.9, 3.0], [6.0, 3.0], [6.1, 3.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 4.0], [8.2, 4.0], [8.3, 4.0], [8.4, 4.0], [8.5, 4.0], [8.6, 4.0], [8.7, 4.0], [8.8, 4.0], [8.9, 4.0], [9.0, 4.0], [9.1, 4.0], [9.2, 4.0], [9.3, 4.0], [9.4, 4.0], [9.5, 4.0], [9.6, 4.0], [9.7, 4.0], [9.8, 4.0], [9.9, 4.0], [10.0, 4.0], [10.1, 4.0], [10.2, 4.0], [10.3, 4.0], [10.4, 4.0], [10.5, 4.0], [10.6, 4.0], [10.7, 4.0], [10.8, 4.0], [10.9, 4.0], [11.0, 4.0], [11.1, 4.0], [11.2, 4.0], [11.3, 4.0], [11.4, 4.0], [11.5, 4.0], [11.6, 4.0], [11.7, 4.0], [11.8, 4.0], [11.9, 4.0], [12.0, 4.0], [12.1, 4.0], [12.2, 4.0], [12.3, 4.0], [12.4, 4.0], [12.5, 4.0], [12.6, 4.0], [12.7, 4.0], [12.8, 4.0], [12.9, 4.0], [13.0, 4.0], [13.1, 4.0], [13.2, 4.0], [13.3, 4.0], [13.4, 4.0], [13.5, 4.0], [13.6, 4.0], [13.7, 4.0], [13.8, 4.0], [13.9, 4.0], [14.0, 4.0], [14.1, 4.0], [14.2, 4.0], [14.3, 4.0], [14.4, 4.0], [14.5, 5.0], [14.6, 5.0], [14.7, 5.0], [14.8, 5.0], [14.9, 5.0], [15.0, 5.0], [15.1, 5.0], [15.2, 5.0], [15.3, 5.0], [15.4, 5.0], [15.5, 5.0], [15.6, 5.0], [15.7, 5.0], [15.8, 5.0], [15.9, 5.0], [16.0, 5.0], [16.1, 5.0], [16.2, 5.0], [16.3, 5.0], [16.4, 5.0], [16.5, 5.0], [16.6, 5.0], [16.7, 5.0], [16.8, 5.0], [16.9, 5.0], [17.0, 5.0], [17.1, 5.0], [17.2, 5.0], [17.3, 5.0], [17.4, 5.0], [17.5, 5.0], [17.6, 5.0], [17.7, 5.0], [17.8, 5.0], [17.9, 5.0], [18.0, 5.0], [18.1, 5.0], [18.2, 5.0], [18.3, 5.0], [18.4, 5.0], [18.5, 5.0], [18.6, 5.0], [18.7, 5.0], [18.8, 6.0], [18.9, 6.0], [19.0, 6.0], [19.1, 6.0], [19.2, 6.0], [19.3, 6.0], [19.4, 6.0], [19.5, 6.0], [19.6, 6.0], [19.7, 6.0], [19.8, 6.0], [19.9, 6.0], [20.0, 6.0], [20.1, 6.0], [20.2, 6.0], [20.3, 6.0], [20.4, 6.0], [20.5, 6.0], [20.6, 6.0], [20.7, 6.0], [20.8, 6.0], [20.9, 6.0], [21.0, 6.0], [21.1, 6.0], [21.2, 7.0], [21.3, 7.0], [21.4, 7.0], [21.5, 7.0], [21.6, 7.0], [21.7, 7.0], [21.8, 7.0], [21.9, 7.0], [22.0, 7.0], [22.1, 7.0], [22.2, 7.0], [22.3, 7.0], [22.4, 7.0], [22.5, 7.0], [22.6, 7.0], [22.7, 7.0], [22.8, 7.0], [22.9, 7.0], [23.0, 8.0], [23.1, 8.0], [23.2, 8.0], [23.3, 8.0], [23.4, 8.0], [23.5, 8.0], [23.6, 8.0], [23.7, 8.0], [23.8, 8.0], [23.9, 8.0], [24.0, 8.0], [24.1, 8.0], [24.2, 8.0], [24.3, 8.0], [24.4, 8.0], [24.5, 8.0], [24.6, 9.0], [24.7, 9.0], [24.8, 9.0], [24.9, 9.0], [25.0, 9.0], [25.1, 9.0], [25.2, 9.0], [25.3, 9.0], [25.4, 9.0], [25.5, 9.0], [25.6, 9.0], [25.7, 9.0], [25.8, 10.0], [25.9, 10.0], [26.0, 10.0], [26.1, 10.0], [26.2, 10.0], [26.3, 10.0], [26.4, 10.0], [26.5, 10.0], [26.6, 10.0], [26.7, 10.0], [26.8, 11.0], [26.9, 11.0], [27.0, 11.0], [27.1, 11.0], [27.2, 11.0], [27.3, 11.0], [27.4, 11.0], [27.5, 11.0], [27.6, 11.0], [27.7, 12.0], [27.8, 12.0], [27.9, 12.0], [28.0, 12.0], [28.1, 12.0], [28.2, 12.0], [28.3, 13.0], [28.4, 13.0], [28.5, 13.0], [28.6, 13.0], [28.7, 13.0], [28.8, 13.0], [28.9, 14.0], [29.0, 14.0], [29.1, 14.0], [29.2, 14.0], [29.3, 14.0], [29.4, 15.0], [29.5, 15.0], [29.6, 15.0], [29.7, 15.0], [29.8, 15.0], [29.9, 16.0], [30.0, 16.0], [30.1, 16.0], [30.2, 16.0], [30.3, 17.0], [30.4, 17.0], [30.5, 17.0], [30.6, 17.0], [30.7, 18.0], [30.8, 18.0], [30.9, 18.0], [31.0, 18.0], [31.1, 19.0], [31.2, 19.0], [31.3, 19.0], [31.4, 20.0], [31.5, 20.0], [31.6, 20.0], [31.7, 20.0], [31.8, 21.0], [31.9, 21.0], [32.0, 21.0], [32.1, 21.0], [32.2, 22.0], [32.3, 22.0], [32.4, 22.0], [32.5, 22.0], [32.6, 23.0], [32.7, 23.0], [32.8, 24.0], [32.9, 24.0], [33.0, 24.0], [33.1, 25.0], [33.2, 25.0], [33.3, 25.0], [33.4, 25.0], [33.5, 26.0], [33.6, 26.0], [33.7, 26.0], [33.8, 26.0], [33.9, 27.0], [34.0, 27.0], [34.1, 27.0], [34.2, 27.0], [34.3, 28.0], [34.4, 28.0], [34.5, 28.0], [34.6, 29.0], [34.7, 29.0], [34.8, 29.0], [34.9, 30.0], [35.0, 30.0], [35.1, 31.0], [35.2, 31.0], [35.3, 32.0], [35.4, 32.0], [35.5, 32.0], [35.6, 33.0], [35.7, 33.0], [35.8, 34.0], [35.9, 34.0], [36.0, 35.0], [36.1, 35.0], [36.2, 36.0], [36.3, 36.0], [36.4, 37.0], [36.5, 37.0], [36.6, 38.0], [36.7, 38.0], [36.8, 38.0], [36.9, 39.0], [37.0, 39.0], [37.1, 40.0], [37.2, 40.0], [37.3, 41.0], [37.4, 41.0], [37.5, 41.0], [37.6, 42.0], [37.7, 42.0], [37.8, 43.0], [37.9, 43.0], [38.0, 44.0], [38.1, 45.0], [38.2, 45.0], [38.3, 46.0], [38.4, 47.0], [38.5, 47.0], [38.6, 48.0], [38.7, 48.0], [38.8, 49.0], [38.9, 49.0], [39.0, 49.0], [39.1, 50.0], [39.2, 50.0], [39.3, 51.0], [39.4, 51.0], [39.5, 52.0], [39.6, 52.0], [39.7, 52.0], [39.8, 53.0], [39.9, 53.0], [40.0, 54.0], [40.1, 55.0], [40.2, 55.0], [40.3, 56.0], [40.4, 56.0], [40.5, 57.0], [40.6, 57.0], [40.7, 58.0], [40.8, 58.0], [40.9, 59.0], [41.0, 59.0], [41.1, 60.0], [41.2, 60.0], [41.3, 61.0], [41.4, 61.0], [41.5, 62.0], [41.6, 62.0], [41.7, 63.0], [41.8, 64.0], [41.9, 64.0], [42.0, 64.0], [42.1, 65.0], [42.2, 65.0], [42.3, 66.0], [42.4, 66.0], [42.5, 67.0], [42.6, 67.0], [42.7, 68.0], [42.8, 68.0], [42.9, 68.0], [43.0, 69.0], [43.1, 69.0], [43.2, 70.0], [43.3, 70.0], [43.4, 70.0], [43.5, 71.0], [43.6, 71.0], [43.7, 72.0], [43.8, 72.0], [43.9, 72.0], [44.0, 73.0], [44.1, 73.0], [44.2, 74.0], [44.3, 74.0], [44.4, 75.0], [44.5, 75.0], [44.6, 75.0], [44.7, 76.0], [44.8, 76.0], [44.9, 77.0], [45.0, 77.0], [45.1, 78.0], [45.2, 78.0], [45.3, 78.0], [45.4, 79.0], [45.5, 79.0], [45.6, 80.0], [45.7, 80.0], [45.8, 80.0], [45.9, 81.0], [46.0, 81.0], [46.1, 81.0], [46.2, 82.0], [46.3, 82.0], [46.4, 82.0], [46.5, 83.0], [46.6, 83.0], [46.7, 83.0], [46.8, 83.0], [46.9, 84.0], [47.0, 84.0], [47.1, 84.0], [47.2, 85.0], [47.3, 85.0], [47.4, 85.0], [47.5, 85.0], [47.6, 86.0], [47.7, 86.0], [47.8, 86.0], [47.9, 86.0], [48.0, 87.0], [48.1, 87.0], [48.2, 87.0], [48.3, 87.0], [48.4, 88.0], [48.5, 88.0], [48.6, 88.0], [48.7, 89.0], [48.8, 89.0], [48.9, 89.0], [49.0, 89.0], [49.1, 90.0], [49.2, 90.0], [49.3, 90.0], [49.4, 90.0], [49.5, 91.0], [49.6, 91.0], [49.7, 91.0], [49.8, 91.0], [49.9, 92.0], [50.0, 92.0], [50.1, 92.0], [50.2, 92.0], [50.3, 93.0], [50.4, 93.0], [50.5, 93.0], [50.6, 94.0], [50.7, 94.0], [50.8, 94.0], [50.9, 95.0], [51.0, 95.0], [51.1, 95.0], [51.2, 96.0], [51.3, 96.0], [51.4, 96.0], [51.5, 97.0], [51.6, 97.0], [51.7, 97.0], [51.8, 98.0], [51.9, 98.0], [52.0, 98.0], [52.1, 99.0], [52.2, 99.0], [52.3, 100.0], [52.4, 100.0], [52.5, 100.0], [52.6, 101.0], [52.7, 101.0], [52.8, 101.0], [52.9, 102.0], [53.0, 102.0], [53.1, 102.0], [53.2, 102.0], [53.3, 103.0], [53.4, 103.0], [53.5, 103.0], [53.6, 104.0], [53.7, 104.0], [53.8, 104.0], [53.9, 105.0], [54.0, 105.0], [54.1, 105.0], [54.2, 106.0], [54.3, 106.0], [54.4, 106.0], [54.5, 106.0], [54.6, 107.0], [54.7, 107.0], [54.8, 107.0], [54.9, 107.0], [55.0, 108.0], [55.1, 108.0], [55.2, 108.0], [55.3, 109.0], [55.4, 109.0], [55.5, 109.0], [55.6, 109.0], [55.7, 110.0], [55.8, 110.0], [55.9, 110.0], [56.0, 110.0], [56.1, 111.0], [56.2, 111.0], [56.3, 111.0], [56.4, 111.0], [56.5, 112.0], [56.6, 112.0], [56.7, 112.0], [56.8, 112.0], [56.9, 113.0], [57.0, 113.0], [57.1, 113.0], [57.2, 114.0], [57.3, 114.0], [57.4, 114.0], [57.5, 114.0], [57.6, 115.0], [57.7, 115.0], [57.8, 115.0], [57.9, 116.0], [58.0, 116.0], [58.1, 116.0], [58.2, 117.0], [58.3, 117.0], [58.4, 117.0], [58.5, 117.0], [58.6, 118.0], [58.7, 118.0], [58.8, 118.0], [58.9, 119.0], [59.0, 119.0], [59.1, 119.0], [59.2, 119.0], [59.3, 119.0], [59.4, 120.0], [59.5, 120.0], [59.6, 120.0], [59.7, 121.0], [59.8, 121.0], [59.9, 121.0], [60.0, 121.0], [60.1, 122.0], [60.2, 122.0], [60.3, 122.0], [60.4, 122.0], [60.5, 123.0], [60.6, 123.0], [60.7, 123.0], [60.8, 123.0], [60.9, 123.0], [61.0, 124.0], [61.1, 124.0], [61.2, 124.0], [61.3, 124.0], [61.4, 125.0], [61.5, 125.0], [61.6, 125.0], [61.7, 126.0], [61.8, 126.0], [61.9, 126.0], [62.0, 126.0], [62.1, 127.0], [62.2, 127.0], [62.3, 127.0], [62.4, 127.0], [62.5, 128.0], [62.6, 128.0], [62.7, 128.0], [62.8, 129.0], [62.9, 129.0], [63.0, 129.0], [63.1, 129.0], [63.2, 130.0], [63.3, 130.0], [63.4, 130.0], [63.5, 130.0], [63.6, 130.0], [63.7, 131.0], [63.8, 131.0], [63.9, 131.0], [64.0, 131.0], [64.1, 132.0], [64.2, 132.0], [64.3, 132.0], [64.4, 132.0], [64.5, 132.0], [64.6, 133.0], [64.7, 133.0], [64.8, 133.0], [64.9, 133.0], [65.0, 134.0], [65.1, 134.0], [65.2, 134.0], [65.3, 135.0], [65.4, 135.0], [65.5, 135.0], [65.6, 135.0], [65.7, 135.0], [65.8, 136.0], [65.9, 136.0], [66.0, 136.0], [66.1, 136.0], [66.2, 136.0], [66.3, 137.0], [66.4, 137.0], [66.5, 137.0], [66.6, 137.0], [66.7, 138.0], [66.8, 138.0], [66.9, 138.0], [67.0, 138.0], [67.1, 139.0], [67.2, 139.0], [67.3, 139.0], [67.4, 140.0], [67.5, 140.0], [67.6, 140.0], [67.7, 140.0], [67.8, 141.0], [67.9, 141.0], [68.0, 141.0], [68.1, 141.0], [68.2, 142.0], [68.3, 142.0], [68.4, 142.0], [68.5, 142.0], [68.6, 143.0], [68.7, 143.0], [68.8, 143.0], [68.9, 143.0], [69.0, 144.0], [69.1, 144.0], [69.2, 144.0], [69.3, 144.0], [69.4, 145.0], [69.5, 145.0], [69.6, 145.0], [69.7, 145.0], [69.8, 146.0], [69.9, 146.0], [70.0, 146.0], [70.1, 146.0], [70.2, 147.0], [70.3, 147.0], [70.4, 147.0], [70.5, 147.0], [70.6, 147.0], [70.7, 147.0], [70.8, 148.0], [70.9, 148.0], [71.0, 148.0], [71.1, 149.0], [71.2, 149.0], [71.3, 149.0], [71.4, 149.0], [71.5, 149.0], [71.6, 150.0], [71.7, 150.0], [71.8, 150.0], [71.9, 150.0], [72.0, 150.0], [72.1, 151.0], [72.2, 151.0], [72.3, 151.0], [72.4, 151.0], [72.5, 151.0], [72.6, 151.0], [72.7, 152.0], [72.8, 152.0], [72.9, 152.0], [73.0, 152.0], [73.1, 152.0], [73.2, 152.0], [73.3, 153.0], [73.4, 153.0], [73.5, 153.0], [73.6, 153.0], [73.7, 153.0], [73.8, 153.0], [73.9, 153.0], [74.0, 154.0], [74.1, 154.0], [74.2, 154.0], [74.3, 154.0], [74.4, 154.0], [74.5, 154.0], [74.6, 154.0], [74.7, 155.0], [74.8, 155.0], [74.9, 155.0], [75.0, 155.0], [75.1, 155.0], [75.2, 155.0], [75.3, 156.0], [75.4, 156.0], [75.5, 156.0], [75.6, 156.0], [75.7, 156.0], [75.8, 157.0], [75.9, 157.0], [76.0, 157.0], [76.1, 157.0], [76.2, 157.0], [76.3, 157.0], [76.4, 157.0], [76.5, 158.0], [76.6, 158.0], [76.7, 158.0], [76.8, 158.0], [76.9, 158.0], [77.0, 159.0], [77.1, 159.0], [77.2, 159.0], [77.3, 159.0], [77.4, 159.0], [77.5, 159.0], [77.6, 160.0], [77.7, 160.0], [77.8, 160.0], [77.9, 160.0], [78.0, 160.0], [78.1, 161.0], [78.2, 161.0], [78.3, 161.0], [78.4, 161.0], [78.5, 161.0], [78.6, 162.0], [78.7, 162.0], [78.8, 162.0], [78.9, 162.0], [79.0, 162.0], [79.1, 163.0], [79.2, 163.0], [79.3, 163.0], [79.4, 163.0], [79.5, 163.0], [79.6, 164.0], [79.7, 164.0], [79.8, 164.0], [79.9, 164.0], [80.0, 164.0], [80.1, 165.0], [80.2, 165.0], [80.3, 165.0], [80.4, 165.0], [80.5, 165.0], [80.6, 166.0], [80.7, 166.0], [80.8, 166.0], [80.9, 166.0], [81.0, 166.0], [81.1, 167.0], [81.2, 167.0], [81.3, 167.0], [81.4, 167.0], [81.5, 167.0], [81.6, 167.0], [81.7, 168.0], [81.8, 168.0], [81.9, 168.0], [82.0, 168.0], [82.1, 168.0], [82.2, 168.0], [82.3, 169.0], [82.4, 169.0], [82.5, 169.0], [82.6, 169.0], [82.7, 169.0], [82.8, 169.0], [82.9, 170.0], [83.0, 170.0], [83.1, 170.0], [83.2, 170.0], [83.3, 170.0], [83.4, 170.0], [83.5, 171.0], [83.6, 171.0], [83.7, 171.0], [83.8, 171.0], [83.9, 171.0], [84.0, 171.0], [84.1, 171.0], [84.2, 172.0], [84.3, 172.0], [84.4, 172.0], [84.5, 172.0], [84.6, 172.0], [84.7, 172.0], [84.8, 172.0], [84.9, 173.0], [85.0, 173.0], [85.1, 173.0], [85.2, 173.0], [85.3, 173.0], [85.4, 173.0], [85.5, 173.0], [85.6, 174.0], [85.7, 174.0], [85.8, 174.0], [85.9, 174.0], [86.0, 174.0], [86.1, 174.0], [86.2, 175.0], [86.3, 175.0], [86.4, 175.0], [86.5, 175.0], [86.6, 175.0], [86.7, 176.0], [86.8, 176.0], [86.9, 176.0], [87.0, 176.0], [87.1, 176.0], [87.2, 176.0], [87.3, 176.0], [87.4, 176.0], [87.5, 177.0], [87.6, 177.0], [87.7, 177.0], [87.8, 177.0], [87.9, 177.0], [88.0, 177.0], [88.1, 178.0], [88.2, 178.0], [88.3, 178.0], [88.4, 178.0], [88.5, 178.0], [88.6, 179.0], [88.7, 179.0], [88.8, 179.0], [88.9, 179.0], [89.0, 179.0], [89.1, 179.0], [89.2, 180.0], [89.3, 180.0], [89.4, 180.0], [89.5, 180.0], [89.6, 180.0], [89.7, 180.0], [89.8, 180.0], [89.9, 181.0], [90.0, 181.0], [90.1, 181.0], [90.2, 181.0], [90.3, 182.0], [90.4, 182.0], [90.5, 182.0], [90.6, 182.0], [90.7, 182.0], [90.8, 183.0], [90.9, 183.0], [91.0, 183.0], [91.1, 184.0], [91.2, 184.0], [91.3, 184.0], [91.4, 184.0], [91.5, 184.0], [91.6, 185.0], [91.7, 185.0], [91.8, 185.0], [91.9, 186.0], [92.0, 186.0], [92.1, 186.0], [92.2, 186.0], [92.3, 186.0], [92.4, 186.0], [92.5, 187.0], [92.6, 187.0], [92.7, 187.0], [92.8, 187.0], [92.9, 187.0], [93.0, 188.0], [93.1, 188.0], [93.2, 188.0], [93.3, 188.0], [93.4, 188.0], [93.5, 189.0], [93.6, 189.0], [93.7, 189.0], [93.8, 189.0], [93.9, 189.0], [94.0, 190.0], [94.1, 190.0], [94.2, 190.0], [94.3, 190.0], [94.4, 190.0], [94.5, 190.0], [94.6, 191.0], [94.7, 191.0], [94.8, 191.0], [94.9, 191.0], [95.0, 192.0], [95.1, 192.0], [95.2, 192.0], [95.3, 192.0], [95.4, 193.0], [95.5, 193.0], [95.6, 193.0], [95.7, 193.0], [95.8, 194.0], [95.9, 194.0], [96.0, 194.0], [96.1, 194.0], [96.2, 195.0], [96.3, 195.0], [96.4, 195.0], [96.5, 196.0], [96.6, 196.0], [96.7, 196.0], [96.8, 197.0], [96.9, 197.0], [97.0, 197.0], [97.1, 197.0], [97.2, 198.0], [97.3, 198.0], [97.4, 199.0], [97.5, 199.0], [97.6, 199.0], [97.7, 200.0], [97.8, 200.0], [97.9, 200.0], [98.0, 201.0], [98.1, 201.0], [98.2, 201.0], [98.3, 202.0], [98.4, 202.0], [98.5, 203.0], [98.6, 203.0], [98.7, 204.0], [98.8, 204.0], [98.9, 205.0], [99.0, 206.0], [99.1, 207.0], [99.2, 207.0], [99.3, 209.0], [99.4, 210.0], [99.5, 211.0], [99.6, 213.0], [99.7, 214.0], [99.8, 221.0], [99.9, 226.0], [100.0, 567.0]], "isOverall": false, "label": "Browse Page", "isController": false}, {"data": [[0.0, 1.0], [0.1, 3.0], [0.2, 4.0], [0.3, 4.0], [0.4, 5.0], [0.5, 5.0], [0.6, 6.0], [0.7, 7.0], [0.8, 7.0], [0.9, 7.0], [1.0, 8.0], [1.1, 8.0], [1.2, 8.0], [1.3, 8.0], [1.4, 8.0], [1.5, 9.0], [1.6, 9.0], [1.7, 9.0], [1.8, 9.0], [1.9, 9.0], [2.0, 9.0], [2.1, 9.0], [2.2, 10.0], [2.3, 10.0], [2.4, 10.0], [2.5, 10.0], [2.6, 10.0], [2.7, 10.0], [2.8, 10.0], [2.9, 10.0], [3.0, 11.0], [3.1, 11.0], [3.2, 11.0], [3.3, 11.0], [3.4, 11.0], [3.5, 11.0], [3.6, 11.0], [3.7, 11.0], [3.8, 11.0], [3.9, 12.0], [4.0, 12.0], [4.1, 12.0], [4.2, 12.0], [4.3, 12.0], [4.4, 12.0], [4.5, 12.0], [4.6, 12.0], [4.7, 12.0], [4.8, 13.0], [4.9, 13.0], [5.0, 13.0], [5.1, 13.0], [5.2, 13.0], [5.3, 13.0], [5.4, 13.0], [5.5, 13.0], [5.6, 13.0], [5.7, 14.0], [5.8, 14.0], [5.9, 14.0], [6.0, 14.0], [6.1, 14.0], [6.2, 14.0], [6.3, 14.0], [6.4, 15.0], [6.5, 15.0], [6.6, 15.0], [6.7, 15.0], [6.8, 15.0], [6.9, 15.0], [7.0, 15.0], [7.1, 16.0], [7.2, 16.0], [7.3, 16.0], [7.4, 16.0], [7.5, 16.0], [7.6, 16.0], [7.7, 17.0], [7.8, 17.0], [7.9, 17.0], [8.0, 17.0], [8.1, 17.0], [8.2, 18.0], [8.3, 18.0], [8.4, 18.0], [8.5, 18.0], [8.6, 18.0], [8.7, 19.0], [8.8, 19.0], [8.9, 19.0], [9.0, 19.0], [9.1, 20.0], [9.2, 20.0], [9.3, 20.0], [9.4, 20.0], [9.5, 21.0], [9.6, 21.0], [9.7, 21.0], [9.8, 22.0], [9.9, 22.0], [10.0, 22.0], [10.1, 23.0], [10.2, 23.0], [10.3, 23.0], [10.4, 23.0], [10.5, 24.0], [10.6, 24.0], [10.7, 24.0], [10.8, 25.0], [10.9, 25.0], [11.0, 25.0], [11.1, 26.0], [11.2, 26.0], [11.3, 26.0], [11.4, 27.0], [11.5, 27.0], [11.6, 27.0], [11.7, 28.0], [11.8, 28.0], [11.9, 28.0], [12.0, 29.0], [12.1, 29.0], [12.2, 29.0], [12.3, 30.0], [12.4, 30.0], [12.5, 30.0], [12.6, 31.0], [12.7, 31.0], [12.8, 31.0], [12.9, 32.0], [13.0, 32.0], [13.1, 33.0], [13.2, 33.0], [13.3, 33.0], [13.4, 34.0], [13.5, 34.0], [13.6, 35.0], [13.7, 35.0], [13.8, 36.0], [13.9, 36.0], [14.0, 37.0], [14.1, 37.0], [14.2, 37.0], [14.3, 38.0], [14.4, 38.0], [14.5, 39.0], [14.6, 39.0], [14.7, 40.0], [14.8, 40.0], [14.9, 41.0], [15.0, 41.0], [15.1, 42.0], [15.2, 42.0], [15.3, 43.0], [15.4, 44.0], [15.5, 44.0], [15.6, 44.0], [15.7, 45.0], [15.8, 45.0], [15.9, 46.0], [16.0, 46.0], [16.1, 46.0], [16.2, 47.0], [16.3, 48.0], [16.4, 48.0], [16.5, 49.0], [16.6, 49.0], [16.7, 50.0], [16.8, 51.0], [16.9, 51.0], [17.0, 52.0], [17.1, 52.0], [17.2, 53.0], [17.3, 53.0], [17.4, 54.0], [17.5, 55.0], [17.6, 55.0], [17.7, 56.0], [17.8, 56.0], [17.9, 57.0], [18.0, 58.0], [18.1, 58.0], [18.2, 59.0], [18.3, 60.0], [18.4, 60.0], [18.5, 61.0], [18.6, 62.0], [18.7, 63.0], [18.8, 64.0], [18.9, 64.0], [19.0, 65.0], [19.1, 66.0], [19.2, 67.0], [19.3, 68.0], [19.4, 69.0], [19.5, 69.0], [19.6, 70.0], [19.7, 71.0], [19.8, 72.0], [19.9, 73.0], [20.0, 74.0], [20.1, 75.0], [20.2, 76.0], [20.3, 77.0], [20.4, 78.0], [20.5, 79.0], [20.6, 80.0], [20.7, 81.0], [20.8, 82.0], [20.9, 83.0], [21.0, 84.0], [21.1, 85.0], [21.2, 86.0], [21.3, 87.0], [21.4, 88.0], [21.5, 89.0], [21.6, 90.0], [21.7, 91.0], [21.8, 92.0], [21.9, 93.0], [22.0, 93.0], [22.1, 94.0], [22.2, 95.0], [22.3, 96.0], [22.4, 98.0], [22.5, 99.0], [22.6, 100.0], [22.7, 101.0], [22.8, 101.0], [22.9, 102.0], [23.0, 103.0], [23.1, 104.0], [23.2, 104.0], [23.3, 105.0], [23.4, 106.0], [23.5, 107.0], [23.6, 108.0], [23.7, 108.0], [23.8, 109.0], [23.9, 110.0], [24.0, 111.0], [24.1, 111.0], [24.2, 112.0], [24.3, 113.0], [24.4, 114.0], [24.5, 115.0], [24.6, 116.0], [24.7, 117.0], [24.8, 118.0], [24.9, 119.0], [25.0, 120.0], [25.1, 121.0], [25.2, 122.0], [25.3, 123.0], [25.4, 123.0], [25.5, 124.0], [25.6, 125.0], [25.7, 125.0], [25.8, 126.0], [25.9, 127.0], [26.0, 128.0], [26.1, 129.0], [26.2, 129.0], [26.3, 130.0], [26.4, 132.0], [26.5, 132.0], [26.6, 133.0], [26.7, 134.0], [26.8, 135.0], [26.9, 135.0], [27.0, 136.0], [27.1, 137.0], [27.2, 137.0], [27.3, 138.0], [27.4, 139.0], [27.5, 140.0], [27.6, 141.0], [27.7, 142.0], [27.8, 142.0], [27.9, 143.0], [28.0, 144.0], [28.1, 145.0], [28.2, 146.0], [28.3, 146.0], [28.4, 147.0], [28.5, 148.0], [28.6, 148.0], [28.7, 149.0], [28.8, 150.0], [28.9, 151.0], [29.0, 151.0], [29.1, 152.0], [29.2, 152.0], [29.3, 153.0], [29.4, 154.0], [29.5, 154.0], [29.6, 155.0], [29.7, 155.0], [29.8, 156.0], [29.9, 156.0], [30.0, 157.0], [30.1, 158.0], [30.2, 159.0], [30.3, 160.0], [30.4, 161.0], [30.5, 161.0], [30.6, 162.0], [30.7, 163.0], [30.8, 164.0], [30.9, 165.0], [31.0, 166.0], [31.1, 167.0], [31.2, 168.0], [31.3, 169.0], [31.4, 170.0], [31.5, 171.0], [31.6, 171.0], [31.7, 172.0], [31.8, 173.0], [31.9, 173.0], [32.0, 174.0], [32.1, 175.0], [32.2, 176.0], [32.3, 177.0], [32.4, 178.0], [32.5, 179.0], [32.6, 179.0], [32.7, 181.0], [32.8, 182.0], [32.9, 183.0], [33.0, 183.0], [33.1, 184.0], [33.2, 185.0], [33.3, 186.0], [33.4, 187.0], [33.5, 187.0], [33.6, 188.0], [33.7, 189.0], [33.8, 189.0], [33.9, 190.0], [34.0, 191.0], [34.1, 192.0], [34.2, 193.0], [34.3, 194.0], [34.4, 195.0], [34.5, 195.0], [34.6, 196.0], [34.7, 197.0], [34.8, 198.0], [34.9, 198.0], [35.0, 199.0], [35.1, 200.0], [35.2, 201.0], [35.3, 201.0], [35.4, 202.0], [35.5, 203.0], [35.6, 203.0], [35.7, 204.0], [35.8, 205.0], [35.9, 206.0], [36.0, 207.0], [36.1, 208.0], [36.2, 208.0], [36.3, 209.0], [36.4, 210.0], [36.5, 211.0], [36.6, 212.0], [36.7, 212.0], [36.8, 213.0], [36.9, 214.0], [37.0, 215.0], [37.1, 216.0], [37.2, 217.0], [37.3, 217.0], [37.4, 218.0], [37.5, 219.0], [37.6, 219.0], [37.7, 220.0], [37.8, 220.0], [37.9, 221.0], [38.0, 222.0], [38.1, 222.0], [38.2, 223.0], [38.3, 224.0], [38.4, 224.0], [38.5, 224.0], [38.6, 225.0], [38.7, 225.0], [38.8, 226.0], [38.9, 226.0], [39.0, 227.0], [39.1, 228.0], [39.2, 228.0], [39.3, 229.0], [39.4, 230.0], [39.5, 230.0], [39.6, 231.0], [39.7, 231.0], [39.8, 232.0], [39.9, 232.0], [40.0, 233.0], [40.1, 234.0], [40.2, 234.0], [40.3, 235.0], [40.4, 235.0], [40.5, 236.0], [40.6, 237.0], [40.7, 237.0], [40.8, 237.0], [40.9, 238.0], [41.0, 239.0], [41.1, 239.0], [41.2, 240.0], [41.3, 240.0], [41.4, 241.0], [41.5, 241.0], [41.6, 242.0], [41.7, 242.0], [41.8, 242.0], [41.9, 243.0], [42.0, 243.0], [42.1, 244.0], [42.2, 245.0], [42.3, 245.0], [42.4, 246.0], [42.5, 247.0], [42.6, 247.0], [42.7, 248.0], [42.8, 248.0], [42.9, 249.0], [43.0, 249.0], [43.1, 249.0], [43.2, 250.0], [43.3, 250.0], [43.4, 251.0], [43.5, 251.0], [43.6, 252.0], [43.7, 252.0], [43.8, 252.0], [43.9, 253.0], [44.0, 253.0], [44.1, 253.0], [44.2, 254.0], [44.3, 254.0], [44.4, 254.0], [44.5, 255.0], [44.6, 255.0], [44.7, 256.0], [44.8, 256.0], [44.9, 256.0], [45.0, 257.0], [45.1, 257.0], [45.2, 257.0], [45.3, 258.0], [45.4, 258.0], [45.5, 258.0], [45.6, 258.0], [45.7, 259.0], [45.8, 259.0], [45.9, 259.0], [46.0, 259.0], [46.1, 260.0], [46.2, 260.0], [46.3, 260.0], [46.4, 261.0], [46.5, 261.0], [46.6, 261.0], [46.7, 262.0], [46.8, 262.0], [46.9, 262.0], [47.0, 263.0], [47.1, 263.0], [47.2, 264.0], [47.3, 264.0], [47.4, 264.0], [47.5, 265.0], [47.6, 265.0], [47.7, 265.0], [47.8, 266.0], [47.9, 266.0], [48.0, 266.0], [48.1, 267.0], [48.2, 267.0], [48.3, 267.0], [48.4, 268.0], [48.5, 268.0], [48.6, 268.0], [48.7, 269.0], [48.8, 269.0], [48.9, 269.0], [49.0, 270.0], [49.1, 270.0], [49.2, 271.0], [49.3, 271.0], [49.4, 271.0], [49.5, 271.0], [49.6, 272.0], [49.7, 272.0], [49.8, 272.0], [49.9, 273.0], [50.0, 273.0], [50.1, 273.0], [50.2, 273.0], [50.3, 274.0], [50.4, 274.0], [50.5, 274.0], [50.6, 275.0], [50.7, 275.0], [50.8, 275.0], [50.9, 275.0], [51.0, 276.0], [51.1, 276.0], [51.2, 276.0], [51.3, 277.0], [51.4, 277.0], [51.5, 277.0], [51.6, 277.0], [51.7, 277.0], [51.8, 277.0], [51.9, 278.0], [52.0, 278.0], [52.1, 278.0], [52.2, 278.0], [52.3, 279.0], [52.4, 279.0], [52.5, 279.0], [52.6, 280.0], [52.7, 280.0], [52.8, 280.0], [52.9, 280.0], [53.0, 281.0], [53.1, 281.0], [53.2, 281.0], [53.3, 281.0], [53.4, 282.0], [53.5, 282.0], [53.6, 282.0], [53.7, 282.0], [53.8, 283.0], [53.9, 283.0], [54.0, 283.0], [54.1, 284.0], [54.2, 284.0], [54.3, 284.0], [54.4, 284.0], [54.5, 284.0], [54.6, 285.0], [54.7, 285.0], [54.8, 285.0], [54.9, 285.0], [55.0, 285.0], [55.1, 286.0], [55.2, 286.0], [55.3, 286.0], [55.4, 286.0], [55.5, 287.0], [55.6, 287.0], [55.7, 287.0], [55.8, 287.0], [55.9, 288.0], [56.0, 288.0], [56.1, 288.0], [56.2, 289.0], [56.3, 289.0], [56.4, 289.0], [56.5, 289.0], [56.6, 290.0], [56.7, 290.0], [56.8, 290.0], [56.9, 291.0], [57.0, 291.0], [57.1, 291.0], [57.2, 291.0], [57.3, 292.0], [57.4, 292.0], [57.5, 292.0], [57.6, 293.0], [57.7, 293.0], [57.8, 293.0], [57.9, 293.0], [58.0, 294.0], [58.1, 294.0], [58.2, 294.0], [58.3, 295.0], [58.4, 295.0], [58.5, 295.0], [58.6, 295.0], [58.7, 295.0], [58.8, 296.0], [58.9, 296.0], [59.0, 296.0], [59.1, 296.0], [59.2, 297.0], [59.3, 297.0], [59.4, 297.0], [59.5, 297.0], [59.6, 298.0], [59.7, 298.0], [59.8, 298.0], [59.9, 298.0], [60.0, 299.0], [60.1, 299.0], [60.2, 299.0], [60.3, 299.0], [60.4, 299.0], [60.5, 300.0], [60.6, 300.0], [60.7, 300.0], [60.8, 300.0], [60.9, 301.0], [61.0, 301.0], [61.1, 301.0], [61.2, 301.0], [61.3, 302.0], [61.4, 302.0], [61.5, 302.0], [61.6, 302.0], [61.7, 302.0], [61.8, 303.0], [61.9, 303.0], [62.0, 303.0], [62.1, 303.0], [62.2, 303.0], [62.3, 304.0], [62.4, 304.0], [62.5, 304.0], [62.6, 304.0], [62.7, 305.0], [62.8, 305.0], [62.9, 305.0], [63.0, 305.0], [63.1, 305.0], [63.2, 306.0], [63.3, 306.0], [63.4, 306.0], [63.5, 306.0], [63.6, 306.0], [63.7, 307.0], [63.8, 307.0], [63.9, 307.0], [64.0, 307.0], [64.1, 307.0], [64.2, 308.0], [64.3, 308.0], [64.4, 308.0], [64.5, 308.0], [64.6, 309.0], [64.7, 309.0], [64.8, 309.0], [64.9, 309.0], [65.0, 310.0], [65.1, 310.0], [65.2, 310.0], [65.3, 310.0], [65.4, 311.0], [65.5, 311.0], [65.6, 311.0], [65.7, 311.0], [65.8, 312.0], [65.9, 312.0], [66.0, 312.0], [66.1, 312.0], [66.2, 313.0], [66.3, 313.0], [66.4, 313.0], [66.5, 314.0], [66.6, 314.0], [66.7, 314.0], [66.8, 314.0], [66.9, 315.0], [67.0, 315.0], [67.1, 315.0], [67.2, 315.0], [67.3, 316.0], [67.4, 316.0], [67.5, 316.0], [67.6, 316.0], [67.7, 317.0], [67.8, 317.0], [67.9, 317.0], [68.0, 318.0], [68.1, 318.0], [68.2, 318.0], [68.3, 319.0], [68.4, 319.0], [68.5, 320.0], [68.6, 320.0], [68.7, 320.0], [68.8, 320.0], [68.9, 321.0], [69.0, 321.0], [69.1, 321.0], [69.2, 321.0], [69.3, 322.0], [69.4, 322.0], [69.5, 322.0], [69.6, 322.0], [69.7, 323.0], [69.8, 323.0], [69.9, 323.0], [70.0, 323.0], [70.1, 324.0], [70.2, 324.0], [70.3, 324.0], [70.4, 325.0], [70.5, 325.0], [70.6, 325.0], [70.7, 325.0], [70.8, 326.0], [70.9, 326.0], [71.0, 326.0], [71.1, 327.0], [71.2, 327.0], [71.3, 327.0], [71.4, 327.0], [71.5, 327.0], [71.6, 328.0], [71.7, 328.0], [71.8, 328.0], [71.9, 328.0], [72.0, 329.0], [72.1, 329.0], [72.2, 329.0], [72.3, 329.0], [72.4, 330.0], [72.5, 330.0], [72.6, 330.0], [72.7, 330.0], [72.8, 331.0], [72.9, 331.0], [73.0, 331.0], [73.1, 332.0], [73.2, 332.0], [73.3, 332.0], [73.4, 333.0], [73.5, 333.0], [73.6, 333.0], [73.7, 334.0], [73.8, 334.0], [73.9, 334.0], [74.0, 335.0], [74.1, 335.0], [74.2, 335.0], [74.3, 336.0], [74.4, 336.0], [74.5, 336.0], [74.6, 336.0], [74.7, 337.0], [74.8, 337.0], [74.9, 337.0], [75.0, 338.0], [75.1, 338.0], [75.2, 338.0], [75.3, 338.0], [75.4, 339.0], [75.5, 339.0], [75.6, 339.0], [75.7, 340.0], [75.8, 340.0], [75.9, 340.0], [76.0, 341.0], [76.1, 341.0], [76.2, 341.0], [76.3, 342.0], [76.4, 342.0], [76.5, 342.0], [76.6, 342.0], [76.7, 343.0], [76.8, 343.0], [76.9, 343.0], [77.0, 343.0], [77.1, 344.0], [77.2, 344.0], [77.3, 344.0], [77.4, 344.0], [77.5, 345.0], [77.6, 345.0], [77.7, 345.0], [77.8, 345.0], [77.9, 346.0], [78.0, 346.0], [78.1, 346.0], [78.2, 346.0], [78.3, 347.0], [78.4, 347.0], [78.5, 347.0], [78.6, 347.0], [78.7, 348.0], [78.8, 348.0], [78.9, 348.0], [79.0, 349.0], [79.1, 349.0], [79.2, 349.0], [79.3, 350.0], [79.4, 350.0], [79.5, 350.0], [79.6, 350.0], [79.7, 351.0], [79.8, 351.0], [79.9, 352.0], [80.0, 352.0], [80.1, 352.0], [80.2, 353.0], [80.3, 353.0], [80.4, 353.0], [80.5, 353.0], [80.6, 354.0], [80.7, 354.0], [80.8, 355.0], [80.9, 355.0], [81.0, 355.0], [81.1, 355.0], [81.2, 356.0], [81.3, 356.0], [81.4, 357.0], [81.5, 357.0], [81.6, 358.0], [81.7, 358.0], [81.8, 358.0], [81.9, 359.0], [82.0, 359.0], [82.1, 360.0], [82.2, 360.0], [82.3, 361.0], [82.4, 361.0], [82.5, 362.0], [82.6, 362.0], [82.7, 363.0], [82.8, 363.0], [82.9, 364.0], [83.0, 364.0], [83.1, 365.0], [83.2, 365.0], [83.3, 365.0], [83.4, 366.0], [83.5, 366.0], [83.6, 366.0], [83.7, 367.0], [83.8, 367.0], [83.9, 367.0], [84.0, 368.0], [84.1, 368.0], [84.2, 368.0], [84.3, 369.0], [84.4, 369.0], [84.5, 369.0], [84.6, 369.0], [84.7, 370.0], [84.8, 370.0], [84.9, 370.0], [85.0, 371.0], [85.1, 371.0], [85.2, 371.0], [85.3, 372.0], [85.4, 372.0], [85.5, 373.0], [85.6, 373.0], [85.7, 373.0], [85.8, 374.0], [85.9, 374.0], [86.0, 375.0], [86.1, 375.0], [86.2, 376.0], [86.3, 377.0], [86.4, 377.0], [86.5, 378.0], [86.6, 378.0], [86.7, 379.0], [86.8, 380.0], [86.9, 380.0], [87.0, 381.0], [87.1, 381.0], [87.2, 382.0], [87.3, 383.0], [87.4, 383.0], [87.5, 384.0], [87.6, 384.0], [87.7, 385.0], [87.8, 386.0], [87.9, 386.0], [88.0, 387.0], [88.1, 387.0], [88.2, 388.0], [88.3, 388.0], [88.4, 389.0], [88.5, 390.0], [88.6, 390.0], [88.7, 391.0], [88.8, 392.0], [88.9, 393.0], [89.0, 394.0], [89.1, 395.0], [89.2, 396.0], [89.3, 398.0], [89.4, 399.0], [89.5, 400.0], [89.6, 402.0], [89.7, 404.0], [89.8, 406.0], [89.9, 408.0], [90.0, 410.0], [90.1, 411.0], [90.2, 413.0], [90.3, 414.0], [90.4, 415.0], [90.5, 416.0], [90.6, 418.0], [90.7, 420.0], [90.8, 422.0], [90.9, 424.0], [91.0, 426.0], [91.1, 428.0], [91.2, 430.0], [91.3, 433.0], [91.4, 436.0], [91.5, 440.0], [91.6, 445.0], [91.7, 450.0], [91.8, 455.0], [91.9, 460.0], [92.0, 465.0], [92.1, 470.0], [92.2, 476.0], [92.3, 481.0], [92.4, 486.0], [92.5, 490.0], [92.6, 493.0], [92.7, 496.0], [92.8, 498.0], [92.9, 501.0], [93.0, 502.0], [93.1, 505.0], [93.2, 507.0], [93.3, 509.0], [93.4, 512.0], [93.5, 514.0], [93.6, 517.0], [93.7, 519.0], [93.8, 523.0], [93.9, 526.0], [94.0, 531.0], [94.1, 537.0], [94.2, 546.0], [94.3, 552.0], [94.4, 561.0], [94.5, 572.0], [94.6, 583.0], [94.7, 592.0], [94.8, 601.0], [94.9, 609.0], [95.0, 614.0], [95.1, 618.0], [95.2, 622.0], [95.3, 627.0], [95.4, 632.0], [95.5, 638.0], [95.6, 645.0], [95.7, 654.0], [95.8, 663.0], [95.9, 669.0], [96.0, 676.0], [96.1, 680.0], [96.2, 684.0], [96.3, 689.0], [96.4, 694.0], [96.5, 702.0], [96.6, 710.0], [96.7, 716.0], [96.8, 722.0], [96.9, 739.0], [97.0, 748.0], [97.1, 756.0], [97.2, 762.0], [97.3, 767.0], [97.4, 771.0], [97.5, 774.0], [97.6, 777.0], [97.7, 781.0], [97.8, 784.0], [97.9, 788.0], [98.0, 793.0], [98.1, 797.0], [98.2, 803.0], [98.3, 809.0], [98.4, 815.0], [98.5, 824.0], [98.6, 832.0], [98.7, 855.0], [98.8, 919.0], [98.9, 963.0], [99.0, 990.0], [99.1, 1015.0], [99.2, 1051.0], [99.3, 1122.0], [99.4, 1168.0], [99.5, 1235.0], [99.6, 1272.0], [99.7, 1306.0], [99.8, 1450.0], [99.9, 1657.0]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[0.0, 1.0], [0.1, 2.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 3.0], [0.8, 3.0], [0.9, 3.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 5.0], [1.4, 5.0], [1.5, 5.0], [1.6, 5.0], [1.7, 6.0], [1.8, 6.0], [1.9, 6.0], [2.0, 6.0], [2.1, 6.0], [2.2, 6.0], [2.3, 6.0], [2.4, 6.0], [2.5, 6.0], [2.6, 6.0], [2.7, 7.0], [2.8, 7.0], [2.9, 7.0], [3.0, 7.0], [3.1, 7.0], [3.2, 7.0], [3.3, 7.0], [3.4, 7.0], [3.5, 7.0], [3.6, 7.0], [3.7, 7.0], [3.8, 8.0], [3.9, 8.0], [4.0, 8.0], [4.1, 8.0], [4.2, 8.0], [4.3, 8.0], [4.4, 8.0], [4.5, 8.0], [4.6, 8.0], [4.7, 8.0], [4.8, 8.0], [4.9, 8.0], [5.0, 9.0], [5.1, 9.0], [5.2, 9.0], [5.3, 9.0], [5.4, 9.0], [5.5, 9.0], [5.6, 9.0], [5.7, 9.0], [5.8, 9.0], [5.9, 9.0], [6.0, 9.0], [6.1, 9.0], [6.2, 10.0], [6.3, 10.0], [6.4, 10.0], [6.5, 10.0], [6.6, 10.0], [6.7, 10.0], [6.8, 10.0], [6.9, 10.0], [7.0, 10.0], [7.1, 10.0], [7.2, 10.0], [7.3, 11.0], [7.4, 11.0], [7.5, 11.0], [7.6, 11.0], [7.7, 11.0], [7.8, 11.0], [7.9, 11.0], [8.0, 11.0], [8.1, 11.0], [8.2, 11.0], [8.3, 12.0], [8.4, 12.0], [8.5, 12.0], [8.6, 12.0], [8.7, 12.0], [8.8, 12.0], [8.9, 12.0], [9.0, 13.0], [9.1, 13.0], [9.2, 13.0], [9.3, 13.0], [9.4, 13.0], [9.5, 13.0], [9.6, 14.0], [9.7, 14.0], [9.8, 14.0], [9.9, 14.0], [10.0, 14.0], [10.1, 14.0], [10.2, 15.0], [10.3, 15.0], [10.4, 15.0], [10.5, 15.0], [10.6, 15.0], [10.7, 16.0], [10.8, 16.0], [10.9, 16.0], [11.0, 16.0], [11.1, 17.0], [11.2, 17.0], [11.3, 17.0], [11.4, 17.0], [11.5, 18.0], [11.6, 18.0], [11.7, 18.0], [11.8, 18.0], [11.9, 18.0], [12.0, 19.0], [12.1, 19.0], [12.2, 19.0], [12.3, 19.0], [12.4, 20.0], [12.5, 20.0], [12.6, 20.0], [12.7, 20.0], [12.8, 20.0], [12.9, 20.0], [13.0, 21.0], [13.1, 21.0], [13.2, 21.0], [13.3, 21.0], [13.4, 21.0], [13.5, 22.0], [13.6, 22.0], [13.7, 22.0], [13.8, 22.0], [13.9, 23.0], [14.0, 23.0], [14.1, 23.0], [14.2, 23.0], [14.3, 24.0], [14.4, 24.0], [14.5, 24.0], [14.6, 24.0], [14.7, 25.0], [14.8, 25.0], [14.9, 25.0], [15.0, 25.0], [15.1, 25.0], [15.2, 26.0], [15.3, 26.0], [15.4, 26.0], [15.5, 26.0], [15.6, 27.0], [15.7, 27.0], [15.8, 27.0], [15.9, 28.0], [16.0, 28.0], [16.1, 28.0], [16.2, 29.0], [16.3, 29.0], [16.4, 29.0], [16.5, 30.0], [16.6, 30.0], [16.7, 30.0], [16.8, 31.0], [16.9, 31.0], [17.0, 32.0], [17.1, 32.0], [17.2, 33.0], [17.3, 33.0], [17.4, 33.0], [17.5, 34.0], [17.6, 34.0], [17.7, 34.0], [17.8, 35.0], [17.9, 35.0], [18.0, 35.0], [18.1, 36.0], [18.2, 36.0], [18.3, 36.0], [18.4, 37.0], [18.5, 37.0], [18.6, 38.0], [18.7, 38.0], [18.8, 39.0], [18.9, 39.0], [19.0, 40.0], [19.1, 40.0], [19.2, 41.0], [19.3, 41.0], [19.4, 41.0], [19.5, 42.0], [19.6, 42.0], [19.7, 43.0], [19.8, 43.0], [19.9, 44.0], [20.0, 44.0], [20.1, 45.0], [20.2, 46.0], [20.3, 46.0], [20.4, 47.0], [20.5, 47.0], [20.6, 48.0], [20.7, 48.0], [20.8, 49.0], [20.9, 49.0], [21.0, 49.0], [21.1, 50.0], [21.2, 50.0], [21.3, 51.0], [21.4, 51.0], [21.5, 52.0], [21.6, 52.0], [21.7, 53.0], [21.8, 53.0], [21.9, 54.0], [22.0, 54.0], [22.1, 55.0], [22.2, 56.0], [22.3, 56.0], [22.4, 57.0], [22.5, 57.0], [22.6, 58.0], [22.7, 58.0], [22.8, 59.0], [22.9, 59.0], [23.0, 60.0], [23.1, 60.0], [23.2, 61.0], [23.3, 61.0], [23.4, 62.0], [23.5, 62.0], [23.6, 63.0], [23.7, 64.0], [23.8, 64.0], [23.9, 65.0], [24.0, 65.0], [24.1, 66.0], [24.2, 66.0], [24.3, 66.0], [24.4, 67.0], [24.5, 67.0], [24.6, 67.0], [24.7, 68.0], [24.8, 68.0], [24.9, 68.0], [25.0, 69.0], [25.1, 69.0], [25.2, 69.0], [25.3, 70.0], [25.4, 70.0], [25.5, 70.0], [25.6, 71.0], [25.7, 71.0], [25.8, 72.0], [25.9, 72.0], [26.0, 72.0], [26.1, 73.0], [26.2, 73.0], [26.3, 73.0], [26.4, 74.0], [26.5, 74.0], [26.6, 75.0], [26.7, 75.0], [26.8, 75.0], [26.9, 76.0], [27.0, 76.0], [27.1, 76.0], [27.2, 77.0], [27.3, 77.0], [27.4, 78.0], [27.5, 78.0], [27.6, 79.0], [27.7, 79.0], [27.8, 79.0], [27.9, 80.0], [28.0, 80.0], [28.1, 81.0], [28.2, 81.0], [28.3, 81.0], [28.4, 82.0], [28.5, 82.0], [28.6, 82.0], [28.7, 83.0], [28.8, 83.0], [28.9, 83.0], [29.0, 83.0], [29.1, 84.0], [29.2, 84.0], [29.3, 84.0], [29.4, 85.0], [29.5, 85.0], [29.6, 86.0], [29.7, 86.0], [29.8, 86.0], [29.9, 86.0], [30.0, 87.0], [30.1, 87.0], [30.2, 88.0], [30.3, 88.0], [30.4, 88.0], [30.5, 88.0], [30.6, 89.0], [30.7, 89.0], [30.8, 89.0], [30.9, 90.0], [31.0, 90.0], [31.1, 90.0], [31.2, 91.0], [31.3, 91.0], [31.4, 91.0], [31.5, 91.0], [31.6, 92.0], [31.7, 92.0], [31.8, 92.0], [31.9, 92.0], [32.0, 93.0], [32.1, 93.0], [32.2, 93.0], [32.3, 94.0], [32.4, 94.0], [32.5, 95.0], [32.6, 95.0], [32.7, 95.0], [32.8, 96.0], [32.9, 96.0], [33.0, 96.0], [33.1, 97.0], [33.2, 97.0], [33.3, 98.0], [33.4, 98.0], [33.5, 98.0], [33.6, 99.0], [33.7, 99.0], [33.8, 99.0], [33.9, 100.0], [34.0, 100.0], [34.1, 101.0], [34.2, 101.0], [34.3, 101.0], [34.4, 101.0], [34.5, 102.0], [34.6, 102.0], [34.7, 102.0], [34.8, 103.0], [34.9, 103.0], [35.0, 103.0], [35.1, 104.0], [35.2, 104.0], [35.3, 104.0], [35.4, 105.0], [35.5, 105.0], [35.6, 105.0], [35.7, 106.0], [35.8, 106.0], [35.9, 106.0], [36.0, 106.0], [36.1, 107.0], [36.2, 107.0], [36.3, 107.0], [36.4, 108.0], [36.5, 108.0], [36.6, 108.0], [36.7, 108.0], [36.8, 109.0], [36.9, 109.0], [37.0, 109.0], [37.1, 109.0], [37.2, 110.0], [37.3, 110.0], [37.4, 110.0], [37.5, 110.0], [37.6, 111.0], [37.7, 111.0], [37.8, 111.0], [37.9, 111.0], [38.0, 112.0], [38.1, 112.0], [38.2, 112.0], [38.3, 112.0], [38.4, 113.0], [38.5, 113.0], [38.6, 113.0], [38.7, 114.0], [38.8, 114.0], [38.9, 114.0], [39.0, 115.0], [39.1, 115.0], [39.2, 115.0], [39.3, 116.0], [39.4, 116.0], [39.5, 116.0], [39.6, 116.0], [39.7, 117.0], [39.8, 117.0], [39.9, 117.0], [40.0, 118.0], [40.1, 118.0], [40.2, 118.0], [40.3, 119.0], [40.4, 119.0], [40.5, 119.0], [40.6, 119.0], [40.7, 119.0], [40.8, 120.0], [40.9, 120.0], [41.0, 120.0], [41.1, 121.0], [41.2, 121.0], [41.3, 121.0], [41.4, 121.0], [41.5, 122.0], [41.6, 122.0], [41.7, 122.0], [41.8, 123.0], [41.9, 123.0], [42.0, 123.0], [42.1, 123.0], [42.2, 124.0], [42.3, 124.0], [42.4, 124.0], [42.5, 125.0], [42.6, 125.0], [42.7, 125.0], [42.8, 126.0], [42.9, 126.0], [43.0, 126.0], [43.1, 127.0], [43.2, 127.0], [43.3, 127.0], [43.4, 127.0], [43.5, 128.0], [43.6, 128.0], [43.7, 128.0], [43.8, 128.0], [43.9, 129.0], [44.0, 129.0], [44.1, 129.0], [44.2, 129.0], [44.3, 130.0], [44.4, 130.0], [44.5, 130.0], [44.6, 130.0], [44.7, 130.0], [44.8, 130.0], [44.9, 131.0], [45.0, 131.0], [45.1, 131.0], [45.2, 131.0], [45.3, 132.0], [45.4, 132.0], [45.5, 132.0], [45.6, 132.0], [45.7, 132.0], [45.8, 133.0], [45.9, 133.0], [46.0, 133.0], [46.1, 133.0], [46.2, 133.0], [46.3, 134.0], [46.4, 134.0], [46.5, 134.0], [46.6, 134.0], [46.7, 135.0], [46.8, 135.0], [46.9, 135.0], [47.0, 135.0], [47.1, 135.0], [47.2, 136.0], [47.3, 136.0], [47.4, 136.0], [47.5, 136.0], [47.6, 136.0], [47.7, 137.0], [47.8, 137.0], [47.9, 137.0], [48.0, 137.0], [48.1, 138.0], [48.2, 138.0], [48.3, 138.0], [48.4, 138.0], [48.5, 139.0], [48.6, 139.0], [48.7, 139.0], [48.8, 140.0], [48.9, 140.0], [49.0, 140.0], [49.1, 140.0], [49.2, 141.0], [49.3, 141.0], [49.4, 141.0], [49.5, 141.0], [49.6, 142.0], [49.7, 142.0], [49.8, 142.0], [49.9, 142.0], [50.0, 143.0], [50.1, 143.0], [50.2, 143.0], [50.3, 143.0], [50.4, 144.0], [50.5, 144.0], [50.6, 144.0], [50.7, 144.0], [50.8, 145.0], [50.9, 145.0], [51.0, 145.0], [51.1, 145.0], [51.2, 145.0], [51.3, 146.0], [51.4, 146.0], [51.5, 146.0], [51.6, 146.0], [51.7, 147.0], [51.8, 147.0], [51.9, 147.0], [52.0, 147.0], [52.1, 147.0], [52.2, 148.0], [52.3, 148.0], [52.4, 148.0], [52.5, 148.0], [52.6, 148.0], [52.7, 149.0], [52.8, 149.0], [52.9, 149.0], [53.0, 149.0], [53.1, 149.0], [53.2, 149.0], [53.3, 150.0], [53.4, 150.0], [53.5, 150.0], [53.6, 150.0], [53.7, 150.0], [53.8, 151.0], [53.9, 151.0], [54.0, 151.0], [54.1, 151.0], [54.2, 151.0], [54.3, 151.0], [54.4, 151.0], [54.5, 152.0], [54.6, 152.0], [54.7, 152.0], [54.8, 152.0], [54.9, 152.0], [55.0, 152.0], [55.1, 153.0], [55.2, 153.0], [55.3, 153.0], [55.4, 153.0], [55.5, 153.0], [55.6, 153.0], [55.7, 154.0], [55.8, 154.0], [55.9, 154.0], [56.0, 154.0], [56.1, 154.0], [56.2, 154.0], [56.3, 154.0], [56.4, 155.0], [56.5, 155.0], [56.6, 155.0], [56.7, 155.0], [56.8, 155.0], [56.9, 156.0], [57.0, 156.0], [57.1, 156.0], [57.2, 156.0], [57.3, 156.0], [57.4, 156.0], [57.5, 156.0], [57.6, 157.0], [57.7, 157.0], [57.8, 157.0], [57.9, 157.0], [58.0, 157.0], [58.1, 157.0], [58.2, 158.0], [58.3, 158.0], [58.4, 158.0], [58.5, 158.0], [58.6, 158.0], [58.7, 158.0], [58.8, 159.0], [58.9, 159.0], [59.0, 159.0], [59.1, 159.0], [59.2, 159.0], [59.3, 159.0], [59.4, 160.0], [59.5, 160.0], [59.6, 160.0], [59.7, 160.0], [59.8, 160.0], [59.9, 161.0], [60.0, 161.0], [60.1, 161.0], [60.2, 161.0], [60.3, 161.0], [60.4, 162.0], [60.5, 162.0], [60.6, 162.0], [60.7, 162.0], [60.8, 162.0], [60.9, 163.0], [61.0, 163.0], [61.1, 163.0], [61.2, 163.0], [61.3, 163.0], [61.4, 163.0], [61.5, 164.0], [61.6, 164.0], [61.7, 164.0], [61.8, 164.0], [61.9, 164.0], [62.0, 165.0], [62.1, 165.0], [62.2, 165.0], [62.3, 165.0], [62.4, 165.0], [62.5, 166.0], [62.6, 166.0], [62.7, 166.0], [62.8, 166.0], [62.9, 166.0], [63.0, 166.0], [63.1, 167.0], [63.2, 167.0], [63.3, 167.0], [63.4, 167.0], [63.5, 167.0], [63.6, 167.0], [63.7, 168.0], [63.8, 168.0], [63.9, 168.0], [64.0, 168.0], [64.1, 168.0], [64.2, 168.0], [64.3, 168.0], [64.4, 169.0], [64.5, 169.0], [64.6, 169.0], [64.7, 169.0], [64.8, 169.0], [64.9, 169.0], [65.0, 169.0], [65.1, 170.0], [65.2, 170.0], [65.3, 170.0], [65.4, 170.0], [65.5, 170.0], [65.6, 170.0], [65.7, 170.0], [65.8, 171.0], [65.9, 171.0], [66.0, 171.0], [66.1, 171.0], [66.2, 171.0], [66.3, 171.0], [66.4, 171.0], [66.5, 171.0], [66.6, 172.0], [66.7, 172.0], [66.8, 172.0], [66.9, 172.0], [67.0, 172.0], [67.1, 172.0], [67.2, 173.0], [67.3, 173.0], [67.4, 173.0], [67.5, 173.0], [67.6, 173.0], [67.7, 173.0], [67.8, 173.0], [67.9, 173.0], [68.0, 174.0], [68.1, 174.0], [68.2, 174.0], [68.3, 174.0], [68.4, 174.0], [68.5, 174.0], [68.6, 174.0], [68.7, 175.0], [68.8, 175.0], [68.9, 175.0], [69.0, 175.0], [69.1, 175.0], [69.2, 176.0], [69.3, 176.0], [69.4, 176.0], [69.5, 176.0], [69.6, 176.0], [69.7, 176.0], [69.8, 176.0], [69.9, 177.0], [70.0, 177.0], [70.1, 177.0], [70.2, 177.0], [70.3, 177.0], [70.4, 177.0], [70.5, 178.0], [70.6, 178.0], [70.7, 178.0], [70.8, 178.0], [70.9, 178.0], [71.0, 178.0], [71.1, 179.0], [71.2, 179.0], [71.3, 179.0], [71.4, 179.0], [71.5, 179.0], [71.6, 179.0], [71.7, 179.0], [71.8, 180.0], [71.9, 180.0], [72.0, 180.0], [72.1, 180.0], [72.2, 180.0], [72.3, 180.0], [72.4, 181.0], [72.5, 181.0], [72.6, 181.0], [72.7, 181.0], [72.8, 181.0], [72.9, 181.0], [73.0, 182.0], [73.1, 182.0], [73.2, 182.0], [73.3, 182.0], [73.4, 182.0], [73.5, 183.0], [73.6, 183.0], [73.7, 183.0], [73.8, 183.0], [73.9, 184.0], [74.0, 184.0], [74.1, 184.0], [74.2, 184.0], [74.3, 185.0], [74.4, 185.0], [74.5, 185.0], [74.6, 185.0], [74.7, 185.0], [74.8, 186.0], [74.9, 186.0], [75.0, 186.0], [75.1, 186.0], [75.2, 186.0], [75.3, 186.0], [75.4, 187.0], [75.5, 187.0], [75.6, 187.0], [75.7, 187.0], [75.8, 187.0], [75.9, 187.0], [76.0, 188.0], [76.1, 188.0], [76.2, 188.0], [76.3, 188.0], [76.4, 188.0], [76.5, 189.0], [76.6, 189.0], [76.7, 189.0], [76.8, 189.0], [76.9, 189.0], [77.0, 189.0], [77.1, 190.0], [77.2, 190.0], [77.3, 190.0], [77.4, 190.0], [77.5, 190.0], [77.6, 190.0], [77.7, 191.0], [77.8, 191.0], [77.9, 191.0], [78.0, 191.0], [78.1, 191.0], [78.2, 192.0], [78.3, 192.0], [78.4, 192.0], [78.5, 192.0], [78.6, 192.0], [78.7, 192.0], [78.8, 193.0], [78.9, 193.0], [79.0, 193.0], [79.1, 193.0], [79.2, 193.0], [79.3, 194.0], [79.4, 194.0], [79.5, 194.0], [79.6, 194.0], [79.7, 195.0], [79.8, 195.0], [79.9, 195.0], [80.0, 195.0], [80.1, 196.0], [80.2, 196.0], [80.3, 196.0], [80.4, 196.0], [80.5, 197.0], [80.6, 197.0], [80.7, 197.0], [80.8, 197.0], [80.9, 198.0], [81.0, 198.0], [81.1, 198.0], [81.2, 199.0], [81.3, 199.0], [81.4, 199.0], [81.5, 200.0], [81.6, 200.0], [81.7, 200.0], [81.8, 201.0], [81.9, 201.0], [82.0, 201.0], [82.1, 202.0], [82.2, 202.0], [82.3, 203.0], [82.4, 203.0], [82.5, 203.0], [82.6, 204.0], [82.7, 204.0], [82.8, 205.0], [82.9, 205.0], [83.0, 206.0], [83.1, 207.0], [83.2, 207.0], [83.3, 208.0], [83.4, 209.0], [83.5, 210.0], [83.6, 210.0], [83.7, 211.0], [83.8, 212.0], [83.9, 213.0], [84.0, 214.0], [84.1, 215.0], [84.2, 217.0], [84.3, 219.0], [84.4, 221.0], [84.5, 222.0], [84.6, 223.0], [84.7, 226.0], [84.8, 227.0], [84.9, 229.0], [85.0, 231.0], [85.1, 233.0], [85.2, 236.0], [85.3, 238.0], [85.4, 240.0], [85.5, 243.0], [85.6, 245.0], [85.7, 248.0], [85.8, 250.0], [85.9, 253.0], [86.0, 255.0], [86.1, 258.0], [86.2, 261.0], [86.3, 264.0], [86.4, 267.0], [86.5, 270.0], [86.6, 273.0], [86.7, 275.0], [86.8, 279.0], [86.9, 282.0], [87.0, 285.0], [87.1, 288.0], [87.2, 291.0], [87.3, 294.0], [87.4, 297.0], [87.5, 299.0], [87.6, 302.0], [87.7, 305.0], [87.8, 308.0], [87.9, 311.0], [88.0, 314.0], [88.1, 317.0], [88.2, 321.0], [88.3, 325.0], [88.4, 329.0], [88.5, 332.0], [88.6, 335.0], [88.7, 340.0], [88.8, 343.0], [88.9, 347.0], [89.0, 352.0], [89.1, 357.0], [89.2, 360.0], [89.3, 365.0], [89.4, 369.0], [89.5, 373.0], [89.6, 376.0], [89.7, 378.0], [89.8, 381.0], [89.9, 384.0], [90.0, 387.0], [90.1, 389.0], [90.2, 392.0], [90.3, 395.0], [90.4, 397.0], [90.5, 401.0], [90.6, 404.0], [90.7, 407.0], [90.8, 409.0], [90.9, 412.0], [91.0, 414.0], [91.1, 416.0], [91.2, 418.0], [91.3, 421.0], [91.4, 423.0], [91.5, 427.0], [91.6, 431.0], [91.7, 435.0], [91.8, 440.0], [91.9, 446.0], [92.0, 451.0], [92.1, 456.0], [92.2, 461.0], [92.3, 466.0], [92.4, 472.0], [92.5, 478.0], [92.6, 482.0], [92.7, 486.0], [92.8, 489.0], [92.9, 492.0], [93.0, 494.0], [93.1, 496.0], [93.2, 498.0], [93.3, 500.0], [93.4, 503.0], [93.5, 505.0], [93.6, 508.0], [93.7, 510.0], [93.8, 512.0], [93.9, 515.0], [94.0, 519.0], [94.1, 522.0], [94.2, 527.0], [94.3, 535.0], [94.4, 542.0], [94.5, 549.0], [94.6, 555.0], [94.7, 561.0], [94.8, 566.0], [94.9, 571.0], [95.0, 575.0], [95.1, 578.0], [95.2, 583.0], [95.3, 585.0], [95.4, 588.0], [95.5, 590.0], [95.6, 593.0], [95.7, 596.0], [95.8, 599.0], [95.9, 603.0], [96.0, 606.0], [96.1, 609.0], [96.2, 612.0], [96.3, 617.0], [96.4, 622.0], [96.5, 627.0], [96.6, 634.0], [96.7, 639.0], [96.8, 644.0], [96.9, 650.0], [97.0, 657.0], [97.1, 661.0], [97.2, 665.0], [97.3, 669.0], [97.4, 672.0], [97.5, 675.0], [97.6, 679.0], [97.7, 683.0], [97.8, 687.0], [97.9, 691.0], [98.0, 694.0], [98.1, 698.0], [98.2, 702.0], [98.3, 707.0], [98.4, 714.0], [98.5, 721.0], [98.6, 740.0], [98.7, 789.0], [98.8, 847.0], [98.9, 893.0], [99.0, 944.0], [99.1, 974.0], [99.2, 1011.0], [99.3, 1077.0], [99.4, 1110.0], [99.5, 1149.0], [99.6, 1173.0], [99.7, 1204.0], [99.8, 1362.0], [99.9, 1614.0]], "isOverall": false, "label": "Album Read", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 35112.0, "series": [{"data": [[0.0, 35112.0], [100.0, 30496.0], [200.0, 1542.0], [500.0, 18.0]], "isOverall": false, "label": "Browse Page", "isController": false}, {"data": [[0.0, 15172.0], [600.0, 1135.0], [700.0, 1113.0], [800.0, 433.0], [900.0, 177.0], [1000.0, 156.0], [1100.0, 131.0], [1200.0, 143.0], [1300.0, 77.0], [1400.0, 13.0], [1500.0, 21.0], [100.0, 8363.0], [1600.0, 47.0], [1700.0, 22.0], [1800.0, 13.0], [1900.0, 4.0], [2000.0, 4.0], [2100.0, 3.0], [2200.0, 4.0], [2300.0, 4.0], [2400.0, 2.0], [2600.0, 1.0], [200.0, 17027.0], [300.0, 19502.0], [400.0, 2275.0], [500.0, 1299.0]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[0.0, 22644.0], [600.0, 1559.0], [700.0, 387.0], [800.0, 131.0], [900.0, 180.0], [1000.0, 130.0], [1100.0, 205.0], [1200.0, 70.0], [1300.0, 18.0], [1400.0, 30.0], [1500.0, 16.0], [100.0, 31837.0], [1600.0, 37.0], [1700.0, 17.0], [1800.0, 2.0], [1900.0, 5.0], [2000.0, 4.0], [2100.0, 3.0], [2200.0, 5.0], [2300.0, 2.0], [2500.0, 1.0], [200.0, 4076.0], [300.0, 1981.0], [400.0, 1863.0], [500.0, 1715.0]], "isOverall": false, "label": "Album Read", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 91.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 94815.0, "series": [{"data": [[0.0, 34775.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 4405.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 91.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 94815.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 318.71796186508885, "minX": 1.61184096E12, "maxY": 500.0, "series": [{"data": [[1.61184102E12, 500.0], [1.61184096E12, 431.9583500487124], [1.61184108E12, 318.71796186508885]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61184108E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.0, "maxY": 705.9642857142856, "series": [{"data": [[2.0, 2.0], [6.0, 2.0], [7.0, 3.0], [8.0, 26.5], [9.0, 3.0], [10.0, 2.6666666666666665], [11.0, 2.5], [12.0, 2.5], [13.0, 2.25], [14.0, 3.0], [15.0, 3.0], [16.0, 3.5], [17.0, 2.833333333333333], [18.0, 3.0], [19.0, 2.5], [20.0, 3.0], [21.0, 2.6666666666666665], [22.0, 2.666666666666667], [23.0, 2.2857142857142856], [24.0, 3.0], [25.0, 2.5], [26.0, 3.0], [27.0, 3.0], [28.0, 3.1250000000000004], [29.0, 2.6], [30.0, 2.5], [31.0, 2.3333333333333335], [32.0, 2.4000000000000004], [33.0, 2.8], [34.0, 3.0], [35.0, 2.2], [36.0, 2.5], [37.0, 2.3333333333333335], [38.0, 2.4285714285714284], [39.0, 2.6666666666666665], [40.0, 2.625], [41.0, 2.4000000000000004], [42.0, 2.571428571428571], [43.0, 2.4444444444444446], [44.0, 2.4285714285714284], [45.0, 3.0], [46.0, 2.833333333333333], [47.0, 3.4], [48.0, 2.4444444444444446], [49.0, 2.6666666666666665], [50.0, 2.666666666666667], [51.0, 3.111111111111111], [52.0, 2.411764705882353], [53.0, 2.75], [54.0, 2.875], [55.0, 2.6153846153846154], [56.0, 2.9], [57.0, 2.5000000000000004], [58.0, 2.8095238095238098], [59.0, 3.0000000000000004], [60.0, 2.571428571428571], [61.0, 2.333333333333333], [62.0, 2.4000000000000004], [63.0, 2.588235294117647], [64.0, 3.4999999999999996], [65.0, 3.285714285714286], [66.0, 2.454545454545454], [67.0, 2.3333333333333335], [68.0, 2.307692307692308], [69.0, 2.9523809523809526], [70.0, 3.0625], [71.0, 2.727272727272727], [72.0, 3.8823529411764715], [73.0, 2.388888888888889], [74.0, 2.3333333333333335], [75.0, 3.411764705882353], [76.0, 2.4666666666666663], [77.0, 2.727272727272727], [78.0, 3.2222222222222223], [79.0, 2.8888888888888884], [80.0, 3.5294117647058827], [81.0, 3.4000000000000004], [82.0, 3.666666666666666], [83.0, 2.7499999999999996], [84.0, 2.7333333333333334], [85.0, 3.1538461538461537], [86.0, 2.625], [87.0, 3.375], [88.0, 3.071428571428571], [89.0, 2.9285714285714284], [90.0, 3.1578947368421053], [91.0, 2.8125000000000004], [92.0, 2.85], [93.0, 2.6875000000000004], [94.0, 3.090909090909091], [95.0, 3.1176470588235294], [96.0, 3.5789473684210527], [97.0, 2.9285714285714293], [98.0, 3.909090909090909], [99.0, 3.6363636363636376], [100.0, 2.8333333333333335], [101.0, 2.818181818181818], [102.0, 2.909090909090909], [103.0, 3.714285714285714], [104.0, 3.3928571428571432], [105.0, 3.0000000000000004], [106.0, 3.5384615384615383], [107.0, 2.9999999999999996], [108.0, 2.7222222222222223], [109.0, 2.936170212765958], [110.0, 3.3000000000000003], [111.0, 3.588235294117647], [112.0, 3.535714285714286], [113.0, 3.1818181818181817], [114.0, 3.3333333333333335], [115.0, 3.44], [116.0, 3.5384615384615388], [117.0, 3.4000000000000004], [118.0, 3.4444444444444446], [119.0, 3.5], [120.0, 2.9999999999999996], [121.0, 2.836734693877551], [122.0, 2.9166666666666665], [123.0, 3.260869565217392], [124.0, 4.0], [125.0, 5.241379310344827], [126.0, 3.6315789473684212], [127.0, 3.1034482758620685], [128.0, 3.3076923076923075], [129.0, 3.4166666666666665], [130.0, 3.5849056603773577], [131.0, 3.272727272727274], [132.0, 3.2500000000000004], [133.0, 2.8823529411764706], [134.0, 3.333333333333334], [135.0, 3.111111111111111], [136.0, 5.199999999999999], [137.0, 4.642857142857142], [138.0, 3.6551724137931028], [139.0, 3.8815789473684212], [140.0, 3.15625], [141.0, 4.466666666666666], [142.0, 4.64], [143.0, 2.9375], [144.0, 3.5000000000000013], [145.0, 3.3846153846153846], [146.0, 3.3404255319148937], [147.0, 3.8124999999999996], [148.0, 3.465116279069767], [149.0, 3.2222222222222228], [150.0, 3.918918918918919], [151.0, 3.3548387096774195], [152.0, 3.5531914893617027], [153.0, 3.823529411764706], [154.0, 5.000000000000001], [155.0, 6.553191489361702], [156.0, 4.689655172413794], [157.0, 3.1666666666666665], [158.0, 3.8823529411764706], [159.0, 2.846153846153846], [160.0, 5.5384615384615365], [161.0, 4.863636363636364], [162.0, 4.4], [163.0, 4.521739130434784], [164.0, 4.563636363636365], [165.0, 4.055555555555556], [166.0, 3.916666666666667], [167.0, 4.413793103448276], [168.0, 3.5416666666666665], [169.0, 4.359375], [170.0, 3.558823529411764], [171.0, 4.758620689655173], [172.0, 4.833333333333333], [173.0, 4.257142857142857], [174.0, 5.480000000000001], [175.0, 4.294117647058823], [176.0, 4.761904761904762], [177.0, 5.470588235294116], [178.0, 3.642857142857143], [179.0, 3.733333333333333], [180.0, 4.592105263157895], [181.0, 4.444444444444445], [182.0, 4.074074074074073], [183.0, 3.6153846153846154], [184.0, 3.2083333333333335], [185.0, 4.043478260869565], [186.0, 4.919999999999998], [187.0, 4.267857142857142], [188.0, 3.9499999999999993], [189.0, 4.553191489361702], [190.0, 3.6470588235294117], [191.0, 7.874999999999995], [192.0, 4.935483870967742], [193.0, 4.178571428571429], [194.0, 3.0588235294117645], [195.0, 3.9000000000000004], [196.0, 6.3999999999999995], [197.0, 5.511627906976744], [198.0, 8.656249999999998], [199.0, 6.451612903225806], [200.0, 5.360000000000001], [201.0, 9.473684210526315], [202.0, 6.132530120481927], [203.0, 8.25], [204.0, 5.562500000000001], [205.0, 5.075949367088607], [206.0, 6.228571428571428], [207.0, 6.555555555555556], [208.0, 4.3809523809523805], [209.0, 4.624999999999998], [210.0, 4.619047619047619], [211.0, 5.358490566037735], [212.0, 3.9000000000000004], [213.0, 5.790123456790124], [214.0, 7.441176470588235], [215.0, 6.999999999999999], [216.0, 6.565217391304348], [217.0, 5.42105263157895], [218.0, 5.470588235294118], [219.0, 7.348837209302329], [220.0, 8.343750000000002], [221.0, 5.819672131147541], [222.0, 3.942857142857143], [223.0, 3.723404255319149], [224.0, 6.7222222222222205], [225.0, 5.903225806451611], [226.0, 5.6571428571428575], [227.0, 5.464285714285715], [228.0, 4.313725490196079], [229.0, 6.222222222222222], [230.0, 6.596153846153845], [231.0, 7.58974358974359], [232.0, 5.757575757575757], [233.0, 5.1891891891891895], [234.0, 4.000000000000001], [235.0, 10.065573770491802], [236.0, 8.135135135135135], [237.0, 7.441176470588234], [238.0, 7.695652173913046], [239.0, 8.708333333333334], [240.0, 8.456521739130435], [241.0, 6.46153846153846], [242.0, 7.474747474747475], [243.0, 7.499999999999997], [244.0, 4.862068965517242], [245.0, 5.3999999999999995], [246.0, 4.368421052631579], [247.0, 6.761904761904762], [248.0, 7.069767441860467], [249.0, 6.50909090909091], [250.0, 7.233766233766234], [251.0, 8.473684210526315], [252.0, 8.6875], [253.0, 5.3], [254.0, 5.461538461538462], [255.0, 5.596491228070176], [257.0, 13.94736842105263], [256.0, 7.161290322580644], [258.0, 12.96551724137931], [259.0, 7.266666666666663], [260.0, 9.824561403508772], [261.0, 7.699999999999999], [262.0, 5.962962962962963], [263.0, 7.848484848484852], [264.0, 5.0], [270.0, 6.75], [271.0, 9.487179487179487], [268.0, 11.347826086956522], [269.0, 13.791666666666668], [265.0, 7.800000000000002], [266.0, 16.25], [267.0, 10.593406593406591], [273.0, 6.68], [272.0, 8.058823529411764], [274.0, 6.255813953488371], [275.0, 7.59375], [276.0, 8.891304347826088], [277.0, 10.296296296296296], [278.0, 7.394736842105264], [279.0, 4.774193548387097], [280.0, 5.796296296296298], [286.0, 7.422222222222223], [287.0, 15.09090909090909], [284.0, 7.693877551020407], [285.0, 6.90625], [281.0, 5.810126582278482], [282.0, 8.243243243243242], [283.0, 5.181818181818183], [289.0, 8.853333333333333], [288.0, 7.592592592592591], [290.0, 6.446428571428569], [291.0, 6.333333333333333], [292.0, 5.428571428571427], [293.0, 4.476190476190475], [294.0, 4.267605633802817], [295.0, 6.794871794871796], [296.0, 5.612244897959184], [302.0, 5.475], [303.0, 6.763157894736841], [300.0, 5.620689655172414], [301.0, 5.571428571428571], [297.0, 5.656250000000001], [298.0, 7.351351351351353], [299.0, 6.523809523809524], [305.0, 8.810810810810812], [304.0, 7.717948717948718], [306.0, 19.153846153846153], [307.0, 12.733333333333334], [308.0, 11.375], [309.0, 12.011494252873565], [310.0, 4.039999999999999], [311.0, 7.3194444444444455], [312.0, 19.98039215686274], [318.0, 9.702127659574467], [319.0, 24.793103448275858], [316.0, 5.969696969696969], [317.0, 4.956521739130435], [313.0, 17.166666666666664], [314.0, 6.88888888888889], [315.0, 4.5769230769230775], [321.0, 31.3030303030303], [320.0, 5.0], [322.0, 25.2], [323.0, 5.544444444444443], [324.0, 4.880952380952381], [325.0, 10.633333333333333], [326.0, 15.888888888888888], [327.0, 12.071428571428575], [328.0, 8.846153846153845], [334.0, 4.263157894736842], [335.0, 18.793939393939407], [332.0, 3.904761904761904], [333.0, 8.653846153846155], [329.0, 6.441176470588235], [330.0, 28.085714285714282], [331.0, 8.333333333333334], [337.0, 60.88524590163935], [336.0, 8.015625], [338.0, 29.117647058823525], [339.0, 15.37837837837838], [340.0, 20.564102564102566], [341.0, 15.9], [342.0, 30.55263157894737], [343.0, 9.041666666666666], [344.0, 5.18032786885246], [350.0, 49.82608695652175], [351.0, 29.763157894736842], [348.0, 26.391304347826093], [349.0, 5.060606060606061], [345.0, 5.40909090909091], [346.0, 52.11494252873564], [347.0, 12.533333333333333], [353.0, 6.384615384615384], [352.0, 36.387755102040806], [354.0, 19.242424242424242], [355.0, 5.513513513513513], [356.0, 7.783783783783784], [357.0, 24.62499999999999], [358.0, 18.939393939393938], [359.0, 17.305555555555557], [360.0, 19.099999999999998], [366.0, 4.128205128205129], [367.0, 5.653846153846153], [364.0, 20.38709677419355], [365.0, 40.86470588235294], [361.0, 24.03448275862069], [362.0, 29.866666666666667], [363.0, 62.24193548387096], [369.0, 15.408163265306126], [368.0, 6.705882352941177], [370.0, 58.01449275362321], [371.0, 35.768115942028984], [372.0, 8.40909090909091], [373.0, 48.61538461538462], [374.0, 4.61904761904762], [375.0, 4.050000000000001], [376.0, 96.5844155844156], [382.0, 25.75], [383.0, 19.476190476190478], [380.0, 59.959183673469376], [381.0, 41.271739130434774], [377.0, 78.69148936170212], [378.0, 52.901408450704224], [379.0, 54.388888888888886], [385.0, 20.6], [384.0, 59.37142857142857], [386.0, 93.02898550724639], [387.0, 7.423076923076923], [388.0, 9.911764705882351], [389.0, 18.274509803921564], [390.0, 12.809523809523814], [391.0, 37.73529411764707], [392.0, 85.0363636363636], [398.0, 4.333333333333333], [399.0, 35.720000000000006], [396.0, 14.634615384615381], [397.0, 47.27272727272727], [393.0, 12.718749999999998], [394.0, 47.47222222222222], [395.0, 5.666666666666668], [401.0, 15.787878787878789], [400.0, 23.125], [402.0, 39.54807692307693], [403.0, 4.23076923076923], [404.0, 29.275862068965523], [405.0, 89.77966101694915], [406.0, 28.14432989690722], [407.0, 94.87951807228913], [408.0, 6.366666666666667], [414.0, 63.948717948717956], [415.0, 22.257142857142856], [412.0, 115.38775510204083], [413.0, 97.8421052631579], [409.0, 82.59154929577463], [410.0, 56.7111111111111], [411.0, 3.444444444444444], [417.0, 46.128205128205124], [416.0, 27.04081632653061], [418.0, 40.653846153846146], [419.0, 10.18181818181818], [420.0, 45.93258426966292], [421.0, 57.738095238095234], [422.0, 99.53684210526315], [423.0, 62.05263157894738], [424.0, 80.62222222222223], [430.0, 102.01190476190477], [431.0, 11.90909090909091], [428.0, 92.81249999999999], [429.0, 59.81578947368421], [425.0, 55.13725490196079], [426.0, 4.16], [427.0, 82.0], [433.0, 75.92380952380951], [432.0, 42.78947368421053], [434.0, 52.07812499999999], [435.0, 62.822784810126585], [436.0, 67.57142857142857], [437.0, 105.63366336633665], [438.0, 32.31428571428571], [439.0, 23.821428571428573], [440.0, 70.23529411764706], [446.0, 24.733333333333334], [447.0, 75.7017543859649], [444.0, 8.761904761904761], [445.0, 84.24705882352943], [441.0, 73.31578947368422], [442.0, 47.27272727272727], [443.0, 97.2931034482759], [449.0, 50.608695652173914], [448.0, 39.187499999999986], [450.0, 51.10526315789473], [451.0, 62.42857142857143], [452.0, 77.13636363636363], [453.0, 70.68181818181817], [454.0, 119.93959731543619], [455.0, 127.03053435114506], [456.0, 133.10833333333338], [462.0, 91.07894736842104], [463.0, 98.3617021276596], [460.0, 45.36842105263159], [461.0, 100.19444444444446], [457.0, 51.38709677419355], [458.0, 45.5], [459.0, 121.71698113207547], [465.0, 134.31081081081078], [464.0, 95.38961038961037], [466.0, 124.22222222222224], [467.0, 115.41538461538461], [468.0, 52.95652173913043], [469.0, 100.48192771084338], [470.0, 60.87500000000001], [471.0, 69.54054054054055], [472.0, 104.70707070707068], [478.0, 106.17499999999998], [479.0, 101.03571428571426], [476.0, 122.70129870129867], [477.0, 100.52272727272725], [473.0, 53.63999999999999], [474.0, 58.68965517241379], [475.0, 63.904761904761905], [481.0, 111.82978723404254], [480.0, 48.0], [482.0, 192.5801526717558], [483.0, 117.70000000000002], [484.0, 128.52380952380952], [485.0, 84.66666666666666], [486.0, 120.55434782608694], [487.0, 84.47368421052632], [488.0, 139.0470588235294], [494.0, 144.04878048780486], [495.0, 130.14285714285714], [492.0, 138.69767441860466], [493.0, 141.92307692307696], [489.0, 106.85], [490.0, 137.1290322580645], [491.0, 147.13043478260872], [496.0, 164.1461988304093], [497.0, 144.195652173913], [498.0, 130.76000000000002], [499.0, 135.62962962962965], [500.0, 108.80712208707044], [1.0, 2.0]], "isOverall": false, "label": "Browse Page", "isController": false}, {"data": [[447.86085636016924, 88.85461827060463]], "isOverall": false, "label": "Browse Page-Aggregated", "isController": false}, {"data": [[2.0, 2.0], [3.0, 9.0], [4.0, 8.0], [5.0, 8.0], [6.0, 8.0], [7.0, 5.5], [8.0, 7.0], [9.0, 2.0], [10.0, 5.5], [11.0, 8.0], [12.0, 2.0], [13.0, 24.333333333333336], [14.0, 10.0], [15.0, 8.333333333333334], [16.0, 6.5], [17.0, 8.875], [18.0, 6.333333333333334], [19.0, 7.4], [20.0, 6.0], [21.0, 6.0], [22.0, 8.6], [23.0, 8.285714285714286], [24.0, 8.75], [25.0, 7.857142857142856], [26.0, 6.666666666666667], [27.0, 9.0], [28.0, 7.2], [29.0, 9.25], [30.0, 6.666666666666666], [31.0, 9.0], [32.0, 7.555555555555555], [33.0, 9.285714285714286], [34.0, 10.692307692307692], [35.0, 8.25], [36.0, 8.11111111111111], [37.0, 7.999999999999999], [38.0, 7.0], [39.0, 8.166666666666668], [40.0, 9.571428571428571], [41.0, 9.75], [42.0, 8.142857142857142], [43.0, 8.8125], [44.0, 8.8], [45.0, 8.0], [46.0, 9.0], [47.0, 10.25], [48.0, 8.375], [49.0, 8.666666666666666], [50.0, 9.25], [51.0, 10.000000000000002], [52.0, 9.6875], [53.0, 9.0], [54.0, 9.631578947368421], [55.0, 9.461538461538463], [56.0, 10.499999999999998], [57.0, 8.818181818181818], [58.0, 8.833333333333334], [59.0, 10.25], [60.0, 10.0], [61.0, 9.666666666666666], [62.0, 9.636363636363637], [63.0, 8.941176470588236], [64.0, 11.416666666666666], [65.0, 9.307692307692308], [66.0, 8.000000000000002], [67.0, 9.4375], [68.0, 8.571428571428571], [69.0, 9.3], [70.0, 10.538461538461538], [71.0, 10.058823529411764], [72.0, 10.266666666666666], [73.0, 8.896551724137932], [74.0, 10.454545454545455], [75.0, 12.941176470588236], [76.0, 9.541666666666668], [77.0, 11.2], [78.0, 9.000000000000002], [79.0, 8.0], [80.0, 11.833333333333332], [81.0, 9.545454545454545], [82.0, 14.347826086956522], [83.0, 10.333333333333334], [84.0, 9.799999999999999], [85.0, 11.347826086956522], [86.0, 10.625000000000002], [87.0, 11.857142857142858], [88.0, 10.923076923076922], [89.0, 10.5], [90.0, 9.833333333333332], [91.0, 11.250000000000002], [92.0, 10.200000000000001], [93.0, 10.851851851851855], [94.0, 11.583333333333332], [95.0, 11.900000000000002], [96.0, 10.9375], [97.0, 12.303030303030303], [98.0, 10.90909090909091], [99.0, 12.15], [100.0, 10.714285714285714], [101.0, 9.545454545454545], [102.0, 12.083333333333334], [103.0, 15.823529411764707], [104.0, 10.914285714285713], [105.0, 10.515151515151514], [106.0, 11.421052631578947], [107.0, 12.869565217391305], [108.0, 11.133333333333333], [109.0, 11.41935483870968], [110.0, 10.9], [111.0, 10.6], [112.0, 15.000000000000002], [113.0, 11.242424242424242], [114.0, 11.074074074074074], [115.0, 11.958333333333332], [116.0, 14.500000000000002], [117.0, 12.714285714285715], [118.0, 14.0], [119.0, 17.473684210526315], [120.0, 10.941176470588236], [121.0, 11.322580645161292], [122.0, 11.8125], [123.0, 11.478260869565215], [124.0, 15.0], [125.0, 14.961538461538462], [126.0, 12.482758620689655], [127.0, 11.375], [128.0, 10.846153846153845], [129.0, 13.222222222222221], [130.0, 16.0], [131.0, 12.696969696969699], [132.0, 11.428571428571429], [133.0, 13.705882352941174], [134.0, 13.03703703703704], [135.0, 12.473684210526315], [136.0, 14.842105263157892], [137.0, 16.176470588235293], [138.0, 13.63888888888889], [139.0, 13.352941176470589], [140.0, 11.724137931034482], [141.0, 15.76923076923077], [142.0, 15.681818181818182], [143.0, 11.916666666666668], [144.0, 12.22727272727273], [145.0, 12.950000000000001], [146.0, 13.652173913043478], [147.0, 15.291666666666664], [148.0, 13.660000000000004], [149.0, 11.714285714285715], [150.0, 16.17142857142857], [151.0, 12.74074074074074], [152.0, 12.578947368421051], [153.0, 16.599999999999998], [154.0, 12.687500000000002], [155.0, 18.195652173913047], [156.0, 18.069767441860467], [157.0, 13.296296296296296], [158.0, 15.157894736842106], [159.0, 12.333333333333332], [160.0, 21.48275862068966], [161.0, 19.111111111111107], [162.0, 17.258064516129036], [163.0, 21.459999999999997], [164.0, 16.32075471698113], [165.0, 13.655172413793107], [166.0, 15.434782608695652], [167.0, 20.074999999999996], [168.0, 13.888888888888891], [169.0, 21.03333333333333], [170.0, 13.5], [171.0, 14.277777777777777], [172.0, 14.833333333333334], [173.0, 18.76190476190476], [174.0, 23.238095238095237], [175.0, 43.26666666666668], [176.0, 23.73684210526316], [177.0, 19.250000000000004], [178.0, 18.225], [179.0, 14.818181818181815], [180.0, 18.742424242424253], [181.0, 17.612903225806456], [182.0, 16.634146341463417], [183.0, 12.681818181818185], [184.0, 11.142857142857142], [185.0, 19.240000000000002], [186.0, 16.14285714285715], [187.0, 19.52000000000001], [188.0, 16.375], [189.0, 15.898305084745765], [190.0, 14.318181818181815], [191.0, 23.463414634146336], [192.0, 20.161290322580644], [193.0, 16.92], [194.0, 11.785714285714286], [195.0, 15.833333333333332], [196.0, 25.400000000000002], [197.0, 38.33333333333335], [198.0, 51.48], [199.0, 42.763157894736835], [200.0, 46.47727272727273], [201.0, 100.05882352941178], [202.0, 31.876712328767123], [203.0, 39.29824561403509], [204.0, 112.26315789473682], [205.0, 43.85714285714285], [206.0, 87.23333333333335], [207.0, 58.32258064516129], [208.0, 37.14285714285716], [209.0, 33.87179487179487], [210.0, 25.26315789473684], [211.0, 33.89583333333335], [212.0, 18.5], [213.0, 30.736842105263165], [214.0, 24.655172413793107], [215.0, 28.5], [216.0, 31.16216216216216], [217.0, 27.82051282051282], [218.0, 24.958333333333336], [219.0, 33.33333333333334], [220.0, 30.111111111111093], [221.0, 18.700000000000003], [222.0, 16.814814814814813], [223.0, 16.38235294117647], [224.0, 29.916666666666664], [225.0, 26.471698113207545], [226.0, 25.310344827586203], [227.0, 20.441176470588232], [228.0, 18.424657534246574], [229.0, 20.360000000000003], [230.0, 24.48076923076923], [231.0, 39.392857142857146], [232.0, 36.37037037037037], [233.0, 45.10526315789474], [234.0, 26.255319148936174], [235.0, 20.6865671641791], [236.0, 18.805555555555557], [237.0, 26.95238095238095], [238.0, 24.84782608695652], [239.0, 53.611111111111114], [240.0, 44.075], [241.0, 80.5], [242.0, 41.808988764044955], [243.0, 85.43749999999999], [244.0, 96.33333333333334], [245.0, 132.60869565217394], [246.0, 103.3928571428571], [247.0, 145.00000000000003], [248.0, 92.4642857142857], [249.0, 94.60655737704919], [250.0, 108.11111111111114], [251.0, 176.19354838709674], [252.0, 77.0416666666667], [253.0, 230.2608695652174], [254.0, 181.1851851851852], [255.0, 108.1935483870968], [257.0, 184.4], [256.0, 164.67857142857144], [258.0, 179.5454545454545], [259.0, 113.59090909090911], [260.0, 108.2884615384615], [261.0, 133.58823529411768], [262.0, 135.60000000000002], [263.0, 131.54166666666666], [264.0, 149.76190476190476], [270.0, 203.60714285714286], [271.0, 173.38636363636363], [268.0, 216.73913043478262], [269.0, 100.53846153846156], [265.0, 94.0], [266.0, 40.89473684210527], [267.0, 54.57142857142858], [273.0, 145.37499999999997], [272.0, 121.29268292682931], [274.0, 170.44444444444437], [275.0, 109.70588235294116], [276.0, 201.64516129032253], [277.0, 227.44444444444449], [278.0, 175.02702702702706], [279.0, 252.45454545454544], [280.0, 123.62857142857145], [286.0, 98.86046511627909], [287.0, 284.7894736842106], [284.0, 238.71052631578942], [285.0, 217.6000000000001], [281.0, 99.30769230769235], [282.0, 317.0689655172414], [283.0, 258.23333333333335], [289.0, 146.45555555555555], [288.0, 559.0], [290.0, 242.4107142857142], [291.0, 325.79310344827576], [292.0, 508.6333333333334], [293.0, 410.18181818181824], [294.0, 202.20430107526877], [295.0, 165.88679245283015], [296.0, 200.2898550724637], [302.0, 186.03225806451607], [303.0, 84.91071428571425], [300.0, 319.3571428571429], [301.0, 218.72], [297.0, 280.49999999999994], [298.0, 252.77777777777774], [299.0, 228.24999999999997], [305.0, 138.283950617284], [304.0, 155.84615384615384], [306.0, 119.40000000000002], [307.0, 119.08333333333331], [308.0, 140.775], [309.0, 148.87179487179486], [310.0, 249.67741935483872], [311.0, 176.92857142857147], [312.0, 311.66666666666674], [318.0, 289.16666666666663], [319.0, 180.14925373134324], [316.0, 163.9473684210526], [317.0, 362.17647058823536], [313.0, 333.85714285714283], [314.0, 176.73999999999998], [315.0, 174.0263157894736], [321.0, 270.61538461538476], [320.0, 354.344827586207], [322.0, 186.67741935483878], [323.0, 228.88], [324.0, 208.50000000000003], [325.0, 152.09523809523807], [326.0, 204.3888888888889], [327.0, 274.0476190476191], [328.0, 215.1323529411765], [334.0, 276.76], [335.0, 150.10000000000002], [332.0, 271.1071428571429], [333.0, 255.26666666666668], [329.0, 252.04166666666674], [330.0, 198.15254237288136], [331.0, 279.63333333333327], [337.0, 196.69841269841268], [336.0, 162.21212121212113], [338.0, 260.2894736842105], [339.0, 225.30000000000004], [340.0, 216.91891891891882], [341.0, 210.62068965517247], [342.0, 146.07954545454544], [343.0, 208.67647058823525], [344.0, 190.62962962962962], [350.0, 185.17647058823528], [351.0, 261.2380952380953], [348.0, 146.7093023255814], [349.0, 137.9347826086957], [345.0, 195.2857142857143], [346.0, 162.10843373493972], [347.0, 237.04000000000002], [353.0, 223.9677419354839], [352.0, 209.33333333333337], [354.0, 159.622641509434], [355.0, 268.7052631578946], [356.0, 274.05263157894734], [357.0, 159.0441176470589], [358.0, 162.55813953488374], [359.0, 194.10828025477713], [360.0, 290.72], [366.0, 320.6486486486487], [367.0, 301.0714285714286], [364.0, 269.6363636363636], [365.0, 177.3870967741935], [361.0, 308.06896551724134], [362.0, 300.4347826086956], [363.0, 193.31578947368416], [369.0, 312.2117647058824], [368.0, 350.33333333333337], [370.0, 268.12820512820514], [371.0, 222.00934579439254], [372.0, 362.74285714285713], [373.0, 291.64814814814815], [374.0, 210.61956521739154], [375.0, 368.7777777777779], [376.0, 374.67741935483866], [382.0, 399.0882352941176], [383.0, 466.15624999999994], [380.0, 330.9454545454546], [381.0, 200.7272727272728], [377.0, 318.6122448979593], [378.0, 417.23809523809524], [379.0, 340.06666666666666], [385.0, 412.7096774193549], [384.0, 245.26666666666668], [386.0, 292.6956521739132], [387.0, 341.8536585365853], [388.0, 245.56249999999997], [389.0, 220.76271186440673], [390.0, 392.33333333333337], [391.0, 348.6571428571428], [392.0, 238.1428571428572], [398.0, 347.1363636363637], [399.0, 232.8717948717949], [396.0, 315.8142857142859], [397.0, 296.0370370370369], [393.0, 275.38775510204084], [394.0, 174.69387755102048], [395.0, 348.7368421052631], [401.0, 346.2592592592593], [400.0, 260.94444444444446], [402.0, 260.8933333333333], [403.0, 343.38571428571424], [404.0, 363.06451612903226], [405.0, 336.2093023255815], [406.0, 338.99999999999994], [407.0, 329.4655172413792], [408.0, 434.4615384615385], [414.0, 327.73015873015885], [415.0, 269.8620689655173], [412.0, 364.7959183673469], [413.0, 319.0], [409.0, 331.89285714285717], [410.0, 285.9054054054055], [411.0, 453.8333333333333], [417.0, 361.29787234042556], [416.0, 315.09523809523813], [418.0, 352.27631578947364], [419.0, 426.10810810810807], [420.0, 376.590909090909], [421.0, 444.6756756756756], [422.0, 368.7777777777779], [423.0, 456.13333333333327], [424.0, 372.71111111111117], [430.0, 300.31460674157324], [431.0, 450.0952380952381], [428.0, 348.39999999999986], [429.0, 331.5471698113207], [425.0, 319.49367088607596], [426.0, 431.972972972973], [427.0, 420.7631578947368], [433.0, 256.7155172413793], [432.0, 425.87096774193554], [434.0, 326.5272727272728], [435.0, 376.90697674418607], [436.0, 382.5483870967742], [437.0, 374.2117647058825], [438.0, 615.5600000000001], [439.0, 541.3076923076924], [440.0, 299.65217391304344], [446.0, 523.7499999999999], [447.0, 329.3684210526315], [444.0, 573.2272727272727], [445.0, 345.55102040816337], [441.0, 325.2183908045977], [442.0, 472.8571428571428], [443.0, 372.9811320754716], [449.0, 482.6363636363636], [448.0, 303.9714285714287], [450.0, 550.3809523809524], [451.0, 494.55], [452.0, 538.6666666666666], [453.0, 550.047619047619], [454.0, 381.94174757281564], [455.0, 345.3846153846153], [456.0, 352.9545454545454], [462.0, 399.66666666666663], [463.0, 348.2812499999999], [460.0, 578.9130434782609], [461.0, 458.5531914893618], [457.0, 544.4838709677422], [458.0, 510.8636363636364], [459.0, 376.9130434782607], [465.0, 468.93999999999994], [464.0, 400.91666666666674], [466.0, 477.32075471698136], [467.0, 501.15], [468.0, 464.0909090909091], [469.0, 453.98648648648646], [470.0, 469.2368421052633], [471.0, 564.7], [472.0, 408.3483146067416], [478.0, 365.6699029126212], [479.0, 440.1940298507464], [476.0, 434.31192660550454], [477.0, 449.90566037735863], [473.0, 551.9130434782608], [474.0, 523.6874999999999], [475.0, 583.1351351351353], [481.0, 570.5250000000001], [480.0, 565.4000000000001], [482.0, 430.09574468085134], [483.0, 528.2857142857142], [484.0, 404.3378378378379], [485.0, 658.9411764705882], [486.0, 387.322033898305], [487.0, 589.4736842105262], [488.0, 367.3428571428574], [494.0, 478.0232558139534], [495.0, 705.9642857142856], [492.0, 470.29411764705895], [493.0, 577.8378378378377], [489.0, 552.0], [490.0, 466.4444444444444], [491.0, 444.18181818181813], [496.0, 369.69780219780216], [497.0, 675.3846153846155], [498.0, 662.6521739130436], [499.0, 569.0714285714286], [500.0, 281.55666414508033], [1.0, 2.0]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[448.1255864523912, 260.3343262686034]], "isOverall": false, "label": "Transaction Controller-Aggregated", "isController": true}, {"data": [[3.0, 6.0], [4.0, 6.0], [5.0, 6.0], [6.0, 6.0], [7.0, 6.0], [8.0, 5.0], [10.0, 6.0], [11.0, 5.5], [13.0, 7.0], [14.0, 7.333333333333333], [15.0, 7.5], [16.0, 7.0], [17.0, 6.250000000000001], [18.0, 6.0], [19.0, 6.5], [20.0, 6.0], [21.0, 6.0], [22.0, 6.0], [23.0, 6.153846153846154], [24.0, 6.5], [25.0, 6.333333333333333], [26.0, 5.5], [27.0, 6.0], [28.0, 7.333333333333333], [29.0, 6.0], [30.0, 6.0], [31.0, 6.5], [32.0, 6.0], [33.0, 6.7142857142857135], [34.0, 7.846153846153848], [35.0, 8.0], [36.0, 5.888888888888889], [37.0, 6.428571428571429], [38.0, 5.75], [39.0, 6.6], [40.0, 6.857142857142857], [41.0, 6.750000000000001], [42.0, 5.571428571428571], [43.0, 7.0], [44.0, 6.555555555555555], [45.0, 6.4], [46.0, 7.125], [47.0, 7.625], [48.0, 6.714285714285714], [49.0, 6.8], [50.0, 7.857142857142857], [51.0, 7.428571428571428], [52.0, 7.133333333333333], [53.0, 6.666666666666668], [54.0, 7.0], [55.0, 6.461538461538461], [56.0, 7.642857142857142], [57.0, 6.181818181818182], [58.0, 6.2727272727272725], [59.0, 7.25], [60.0, 6.875], [61.0, 6.833333333333333], [62.0, 6.90909090909091], [63.0, 7.0625], [64.0, 8.583333333333334], [65.0, 7.333333333333333], [66.0, 6.833333333333333], [67.0, 7.133333333333334], [68.0, 6.833333333333333], [69.0, 6.200000000000001], [70.0, 7.846153846153846], [71.0, 7.294117647058824], [72.0, 8.142857142857142], [73.0, 6.607142857142858], [74.0, 7.5], [75.0, 8.35294117647059], [76.0, 7.391304347826088], [77.0, 7.666666666666667], [78.0, 6.75], [79.0, 6.2857142857142865], [80.0, 8.416666666666668], [81.0, 7.3], [82.0, 12.000000000000002], [83.0, 7.111111111111111], [84.0, 7.3], [85.0, 8.59090909090909], [86.0, 7.916666666666667], [87.0, 9.649999999999999], [88.0, 8.153846153846153], [89.0, 8.363636363636363], [90.0, 7.181818181818182], [91.0, 8.096774193548386], [92.0, 8.0], [93.0, 7.814814814814816], [94.0, 8.249999999999998], [95.0, 8.200000000000001], [96.0, 8.200000000000001], [97.0, 9.0625], [98.0, 8.9], [99.0, 9.894736842105264], [100.0, 8.0], [101.0, 6.363636363636363], [102.0, 9.454545454545455], [103.0, 12.294117647058826], [104.0, 7.999999999999999], [105.0, 8.062500000000002], [106.0, 9.166666666666668], [107.0, 10.045454545454543], [108.0, 7.799999999999999], [109.0, 8.225806451612902], [110.0, 8.1], [111.0, 7.642857142857142], [112.0, 11.88888888888889], [113.0, 8.303030303030303], [114.0, 8.53846153846154], [115.0, 8.916666666666668], [116.0, 11.466666666666669], [117.0, 9.923076923076922], [118.0, 9.52941176470588], [119.0, 12.105263157894736], [120.0, 7.5625], [121.0, 7.967741935483871], [122.0, 8.25], [123.0, 8.772727272727273], [124.0, 11.880000000000003], [125.0, 11.279999999999998], [126.0, 9.250000000000002], [127.0, 8.40625], [128.0, 8.333333333333334], [129.0, 9.666666666666668], [130.0, 11.395348837209307], [131.0, 9.030303030303031], [132.0, 8.461538461538463], [133.0, 8.6875], [134.0, 9.53846153846154], [135.0, 8.789473684210527], [136.0, 11.999999999999998], [137.0, 13.5625], [138.0, 10.885714285714286], [139.0, 9.691176470588234], [140.0, 8.896551724137932], [141.0, 11.538461538461537], [142.0, 11.095238095238097], [143.0, 8.272727272727273], [144.0, 9.333333333333332], [145.0, 9.947368421052634], [146.0, 10.444444444444446], [147.0, 11.782608695652174], [148.0, 10.183673469387756], [149.0, 8.692307692307692], [150.0, 11.823529411764705], [151.0, 9.481481481481483], [152.0, 9.7027027027027], [153.0, 12.720000000000002], [154.0, 9.0], [155.0, 13.511111111111113], [156.0, 14.928571428571429], [157.0, 9.555555555555555], [158.0, 10.894736842105264], [159.0, 9.52941176470588], [160.0, 15.620689655172413], [161.0, 11.500000000000002], [162.0, 12.516129032258062], [163.0, 16.599999999999994], [164.0, 12.584905660377357], [165.0, 9.750000000000004], [166.0, 10.681818181818182], [167.0, 15.224999999999998], [168.0, 9.5], [169.0, 14.813559322033898], [170.0, 10.250000000000002], [171.0, 10.88235294117647], [172.0, 11.777777777777779], [173.0, 14.571428571428573], [174.0, 19.809523809523807], [175.0, 39.26666666666667], [176.0, 20.621621621621625], [177.0, 14.978723404255323], [178.0, 14.375], [179.0, 9.9375], [180.0, 14.338461538461537], [181.0, 13.161290322580646], [182.0, 12.049999999999997], [183.0, 9.61904761904762], [184.0, 8.23076923076923], [185.0, 13.600000000000001], [186.0, 12.714285714285712], [187.0, 15.244897959183673], [188.0, 12.333333333333332], [189.0, 12.3448275862069], [190.0, 10.954545454545455], [191.0, 16.341463414634145], [192.0, 15.483870967741936], [193.0, 12.96], [194.0, 8.538461538461538], [195.0, 11.627118644067796], [196.0, 16.950000000000003], [197.0, 31.3939393939394], [198.0, 43.76], [199.0, 35.39473684210527], [200.0, 41.81818181818182], [201.0, 96.88235294117646], [202.0, 27.859154929577464], [203.0, 34.49122807017544], [204.0, 105.63157894736841], [205.0, 38.69736842105262], [206.0, 81.03333333333335], [207.0, 49.96774193548387], [208.0, 28.833333333333336], [209.0, 26.97368421052631], [210.0, 17.57894736842105], [211.0, 27.957446808510642], [212.0, 13.27777777777778], [213.0, 24.44], [214.0, 17.793103448275865], [215.0, 22.32432432432432], [216.0, 26.675675675675677], [217.0, 23.842105263157897], [218.0, 21.16666666666667], [219.0, 30.200000000000017], [220.0, 24.955555555555552], [221.0, 13.000000000000004], [222.0, 12.0], [223.0, 11.606060606060606], [224.0, 22.555555555555554], [225.0, 20.000000000000004], [226.0, 18.724137931034484], [227.0, 16.636363636363633], [228.0, 14.479452054794521], [229.0, 13.440000000000001], [230.0, 15.653846153846153], [231.0, 27.82142857142857], [232.0, 28.40740740740741], [233.0, 39.972972972973], [234.0, 22.456521739130427], [235.0, 15.447761194029859], [236.0, 12.694444444444445], [237.0, 21.85365853658536], [238.0, 19.733333333333338], [239.0, 50.705882352941174], [240.0, 39.39999999999999], [241.0, 79.14285714285715], [242.0, 35.93181818181819], [243.0, 78.00000000000001], [244.0, 92.62068965517243], [245.0, 126.30434782608698], [246.0, 98.88888888888889], [247.0, 135.58333333333331], [248.0, 83.54545454545455], [249.0, 89.35], [250.0, 102.77777777777776], [251.0, 164.89999999999998], [252.0, 72.7887323943662], [253.0, 224.43478260869563], [254.0, 175.37037037037035], [255.0, 101.96774193548386], [257.0, 177.86666666666667], [256.0, 156.1071428571428], [258.0, 190.50000000000003], [259.0, 106.98473282442747], [260.0, 102.07843137254903], [261.0, 131.6060606060606], [262.0, 128.17142857142858], [263.0, 121.91666666666667], [264.0, 141.09523809523813], [270.0, 202.77777777777774], [271.0, 171.9302325581396], [268.0, 202.65217391304347], [269.0, 93.38461538461536], [265.0, 81.08450704225352], [266.0, 36.166666666666664], [267.0, 48.87272727272727], [273.0, 138.78125], [272.0, 114.99999999999997], [274.0, 165.36111111111106], [275.0, 102.27450980392159], [276.0, 191.0322580645161], [277.0, 212.77777777777777], [278.0, 162.18918918918925], [279.0, 244.2558139534883], [280.0, 114.90000000000002], [286.0, 94.92857142857144], [287.0, 279.3157894736842], [284.0, 237.918918918919], [285.0, 210.51428571428568], [281.0, 89.32051282051282], [282.0, 317.25], [283.0, 249.40000000000003], [289.0, 139.08888888888887], [288.0, 594.1666666666666], [290.0, 235.07142857142858], [291.0, 316.37931034482756], [292.0, 496.63333333333355], [293.0, 416.7812499999999], [294.0, 197.79347826086956], [295.0, 160.80952380952382], [296.0, 194.57971014492756], [302.0, 185.73333333333335], [303.0, 78.35714285714286], [300.0, 326.33333333333337], [301.0, 210.96], [297.0, 271.15624999999994], [298.0, 242.3703703703704], [299.0, 227.09677419354836], [305.0, 128.24691358024688], [304.0, 154.10526315789468], [306.0, 110.29166666666664], [307.0, 106.63888888888887], [308.0, 129.95000000000005], [309.0, 140.01709401709397], [310.0, 232.7096774193548], [311.0, 143.11428571428567], [312.0, 302.952380952381], [318.0, 283.37142857142857], [319.0, 173.56716417910442], [316.0, 157.39473684210526], [317.0, 342.9411764705883], [313.0, 342.25], [314.0, 158.38775510204084], [315.0, 167.68421052631572], [321.0, 260.92307692307685], [320.0, 330.8965517241379], [322.0, 172.33870967741933], [323.0, 200.49999999999997], [324.0, 207.5142857142857], [325.0, 138.6825396825396], [326.0, 195.11111111111106], [327.0, 278.95], [328.0, 185.47058823529414], [334.0, 271.28], [335.0, 122.89830508474581], [332.0, 264.7142857142857], [333.0, 266.82142857142856], [329.0, 206.10416666666674], [330.0, 180.3728813559322], [331.0, 272.2666666666667], [337.0, 171.55555555555551], [336.0, 135.76923076923075], [338.0, 233.97368421052633], [339.0, 223.41379310344834], [340.0, 203.49999999999994], [341.0, 206.1724137931034], [342.0, 121.34090909090911], [343.0, 203.26470588235293], [344.0, 178.20370370370375], [350.0, 153.82], [351.0, 253.1904761904762], [348.0, 105.55294117647063], [349.0, 130.49999999999991], [345.0, 182.30952380952377], [346.0, 113.08536585365859], [347.0, 220.27999999999997], [353.0, 211.48387096774192], [352.0, 192.1578947368422], [354.0, 149.52830188679243], [355.0, 183.34736842105255], [356.0, 242.71052631578956], [357.0, 132.56716417910442], [358.0, 148.4186046511628], [359.0, 152.84713375796173], [360.0, 277.9199999999999], [366.0, 280.55555555555554], [367.0, 319.0], [364.0, 260.04545454545456], [365.0, 138.5645161290323], [361.0, 306.32142857142867], [362.0, 301.95454545454544], [363.0, 182.9285714285714], [369.0, 211.72619047619048], [368.0, 360.64285714285717], [370.0, 220.92105263157887], [371.0, 147.6542056074766], [372.0, 350.38235294117646], [373.0, 234.16666666666666], [374.0, 173.9782608695652], [375.0, 337.7777777777778], [376.0, 340.87096774193543], [382.0, 369.3529411764706], [383.0, 434.59375000000006], [380.0, 239.61818181818185], [381.0, 170.60526315789477], [377.0, 248.71428571428578], [378.0, 427.3], [379.0, 343.4999999999999], [385.0, 387.516129032258], [384.0, 196.92380952380958], [386.0, 244.0869565217391], [387.0, 302.4146341463414], [388.0, 239.97916666666663], [389.0, 182.13559322033896], [390.0, 401.7586206896552], [391.0, 309.2571428571429], [392.0, 183.29870129870116], [398.0, 343.090909090909], [399.0, 180.11688311688317], [396.0, 251.99999999999994], [397.0, 226.79629629629622], [393.0, 255.89795918367366], [394.0, 142.81443298969074], [395.0, 307.3157894736842], [401.0, 330.96153846153845], [400.0, 234.62962962962968], [402.0, 159.1621621621622], [403.0, 240.57971014492747], [404.0, 327.2903225806452], [405.0, 265.6190476190477], [406.0, 305.74074074074076], [407.0, 268.41379310344814], [408.0, 424.7692307692308], [414.0, 249.8571428571427], [415.0, 247.48275862068957], [412.0, 305.32653061224505], [413.0, 250.40740740740745], [409.0, 279.15384615384613], [410.0, 230.67123287671245], [411.0, 440.75], [417.0, 304.7659574468084], [416.0, 258.9365079365078], [418.0, 277.11842105263145], [419.0, 338.4864864864865], [420.0, 299.8604651162791], [421.0, 410.35135135135147], [422.0, 293.3225806451612], [423.0, 435.7586206896551], [424.0, 292.2045454545456], [430.0, 197.31460674157296], [431.0, 428.9047619047618], [428.0, 258.59259259259267], [429.0, 284.8113207547171], [425.0, 233.49367088607585], [426.0, 369.0], [427.0, 344.2631578947368], [433.0, 200.2173913043478], [432.0, 384.22580645161287], [434.0, 260.51851851851853], [435.0, 325.7857142857143], [436.0, 336.9354838709678], [437.0, 277.76470588235276], [438.0, 601.6800000000001], [439.0, 546.0], [440.0, 245.47252747252742], [446.0, 511.6], [447.0, 222.24561403508773], [444.0, 567.3181818181818], [445.0, 215.8571428571428], [441.0, 252.29885057471282], [442.0, 408.7142857142856], [443.0, 278.84905660377353], [449.0, 477.6818181818182], [448.0, 257.29411764705884], [450.0, 543.7142857142857], [451.0, 486.79999999999995], [452.0, 531.5555555555555], [453.0, 544.1428571428571], [454.0, 285.9306930693069], [455.0, 205.92307692307693], [456.0, 242.94656488549614], [462.0, 317.7777777777777], [463.0, 228.57812499999986], [460.0, 544.6521739130434], [461.0, 373.02222222222224], [457.0, 509.48387096774206], [458.0, 475.27272727272737], [459.0, 291.50724637681157], [465.0, 382.8199999999999], [464.0, 288.3888888888889], [466.0, 368.11320754716996], [467.0, 406.1], [468.0, 408.09090909090907], [469.0, 330.5068493150685], [470.0, 371.2631578947369], [471.0, 476.0333333333331], [472.0, 289.86363636363626], [478.0, 214.6960784313725], [479.0, 313.1044776119404], [476.0, 282.6481481481481], [477.0, 335.03773584905673], [473.0, 502.21739130434787], [474.0, 438.24999999999994], [475.0, 491.35135135135147], [481.0, 477.7500000000001], [480.0, 504.72], [482.0, 295.38709677419365], [483.0, 437.02439024390253], [484.0, 294.6351351351353], [485.0, 612.5294117647059], [486.0, 275.3448275862068], [487.0, 535.157894736842], [488.0, 252.15238095238092], [494.0, 356.51162790697686], [495.0, 648.75], [492.0, 341.2686567164179], [493.0, 482.8108108108107], [489.0, 482.2380952380953], [490.0, 351.8444444444443], [491.0, 319.22727272727263], [496.0, 237.08287292817695], [497.0, 621.88], [498.0, 590.4782608695652], [499.0, 473.6071428571428], [500.0, 172.91613167041504]], "isOverall": false, "label": "Album Read", "isController": false}, {"data": [[448.878164320508, 172.05237753668814]], "isOverall": false, "label": "Album Read-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 20445.1, "minX": 1.61184096E12, "maxY": 9274190.783333333, "series": [{"data": [[1.61184102E12, 6905250.6], [1.61184096E12, 9274190.783333333], [1.61184108E12, 4712172.6]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61184102E12, 20768.7], [1.61184096E12, 45419.816666666666], [1.61184108E12, 20445.1]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61184108E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 56.152106984799, "minX": 1.61184096E12, "maxY": 314.21085310878857, "series": [{"data": [[1.61184102E12, 103.6516444815851], [1.61184096E12, 82.15532061199926], [1.61184108E12, 56.152106984799]], "isOverall": false, "label": "Browse Page", "isController": false}, {"data": [[1.61184102E12, 260.6936536091169], [1.61184096E12, 314.21085310878857], [1.61184108E12, 136.94519490544158]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[1.61184102E12, 157.58304689601553], [1.61184096E12, 232.8117232988616], [1.61184108E12, 84.5425480999335]], "isOverall": false, "label": "Album Read", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61184108E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 4.723691279173894, "minX": 1.61184096E12, "maxY": 171.01713872586524, "series": [{"data": [[1.61184102E12, 4.723691279173894], [1.61184096E12, 14.465575038679722], [1.61184108E12, 7.091687512026172]], "isOverall": false, "label": "Browse Page", "isController": false}, {"data": [[1.61184102E12, 60.29350930463268], [1.61184096E12, 171.01713872586524], [1.61184108E12, 37.3618294094944]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[1.61184102E12, 55.21328869892694], [1.61184096E12, 160.10741287911625], [1.61184108E12, 30.032258064516153]], "isOverall": false, "label": "Album Read", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61184108E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 49.58976332499518, "minX": 1.61184096E12, "maxY": 199.64564230526454, "series": [{"data": [[1.61184102E12, 99.2815316659701], [1.61184096E12, 68.00201994155073], [1.61184108E12, 49.58976332499518]], "isOverall": false, "label": "Browse Page", "isController": false}, {"data": [[1.61184102E12, 199.64564230526454], [1.61184096E12, 139.92812792378956], [1.61184108E12, 97.27643766885328]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[1.61184102E12, 101.26475774875223], [1.61184096E12, 69.05514034935271], [1.61184108E12, 51.69819086819158]], "isOverall": false, "label": "Album Read", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61184108E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.61184096E12, "maxY": 2532.0, "series": [{"data": [[1.61184102E12, 1944.0], [1.61184096E12, 2532.0], [1.61184108E12, 435.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61184102E12, 499.0], [1.61184096E12, 617.0], [1.61184108E12, 159.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61184102E12, 920.0], [1.61184096E12, 1199.9900000000016], [1.61184108E12, 247.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61184102E12, 615.0], [1.61184096E12, 698.0], [1.61184108E12, 193.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61184102E12, 2.0], [1.61184096E12, 2.0], [1.61184108E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61184102E12, 172.0], [1.61184096E12, 59.0], [1.61184108E12, 12.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61184108E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 3.0, "minX": 19.0, "maxY": 949.5, "series": [{"data": [[19.0, 7.0], [27.0, 3.0], [78.0, 4.0], [129.0, 4.0], [135.0, 5.0], [184.0, 5.0], [187.0, 5.0], [239.0, 4.0], [245.0, 4.0], [294.0, 5.0], [289.0, 6.0], [344.0, 5.0], [358.0, 5.0], [399.0, 5.0], [396.0, 6.0], [454.0, 6.0], [464.0, 7.0], [501.0, 7.0], [518.0, 26.0], [560.0, 7.0], [566.0, 8.0], [583.0, 8.0], [639.0, 10.0], [614.0, 15.0], [637.0, 28.0], [616.0, 30.5], [634.0, 26.0], [624.0, 9.0], [664.0, 12.0], [688.0, 11.5], [679.0, 138.0], [708.0, 10.0], [724.0, 27.0], [732.0, 16.0], [723.0, 74.0], [719.0, 151.0], [716.0, 147.0], [720.0, 156.0], [705.0, 12.0], [767.0, 124.0], [759.0, 17.0], [749.0, 50.0], [792.0, 17.5], [787.0, 15.0], [770.0, 67.0], [772.0, 101.5], [784.0, 26.0], [769.0, 12.0], [830.0, 134.0], [839.0, 149.5], [834.0, 26.0], [877.0, 172.0], [892.0, 32.0], [865.0, 54.0], [926.0, 150.0], [915.0, 158.0], [909.0, 61.0], [931.0, 73.0], [963.0, 162.0], [1008.0, 5.0], [1007.0, 705.0], [1010.0, 92.0], [1006.0, 183.0], [1017.0, 165.0], [992.0, 207.0], [1012.0, 6.5], [1014.0, 193.0], [1009.0, 146.0], [1018.0, 14.5], [1028.0, 370.0], [1032.0, 155.0], [1044.0, 274.0], [1042.0, 389.0], [1077.0, 409.0], [1037.0, 126.0], [1067.0, 47.0], [1080.0, 104.0], [1034.0, 202.0], [1026.0, 148.5], [1123.0, 169.0], [1125.0, 99.0], [1133.0, 380.0], [1193.0, 146.0], [1188.0, 195.0], [1177.0, 314.0], [1187.0, 173.0], [1231.0, 310.0], [1232.0, 58.0], [1259.0, 154.0], [1250.0, 109.0], [1234.0, 339.0], [1282.0, 29.0], [1285.0, 106.0], [1313.0, 121.5], [1303.0, 218.0], [1307.0, 238.0], [1334.0, 199.0], [1288.0, 113.0], [1365.0, 949.5], [1384.0, 174.5], [1383.0, 121.0], [1504.0, 39.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[566.0, 4.0], [624.0, 4.0], [664.0, 5.0], [720.0, 4.0], [705.0, 5.0], [784.0, 5.0], [769.0, 6.0], [830.0, 96.0], [839.0, 18.0], [834.0, 7.0], [877.0, 134.0], [892.0, 97.0], [865.0, 7.0], [926.0, 161.0], [915.0, 133.0], [909.0, 7.0], [931.0, 26.0], [963.0, 155.0], [1008.0, 161.0], [1010.0, 159.0], [1007.0, 166.0], [1011.0, 171.0], [1005.0, 162.0], [1004.0, 156.0], [1006.0, 170.0], [1009.0, 152.0], [1017.0, 125.0], [992.0, 173.0], [1018.0, 176.0], [1012.0, 143.0], [1014.0, 165.0], [1032.0, 136.0], [1086.0, 127.0], [1080.0, 39.0], [1044.0, 7.0], [1028.0, 5.0], [1026.0, 175.0], [1042.0, 10.0], [1077.0, 19.0], [1037.0, 141.0], [1067.0, 153.0], [1034.0, 183.0], [1123.0, 128.0], [1125.0, 46.0], [1133.0, 14.0], [1105.0, 137.0], [1193.0, 30.0], [1188.0, 12.0], [1177.0, 10.0], [1187.0, 107.0], [1236.0, 67.0], [1231.0, 73.0], [1232.0, 91.0], [1259.0, 82.0], [1250.0, 16.0], [1234.0, 21.0], [1282.0, 93.0], [1285.0, 88.0], [1313.0, 51.0], [1303.0, 19.0], [1307.0, 25.0], [1334.0, 42.0], [1288.0, 61.0], [1365.0, 23.0], [1384.0, 111.0], [1383.0, 31.0], [1405.0, 141.0], [1504.0, 61.0], [1501.0, 163.0], [1503.0, 114.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1504.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 19.0, "maxY": 933.0, "series": [{"data": [[19.0, 5.0], [27.0, 3.0], [78.0, 3.0], [129.0, 4.0], [135.0, 4.0], [184.0, 4.0], [187.0, 4.0], [239.0, 4.0], [245.0, 4.0], [294.0, 4.0], [289.0, 4.0], [344.0, 4.5], [358.0, 4.0], [399.0, 5.0], [396.0, 4.0], [454.0, 5.0], [464.0, 5.0], [501.0, 5.0], [518.0, 23.0], [560.0, 6.0], [566.0, 7.0], [583.0, 7.0], [639.0, 8.0], [614.0, 12.0], [637.0, 27.0], [616.0, 22.0], [634.0, 23.0], [624.0, 6.0], [664.0, 9.0], [688.0, 10.5], [679.0, 134.0], [708.0, 8.0], [724.0, 21.5], [732.0, 13.0], [723.0, 72.0], [719.0, 149.0], [716.0, 147.0], [720.0, 152.5], [705.0, 9.0], [767.0, 123.0], [759.0, 16.0], [749.0, 49.0], [792.0, 15.0], [787.0, 13.0], [770.0, 64.0], [772.0, 98.0], [784.0, 19.0], [769.0, 9.0], [830.0, 132.0], [839.0, 141.0], [834.0, 18.0], [877.0, 172.0], [892.0, 27.0], [865.0, 48.0], [926.0, 145.0], [915.0, 150.0], [909.0, 50.0], [931.0, 57.0], [963.0, 162.0], [1008.0, 4.0], [1007.0, 696.0], [1010.0, 88.0], [1006.0, 177.0], [1017.0, 161.0], [992.0, 174.0], [1012.0, 5.0], [1014.0, 181.0], [1009.0, 130.0], [1018.0, 13.5], [1028.0, 364.0], [1032.0, 151.0], [1044.0, 265.0], [1042.0, 381.0], [1077.0, 400.0], [1037.0, 118.0], [1067.0, 40.0], [1080.0, 99.0], [1034.0, 185.5], [1026.0, 78.5], [1123.0, 161.0], [1125.0, 92.0], [1133.0, 374.0], [1193.0, 127.5], [1188.0, 187.5], [1177.0, 307.0], [1187.0, 167.5], [1231.0, 302.0], [1232.0, 56.5], [1259.0, 148.0], [1250.0, 98.0], [1234.0, 331.0], [1282.0, 28.0], [1285.0, 99.0], [1313.0, 115.0], [1303.0, 209.0], [1307.0, 220.0], [1334.0, 175.5], [1288.0, 105.0], [1365.0, 933.0], [1384.0, 170.0], [1383.0, 118.0], [1504.0, 37.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[566.0, 0.0], [624.0, 0.0], [664.0, 0.0], [720.0, 0.0], [705.0, 0.0], [784.0, 0.0], [769.0, 0.0], [830.0, 0.0], [839.0, 0.0], [834.0, 0.0], [877.0, 0.0], [892.0, 0.0], [865.0, 0.0], [926.0, 0.0], [915.0, 0.0], [909.0, 0.0], [931.0, 0.0], [963.0, 0.0], [1008.0, 0.0], [1010.0, 0.0], [1007.0, 0.0], [1011.0, 0.0], [1005.0, 0.0], [1004.0, 0.0], [1006.0, 0.0], [1009.0, 0.0], [1017.0, 0.0], [992.0, 0.0], [1018.0, 0.0], [1012.0, 0.0], [1014.0, 0.0], [1032.0, 0.0], [1086.0, 0.0], [1080.0, 0.0], [1044.0, 0.0], [1028.0, 0.0], [1026.0, 0.0], [1042.0, 0.0], [1077.0, 0.0], [1037.0, 0.0], [1067.0, 0.0], [1034.0, 0.0], [1123.0, 0.0], [1125.0, 0.0], [1133.0, 0.0], [1105.0, 0.0], [1193.0, 0.0], [1188.0, 0.0], [1177.0, 0.0], [1187.0, 0.0], [1236.0, 0.0], [1231.0, 0.0], [1232.0, 0.0], [1259.0, 0.0], [1250.0, 0.0], [1234.0, 0.0], [1282.0, 0.0], [1285.0, 0.0], [1313.0, 0.0], [1303.0, 0.0], [1307.0, 0.0], [1334.0, 0.0], [1288.0, 0.0], [1365.0, 0.0], [1384.0, 0.0], [1383.0, 0.0], [1405.0, 0.0], [1504.0, 0.0], [1501.0, 0.0], [1503.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1504.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 347.35, "minX": 1.61184096E12, "maxY": 1107.8333333333333, "series": [{"data": [[1.61184102E12, 1107.8333333333333], [1.61184096E12, 779.5833333333334], [1.61184108E12, 347.35]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61184108E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 154.9, "minX": 1.61184096E12, "maxY": 957.95, "series": [{"data": [[1.61184102E12, 158.1], [1.61184096E12, 341.51666666666665], [1.61184108E12, 154.9]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.61184102E12, 957.95], [1.61184096E12, 429.85], [1.61184108E12, 192.45]], "isOverall": false, "label": "Non HTTP response code: java.net.BindException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61184108E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 57.5, "minX": 1.61184096E12, "maxY": 500.93333333333334, "series": [{"data": [[1.61184102E12, 100.6], [1.61184096E12, 170.91666666666666], [1.61184108E12, 90.5]], "isOverall": false, "label": "Album Read-success", "isController": false}, {"data": [[1.61184102E12, 457.01666666666665], [1.61184096E12, 212.65], [1.61184108E12, 83.61666666666666]], "isOverall": false, "label": "Album Read-failure", "isController": false}, {"data": [[1.61184102E12, 57.5], [1.61184096E12, 170.6], [1.61184108E12, 64.28333333333333]], "isOverall": false, "label": "Transaction Controller-success", "isController": true}, {"data": [[1.61184102E12, 57.5], [1.61184096E12, 170.6], [1.61184108E12, 64.4]], "isOverall": false, "label": "Browse Page-success", "isController": false}, {"data": [[1.61184102E12, 500.93333333333334], [1.61184096E12, 217.2], [1.61184108E12, 108.83333333333333]], "isOverall": false, "label": "Browse Page-failure", "isController": false}, {"data": [[1.61184102E12, 496.8833333333333], [1.61184096E12, 221.3], [1.61184108E12, 108.45]], "isOverall": false, "label": "Transaction Controller-failure", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61184108E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 215.6, "minX": 1.61184096E12, "maxY": 1454.8333333333333, "series": [{"data": [[1.61184102E12, 215.6], [1.61184096E12, 512.1166666666667], [1.61184108E12, 219.18333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.61184102E12, 1454.8333333333333], [1.61184096E12, 651.15], [1.61184108E12, 300.9]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61184108E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

