/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 461.0, "series": [{"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 3.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 3.0], [8.6, 3.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 4.0], [10.6, 4.0], [10.7, 4.0], [10.8, 4.0], [10.9, 4.0], [11.0, 4.0], [11.1, 4.0], [11.2, 4.0], [11.3, 4.0], [11.4, 4.0], [11.5, 4.0], [11.6, 4.0], [11.7, 4.0], [11.8, 4.0], [11.9, 4.0], [12.0, 4.0], [12.1, 4.0], [12.2, 4.0], [12.3, 4.0], [12.4, 4.0], [12.5, 4.0], [12.6, 4.0], [12.7, 4.0], [12.8, 4.0], [12.9, 4.0], [13.0, 4.0], [13.1, 5.0], [13.2, 5.0], [13.3, 5.0], [13.4, 5.0], [13.5, 5.0], [13.6, 5.0], [13.7, 5.0], [13.8, 5.0], [13.9, 5.0], [14.0, 5.0], [14.1, 5.0], [14.2, 5.0], [14.3, 5.0], [14.4, 5.0], [14.5, 5.0], [14.6, 6.0], [14.7, 6.0], [14.8, 6.0], [14.9, 6.0], [15.0, 6.0], [15.1, 6.0], [15.2, 6.0], [15.3, 6.0], [15.4, 6.0], [15.5, 6.0], [15.6, 6.0], [15.7, 6.0], [15.8, 7.0], [15.9, 7.0], [16.0, 7.0], [16.1, 7.0], [16.2, 7.0], [16.3, 7.0], [16.4, 7.0], [16.5, 7.0], [16.6, 7.0], [16.7, 8.0], [16.8, 8.0], [16.9, 8.0], [17.0, 8.0], [17.1, 8.0], [17.2, 9.0], [17.3, 9.0], [17.4, 9.0], [17.5, 9.0], [17.6, 9.0], [17.7, 10.0], [17.8, 10.0], [17.9, 10.0], [18.0, 10.0], [18.1, 10.0], [18.2, 10.0], [18.3, 11.0], [18.4, 11.0], [18.5, 12.0], [18.6, 12.0], [18.7, 12.0], [18.8, 13.0], [18.9, 13.0], [19.0, 14.0], [19.1, 14.0], [19.2, 15.0], [19.3, 15.0], [19.4, 16.0], [19.5, 16.0], [19.6, 17.0], [19.7, 18.0], [19.8, 18.0], [19.9, 19.0], [20.0, 19.0], [20.1, 19.0], [20.2, 19.0], [20.3, 20.0], [20.4, 20.0], [20.5, 21.0], [20.6, 21.0], [20.7, 22.0], [20.8, 22.0], [20.9, 24.0], [21.0, 25.0], [21.1, 25.0], [21.2, 27.0], [21.3, 28.0], [21.4, 28.0], [21.5, 28.0], [21.6, 29.0], [21.7, 30.0], [21.8, 31.0], [21.9, 32.0], [22.0, 33.0], [22.1, 34.0], [22.2, 35.0], [22.3, 35.0], [22.4, 36.0], [22.5, 36.0], [22.6, 37.0], [22.7, 38.0], [22.8, 39.0], [22.9, 40.0], [23.0, 41.0], [23.1, 42.0], [23.2, 42.0], [23.3, 44.0], [23.4, 45.0], [23.5, 45.0], [23.6, 46.0], [23.7, 46.0], [23.8, 47.0], [23.9, 48.0], [24.0, 49.0], [24.1, 50.0], [24.2, 51.0], [24.3, 52.0], [24.4, 52.0], [24.5, 53.0], [24.6, 54.0], [24.7, 55.0], [24.8, 55.0], [24.9, 56.0], [25.0, 56.0], [25.1, 56.0], [25.2, 57.0], [25.3, 57.0], [25.4, 57.0], [25.5, 57.0], [25.6, 58.0], [25.7, 58.0], [25.8, 58.0], [25.9, 58.0], [26.0, 59.0], [26.1, 59.0], [26.2, 59.0], [26.3, 60.0], [26.4, 60.0], [26.5, 60.0], [26.6, 60.0], [26.7, 61.0], [26.8, 61.0], [26.9, 61.0], [27.0, 62.0], [27.1, 62.0], [27.2, 63.0], [27.3, 63.0], [27.4, 64.0], [27.5, 64.0], [27.6, 64.0], [27.7, 65.0], [27.8, 65.0], [27.9, 66.0], [28.0, 66.0], [28.1, 67.0], [28.2, 67.0], [28.3, 68.0], [28.4, 68.0], [28.5, 68.0], [28.6, 69.0], [28.7, 69.0], [28.8, 69.0], [28.9, 70.0], [29.0, 70.0], [29.1, 70.0], [29.2, 71.0], [29.3, 71.0], [29.4, 71.0], [29.5, 72.0], [29.6, 72.0], [29.7, 72.0], [29.8, 72.0], [29.9, 73.0], [30.0, 73.0], [30.1, 73.0], [30.2, 73.0], [30.3, 74.0], [30.4, 74.0], [30.5, 74.0], [30.6, 74.0], [30.7, 75.0], [30.8, 75.0], [30.9, 75.0], [31.0, 76.0], [31.1, 76.0], [31.2, 76.0], [31.3, 76.0], [31.4, 76.0], [31.5, 77.0], [31.6, 77.0], [31.7, 77.0], [31.8, 77.0], [31.9, 77.0], [32.0, 78.0], [32.1, 78.0], [32.2, 78.0], [32.3, 78.0], [32.4, 79.0], [32.5, 79.0], [32.6, 79.0], [32.7, 79.0], [32.8, 79.0], [32.9, 80.0], [33.0, 80.0], [33.1, 80.0], [33.2, 81.0], [33.3, 81.0], [33.4, 81.0], [33.5, 82.0], [33.6, 82.0], [33.7, 82.0], [33.8, 83.0], [33.9, 83.0], [34.0, 83.0], [34.1, 84.0], [34.2, 84.0], [34.3, 86.0], [34.4, 86.0], [34.5, 87.0], [34.6, 88.0], [34.7, 89.0], [34.8, 89.0], [34.9, 90.0], [35.0, 90.0], [35.1, 91.0], [35.2, 91.0], [35.3, 91.0], [35.4, 92.0], [35.5, 92.0], [35.6, 92.0], [35.7, 93.0], [35.8, 93.0], [35.9, 93.0], [36.0, 93.0], [36.1, 94.0], [36.2, 94.0], [36.3, 94.0], [36.4, 95.0], [36.5, 95.0], [36.6, 95.0], [36.7, 96.0], [36.8, 96.0], [36.9, 96.0], [37.0, 96.0], [37.1, 97.0], [37.2, 97.0], [37.3, 97.0], [37.4, 98.0], [37.5, 98.0], [37.6, 98.0], [37.7, 98.0], [37.8, 99.0], [37.9, 99.0], [38.0, 99.0], [38.1, 99.0], [38.2, 100.0], [38.3, 100.0], [38.4, 100.0], [38.5, 100.0], [38.6, 100.0], [38.7, 101.0], [38.8, 101.0], [38.9, 101.0], [39.0, 101.0], [39.1, 101.0], [39.2, 101.0], [39.3, 102.0], [39.4, 102.0], [39.5, 102.0], [39.6, 102.0], [39.7, 102.0], [39.8, 103.0], [39.9, 103.0], [40.0, 103.0], [40.1, 103.0], [40.2, 103.0], [40.3, 103.0], [40.4, 104.0], [40.5, 104.0], [40.6, 104.0], [40.7, 104.0], [40.8, 104.0], [40.9, 105.0], [41.0, 105.0], [41.1, 105.0], [41.2, 105.0], [41.3, 105.0], [41.4, 105.0], [41.5, 105.0], [41.6, 106.0], [41.7, 106.0], [41.8, 106.0], [41.9, 106.0], [42.0, 106.0], [42.1, 107.0], [42.2, 107.0], [42.3, 107.0], [42.4, 107.0], [42.5, 108.0], [42.6, 108.0], [42.7, 108.0], [42.8, 108.0], [42.9, 109.0], [43.0, 109.0], [43.1, 109.0], [43.2, 109.0], [43.3, 110.0], [43.4, 110.0], [43.5, 110.0], [43.6, 110.0], [43.7, 110.0], [43.8, 110.0], [43.9, 111.0], [44.0, 111.0], [44.1, 111.0], [44.2, 112.0], [44.3, 112.0], [44.4, 112.0], [44.5, 112.0], [44.6, 113.0], [44.7, 113.0], [44.8, 113.0], [44.9, 113.0], [45.0, 113.0], [45.1, 113.0], [45.2, 114.0], [45.3, 114.0], [45.4, 114.0], [45.5, 114.0], [45.6, 114.0], [45.7, 114.0], [45.8, 114.0], [45.9, 115.0], [46.0, 115.0], [46.1, 115.0], [46.2, 115.0], [46.3, 115.0], [46.4, 116.0], [46.5, 116.0], [46.6, 116.0], [46.7, 116.0], [46.8, 117.0], [46.9, 117.0], [47.0, 117.0], [47.1, 117.0], [47.2, 118.0], [47.3, 118.0], [47.4, 118.0], [47.5, 118.0], [47.6, 118.0], [47.7, 119.0], [47.8, 119.0], [47.9, 119.0], [48.0, 119.0], [48.1, 120.0], [48.2, 120.0], [48.3, 120.0], [48.4, 120.0], [48.5, 121.0], [48.6, 121.0], [48.7, 121.0], [48.8, 121.0], [48.9, 121.0], [49.0, 122.0], [49.1, 122.0], [49.2, 122.0], [49.3, 122.0], [49.4, 122.0], [49.5, 123.0], [49.6, 123.0], [49.7, 123.0], [49.8, 123.0], [49.9, 123.0], [50.0, 124.0], [50.1, 124.0], [50.2, 124.0], [50.3, 124.0], [50.4, 124.0], [50.5, 124.0], [50.6, 125.0], [50.7, 125.0], [50.8, 125.0], [50.9, 125.0], [51.0, 126.0], [51.1, 126.0], [51.2, 126.0], [51.3, 126.0], [51.4, 127.0], [51.5, 127.0], [51.6, 127.0], [51.7, 127.0], [51.8, 128.0], [51.9, 128.0], [52.0, 128.0], [52.1, 129.0], [52.2, 129.0], [52.3, 129.0], [52.4, 129.0], [52.5, 130.0], [52.6, 130.0], [52.7, 130.0], [52.8, 130.0], [52.9, 130.0], [53.0, 130.0], [53.1, 131.0], [53.2, 131.0], [53.3, 131.0], [53.4, 131.0], [53.5, 131.0], [53.6, 132.0], [53.7, 132.0], [53.8, 132.0], [53.9, 132.0], [54.0, 133.0], [54.1, 133.0], [54.2, 133.0], [54.3, 133.0], [54.4, 133.0], [54.5, 134.0], [54.6, 134.0], [54.7, 134.0], [54.8, 134.0], [54.9, 135.0], [55.0, 135.0], [55.1, 135.0], [55.2, 135.0], [55.3, 135.0], [55.4, 135.0], [55.5, 136.0], [55.6, 136.0], [55.7, 136.0], [55.8, 137.0], [55.9, 137.0], [56.0, 137.0], [56.1, 137.0], [56.2, 137.0], [56.3, 137.0], [56.4, 138.0], [56.5, 138.0], [56.6, 138.0], [56.7, 138.0], [56.8, 138.0], [56.9, 138.0], [57.0, 138.0], [57.1, 139.0], [57.2, 139.0], [57.3, 139.0], [57.4, 139.0], [57.5, 139.0], [57.6, 139.0], [57.7, 140.0], [57.8, 140.0], [57.9, 140.0], [58.0, 140.0], [58.1, 140.0], [58.2, 140.0], [58.3, 140.0], [58.4, 141.0], [58.5, 141.0], [58.6, 141.0], [58.7, 141.0], [58.8, 141.0], [58.9, 141.0], [59.0, 141.0], [59.1, 142.0], [59.2, 142.0], [59.3, 142.0], [59.4, 142.0], [59.5, 142.0], [59.6, 142.0], [59.7, 142.0], [59.8, 142.0], [59.9, 143.0], [60.0, 143.0], [60.1, 143.0], [60.2, 143.0], [60.3, 143.0], [60.4, 143.0], [60.5, 143.0], [60.6, 144.0], [60.7, 144.0], [60.8, 144.0], [60.9, 144.0], [61.0, 144.0], [61.1, 144.0], [61.2, 144.0], [61.3, 144.0], [61.4, 145.0], [61.5, 145.0], [61.6, 145.0], [61.7, 145.0], [61.8, 145.0], [61.9, 145.0], [62.0, 145.0], [62.1, 145.0], [62.2, 146.0], [62.3, 146.0], [62.4, 146.0], [62.5, 146.0], [62.6, 146.0], [62.7, 147.0], [62.8, 147.0], [62.9, 147.0], [63.0, 147.0], [63.1, 147.0], [63.2, 148.0], [63.3, 148.0], [63.4, 148.0], [63.5, 148.0], [63.6, 148.0], [63.7, 149.0], [63.8, 149.0], [63.9, 149.0], [64.0, 149.0], [64.1, 149.0], [64.2, 150.0], [64.3, 150.0], [64.4, 150.0], [64.5, 150.0], [64.6, 151.0], [64.7, 151.0], [64.8, 151.0], [64.9, 151.0], [65.0, 152.0], [65.1, 152.0], [65.2, 152.0], [65.3, 152.0], [65.4, 153.0], [65.5, 153.0], [65.6, 153.0], [65.7, 153.0], [65.8, 154.0], [65.9, 154.0], [66.0, 154.0], [66.1, 154.0], [66.2, 154.0], [66.3, 154.0], [66.4, 154.0], [66.5, 155.0], [66.6, 155.0], [66.7, 155.0], [66.8, 155.0], [66.9, 155.0], [67.0, 156.0], [67.1, 156.0], [67.2, 156.0], [67.3, 156.0], [67.4, 156.0], [67.5, 156.0], [67.6, 156.0], [67.7, 157.0], [67.8, 157.0], [67.9, 157.0], [68.0, 158.0], [68.1, 158.0], [68.2, 158.0], [68.3, 158.0], [68.4, 159.0], [68.5, 159.0], [68.6, 159.0], [68.7, 159.0], [68.8, 160.0], [68.9, 160.0], [69.0, 160.0], [69.1, 160.0], [69.2, 161.0], [69.3, 161.0], [69.4, 161.0], [69.5, 161.0], [69.6, 161.0], [69.7, 162.0], [69.8, 162.0], [69.9, 162.0], [70.0, 162.0], [70.1, 163.0], [70.2, 163.0], [70.3, 163.0], [70.4, 163.0], [70.5, 163.0], [70.6, 164.0], [70.7, 164.0], [70.8, 164.0], [70.9, 164.0], [71.0, 164.0], [71.1, 165.0], [71.2, 165.0], [71.3, 165.0], [71.4, 165.0], [71.5, 165.0], [71.6, 166.0], [71.7, 166.0], [71.8, 166.0], [71.9, 166.0], [72.0, 166.0], [72.1, 167.0], [72.2, 167.0], [72.3, 167.0], [72.4, 167.0], [72.5, 167.0], [72.6, 167.0], [72.7, 168.0], [72.8, 168.0], [72.9, 168.0], [73.0, 168.0], [73.1, 168.0], [73.2, 169.0], [73.3, 169.0], [73.4, 169.0], [73.5, 169.0], [73.6, 169.0], [73.7, 169.0], [73.8, 170.0], [73.9, 170.0], [74.0, 170.0], [74.1, 170.0], [74.2, 170.0], [74.3, 170.0], [74.4, 171.0], [74.5, 171.0], [74.6, 171.0], [74.7, 171.0], [74.8, 172.0], [74.9, 172.0], [75.0, 172.0], [75.1, 172.0], [75.2, 172.0], [75.3, 172.0], [75.4, 173.0], [75.5, 173.0], [75.6, 173.0], [75.7, 173.0], [75.8, 173.0], [75.9, 173.0], [76.0, 174.0], [76.1, 174.0], [76.2, 174.0], [76.3, 174.0], [76.4, 174.0], [76.5, 175.0], [76.6, 175.0], [76.7, 175.0], [76.8, 175.0], [76.9, 175.0], [77.0, 175.0], [77.1, 175.0], [77.2, 176.0], [77.3, 176.0], [77.4, 176.0], [77.5, 176.0], [77.6, 176.0], [77.7, 176.0], [77.8, 177.0], [77.9, 177.0], [78.0, 177.0], [78.1, 177.0], [78.2, 177.0], [78.3, 177.0], [78.4, 177.0], [78.5, 178.0], [78.6, 178.0], [78.7, 178.0], [78.8, 178.0], [78.9, 178.0], [79.0, 179.0], [79.1, 179.0], [79.2, 179.0], [79.3, 179.0], [79.4, 179.0], [79.5, 179.0], [79.6, 179.0], [79.7, 179.0], [79.8, 179.0], [79.9, 180.0], [80.0, 180.0], [80.1, 180.0], [80.2, 180.0], [80.3, 180.0], [80.4, 180.0], [80.5, 181.0], [80.6, 181.0], [80.7, 181.0], [80.8, 181.0], [80.9, 181.0], [81.0, 181.0], [81.1, 181.0], [81.2, 182.0], [81.3, 182.0], [81.4, 182.0], [81.5, 182.0], [81.6, 182.0], [81.7, 182.0], [81.8, 183.0], [81.9, 183.0], [82.0, 183.0], [82.1, 183.0], [82.2, 183.0], [82.3, 183.0], [82.4, 184.0], [82.5, 184.0], [82.6, 184.0], [82.7, 184.0], [82.8, 184.0], [82.9, 184.0], [83.0, 185.0], [83.1, 185.0], [83.2, 185.0], [83.3, 185.0], [83.4, 185.0], [83.5, 185.0], [83.6, 186.0], [83.7, 186.0], [83.8, 186.0], [83.9, 186.0], [84.0, 186.0], [84.1, 186.0], [84.2, 187.0], [84.3, 187.0], [84.4, 187.0], [84.5, 187.0], [84.6, 187.0], [84.7, 187.0], [84.8, 188.0], [84.9, 188.0], [85.0, 188.0], [85.1, 188.0], [85.2, 188.0], [85.3, 189.0], [85.4, 189.0], [85.5, 189.0], [85.6, 189.0], [85.7, 189.0], [85.8, 189.0], [85.9, 189.0], [86.0, 190.0], [86.1, 190.0], [86.2, 190.0], [86.3, 190.0], [86.4, 190.0], [86.5, 190.0], [86.6, 190.0], [86.7, 191.0], [86.8, 191.0], [86.9, 191.0], [87.0, 191.0], [87.1, 191.0], [87.2, 191.0], [87.3, 192.0], [87.4, 192.0], [87.5, 192.0], [87.6, 192.0], [87.7, 192.0], [87.8, 192.0], [87.9, 192.0], [88.0, 193.0], [88.1, 193.0], [88.2, 193.0], [88.3, 193.0], [88.4, 194.0], [88.5, 194.0], [88.6, 194.0], [88.7, 194.0], [88.8, 195.0], [88.9, 195.0], [89.0, 195.0], [89.1, 195.0], [89.2, 195.0], [89.3, 195.0], [89.4, 196.0], [89.5, 196.0], [89.6, 196.0], [89.7, 196.0], [89.8, 196.0], [89.9, 196.0], [90.0, 197.0], [90.1, 197.0], [90.2, 197.0], [90.3, 197.0], [90.4, 197.0], [90.5, 197.0], [90.6, 198.0], [90.7, 198.0], [90.8, 198.0], [90.9, 198.0], [91.0, 198.0], [91.1, 199.0], [91.2, 199.0], [91.3, 199.0], [91.4, 199.0], [91.5, 199.0], [91.6, 200.0], [91.7, 200.0], [91.8, 200.0], [91.9, 200.0], [92.0, 200.0], [92.1, 201.0], [92.2, 201.0], [92.3, 201.0], [92.4, 201.0], [92.5, 202.0], [92.6, 202.0], [92.7, 202.0], [92.8, 203.0], [92.9, 203.0], [93.0, 203.0], [93.1, 203.0], [93.2, 204.0], [93.3, 204.0], [93.4, 204.0], [93.5, 204.0], [93.6, 205.0], [93.7, 205.0], [93.8, 205.0], [93.9, 205.0], [94.0, 206.0], [94.1, 206.0], [94.2, 206.0], [94.3, 206.0], [94.4, 206.0], [94.5, 207.0], [94.6, 207.0], [94.7, 207.0], [94.8, 207.0], [94.9, 207.0], [95.0, 208.0], [95.1, 208.0], [95.2, 208.0], [95.3, 208.0], [95.4, 208.0], [95.5, 209.0], [95.6, 209.0], [95.7, 210.0], [95.8, 210.0], [95.9, 211.0], [96.0, 211.0], [96.1, 211.0], [96.2, 212.0], [96.3, 212.0], [96.4, 212.0], [96.5, 213.0], [96.6, 213.0], [96.7, 213.0], [96.8, 214.0], [96.9, 214.0], [97.0, 214.0], [97.1, 215.0], [97.2, 215.0], [97.3, 215.0], [97.4, 215.0], [97.5, 216.0], [97.6, 216.0], [97.7, 216.0], [97.8, 217.0], [97.9, 217.0], [98.0, 217.0], [98.1, 218.0], [98.2, 218.0], [98.3, 219.0], [98.4, 219.0], [98.5, 219.0], [98.6, 220.0], [98.7, 221.0], [98.8, 221.0], [98.9, 223.0], [99.0, 224.0], [99.1, 225.0], [99.2, 226.0], [99.3, 227.0], [99.4, 227.0], [99.5, 227.0], [99.6, 229.0], [99.7, 230.0], [99.8, 233.0], [99.9, 235.0]], "isOverall": false, "label": "Browse Page", "isController": false}, {"data": [[0.0, 1.0], [0.1, 2.0], [0.2, 2.0], [0.3, 3.0], [0.4, 3.0], [0.5, 3.0], [0.6, 3.0], [0.7, 3.0], [0.8, 4.0], [0.9, 4.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 4.0], [2.2, 4.0], [2.3, 4.0], [2.4, 4.0], [2.5, 4.0], [2.6, 4.0], [2.7, 5.0], [2.8, 5.0], [2.9, 5.0], [3.0, 5.0], [3.1, 5.0], [3.2, 5.0], [3.3, 5.0], [3.4, 5.0], [3.5, 5.0], [3.6, 5.0], [3.7, 5.0], [3.8, 6.0], [3.9, 6.0], [4.0, 6.0], [4.1, 6.0], [4.2, 6.0], [4.3, 6.0], [4.4, 6.0], [4.5, 6.0], [4.6, 6.0], [4.7, 6.0], [4.8, 6.0], [4.9, 7.0], [5.0, 7.0], [5.1, 7.0], [5.2, 7.0], [5.3, 7.0], [5.4, 7.0], [5.5, 7.0], [5.6, 7.0], [5.7, 7.0], [5.8, 7.0], [5.9, 7.0], [6.0, 7.0], [6.1, 8.0], [6.2, 8.0], [6.3, 8.0], [6.4, 8.0], [6.5, 8.0], [6.6, 8.0], [6.7, 8.0], [6.8, 8.0], [6.9, 8.0], [7.0, 8.0], [7.1, 8.0], [7.2, 8.0], [7.3, 8.0], [7.4, 8.0], [7.5, 9.0], [7.6, 9.0], [7.7, 9.0], [7.8, 9.0], [7.9, 9.0], [8.0, 9.0], [8.1, 9.0], [8.2, 9.0], [8.3, 9.0], [8.4, 9.0], [8.5, 9.0], [8.6, 9.0], [8.7, 9.0], [8.8, 9.0], [8.9, 9.0], [9.0, 9.0], [9.1, 10.0], [9.2, 10.0], [9.3, 10.0], [9.4, 10.0], [9.5, 10.0], [9.6, 10.0], [9.7, 10.0], [9.8, 10.0], [9.9, 10.0], [10.0, 10.0], [10.1, 11.0], [10.2, 11.0], [10.3, 11.0], [10.4, 11.0], [10.5, 11.0], [10.6, 11.0], [10.7, 11.0], [10.8, 11.0], [10.9, 11.0], [11.0, 12.0], [11.1, 12.0], [11.2, 12.0], [11.3, 12.0], [11.4, 12.0], [11.5, 12.0], [11.6, 13.0], [11.7, 13.0], [11.8, 13.0], [11.9, 13.0], [12.0, 13.0], [12.1, 14.0], [12.2, 14.0], [12.3, 14.0], [12.4, 14.0], [12.5, 14.0], [12.6, 15.0], [12.7, 15.0], [12.8, 15.0], [12.9, 15.0], [13.0, 16.0], [13.1, 16.0], [13.2, 16.0], [13.3, 17.0], [13.4, 17.0], [13.5, 17.0], [13.6, 18.0], [13.7, 18.0], [13.8, 18.0], [13.9, 18.0], [14.0, 19.0], [14.1, 19.0], [14.2, 19.0], [14.3, 20.0], [14.4, 20.0], [14.5, 21.0], [14.6, 22.0], [14.7, 22.0], [14.8, 23.0], [14.9, 23.0], [15.0, 23.0], [15.1, 24.0], [15.2, 24.0], [15.3, 25.0], [15.4, 26.0], [15.5, 26.0], [15.6, 27.0], [15.7, 28.0], [15.8, 28.0], [15.9, 29.0], [16.0, 29.0], [16.1, 30.0], [16.2, 32.0], [16.3, 32.0], [16.4, 33.0], [16.5, 34.0], [16.6, 34.0], [16.7, 35.0], [16.8, 36.0], [16.9, 36.0], [17.0, 37.0], [17.1, 38.0], [17.2, 39.0], [17.3, 40.0], [17.4, 41.0], [17.5, 42.0], [17.6, 43.0], [17.7, 44.0], [17.8, 44.0], [17.9, 45.0], [18.0, 46.0], [18.1, 47.0], [18.2, 48.0], [18.3, 49.0], [18.4, 51.0], [18.5, 53.0], [18.6, 56.0], [18.7, 57.0], [18.8, 59.0], [18.9, 61.0], [19.0, 63.0], [19.1, 64.0], [19.2, 65.0], [19.3, 67.0], [19.4, 70.0], [19.5, 72.0], [19.6, 74.0], [19.7, 76.0], [19.8, 77.0], [19.9, 79.0], [20.0, 81.0], [20.1, 82.0], [20.2, 83.0], [20.3, 84.0], [20.4, 87.0], [20.5, 89.0], [20.6, 91.0], [20.7, 92.0], [20.8, 94.0], [20.9, 95.0], [21.0, 96.0], [21.1, 98.0], [21.2, 100.0], [21.3, 101.0], [21.4, 103.0], [21.5, 105.0], [21.6, 106.0], [21.7, 106.0], [21.8, 107.0], [21.9, 108.0], [22.0, 110.0], [22.1, 112.0], [22.2, 113.0], [22.3, 114.0], [22.4, 114.0], [22.5, 115.0], [22.6, 116.0], [22.7, 116.0], [22.8, 117.0], [22.9, 118.0], [23.0, 120.0], [23.1, 121.0], [23.2, 122.0], [23.3, 124.0], [23.4, 126.0], [23.5, 128.0], [23.6, 129.0], [23.7, 130.0], [23.8, 131.0], [23.9, 132.0], [24.0, 133.0], [24.1, 134.0], [24.2, 135.0], [24.3, 135.0], [24.4, 136.0], [24.5, 136.0], [24.6, 137.0], [24.7, 137.0], [24.8, 138.0], [24.9, 139.0], [25.0, 139.0], [25.1, 140.0], [25.2, 141.0], [25.3, 141.0], [25.4, 142.0], [25.5, 143.0], [25.6, 144.0], [25.7, 145.0], [25.8, 146.0], [25.9, 146.0], [26.0, 147.0], [26.1, 148.0], [26.2, 149.0], [26.3, 150.0], [26.4, 150.0], [26.5, 151.0], [26.6, 152.0], [26.7, 152.0], [26.8, 153.0], [26.9, 154.0], [27.0, 155.0], [27.1, 155.0], [27.2, 156.0], [27.3, 156.0], [27.4, 157.0], [27.5, 158.0], [27.6, 158.0], [27.7, 159.0], [27.8, 160.0], [27.9, 160.0], [28.0, 161.0], [28.1, 162.0], [28.2, 162.0], [28.3, 162.0], [28.4, 163.0], [28.5, 164.0], [28.6, 164.0], [28.7, 165.0], [28.8, 165.0], [28.9, 166.0], [29.0, 167.0], [29.1, 168.0], [29.2, 168.0], [29.3, 169.0], [29.4, 169.0], [29.5, 170.0], [29.6, 171.0], [29.7, 171.0], [29.8, 172.0], [29.9, 172.0], [30.0, 173.0], [30.1, 173.0], [30.2, 174.0], [30.3, 175.0], [30.4, 175.0], [30.5, 176.0], [30.6, 176.0], [30.7, 177.0], [30.8, 178.0], [30.9, 178.0], [31.0, 179.0], [31.1, 180.0], [31.2, 180.0], [31.3, 181.0], [31.4, 181.0], [31.5, 182.0], [31.6, 182.0], [31.7, 183.0], [31.8, 183.0], [31.9, 184.0], [32.0, 184.0], [32.1, 185.0], [32.2, 185.0], [32.3, 185.0], [32.4, 186.0], [32.5, 186.0], [32.6, 187.0], [32.7, 187.0], [32.8, 188.0], [32.9, 188.0], [33.0, 189.0], [33.1, 189.0], [33.2, 190.0], [33.3, 191.0], [33.4, 191.0], [33.5, 192.0], [33.6, 192.0], [33.7, 192.0], [33.8, 193.0], [33.9, 193.0], [34.0, 193.0], [34.1, 194.0], [34.2, 194.0], [34.3, 195.0], [34.4, 195.0], [34.5, 195.0], [34.6, 196.0], [34.7, 196.0], [34.8, 196.0], [34.9, 197.0], [35.0, 197.0], [35.1, 197.0], [35.2, 198.0], [35.3, 199.0], [35.4, 199.0], [35.5, 200.0], [35.6, 200.0], [35.7, 201.0], [35.8, 201.0], [35.9, 202.0], [36.0, 202.0], [36.1, 203.0], [36.2, 204.0], [36.3, 205.0], [36.4, 206.0], [36.5, 206.0], [36.6, 206.0], [36.7, 207.0], [36.8, 207.0], [36.9, 208.0], [37.0, 208.0], [37.1, 209.0], [37.2, 209.0], [37.3, 209.0], [37.4, 210.0], [37.5, 210.0], [37.6, 211.0], [37.7, 211.0], [37.8, 211.0], [37.9, 212.0], [38.0, 212.0], [38.1, 212.0], [38.2, 213.0], [38.3, 213.0], [38.4, 213.0], [38.5, 213.0], [38.6, 213.0], [38.7, 213.0], [38.8, 214.0], [38.9, 214.0], [39.0, 215.0], [39.1, 215.0], [39.2, 215.0], [39.3, 216.0], [39.4, 216.0], [39.5, 216.0], [39.6, 217.0], [39.7, 217.0], [39.8, 218.0], [39.9, 218.0], [40.0, 219.0], [40.1, 219.0], [40.2, 219.0], [40.3, 220.0], [40.4, 220.0], [40.5, 221.0], [40.6, 221.0], [40.7, 221.0], [40.8, 222.0], [40.9, 222.0], [41.0, 222.0], [41.1, 223.0], [41.2, 223.0], [41.3, 223.0], [41.4, 224.0], [41.5, 224.0], [41.6, 224.0], [41.7, 225.0], [41.8, 225.0], [41.9, 225.0], [42.0, 226.0], [42.1, 226.0], [42.2, 226.0], [42.3, 227.0], [42.4, 227.0], [42.5, 228.0], [42.6, 228.0], [42.7, 228.0], [42.8, 229.0], [42.9, 229.0], [43.0, 229.0], [43.1, 230.0], [43.2, 230.0], [43.3, 231.0], [43.4, 231.0], [43.5, 231.0], [43.6, 232.0], [43.7, 232.0], [43.8, 232.0], [43.9, 232.0], [44.0, 233.0], [44.1, 233.0], [44.2, 233.0], [44.3, 233.0], [44.4, 234.0], [44.5, 234.0], [44.6, 234.0], [44.7, 235.0], [44.8, 235.0], [44.9, 235.0], [45.0, 236.0], [45.1, 236.0], [45.2, 236.0], [45.3, 236.0], [45.4, 236.0], [45.5, 237.0], [45.6, 237.0], [45.7, 237.0], [45.8, 237.0], [45.9, 237.0], [46.0, 238.0], [46.1, 238.0], [46.2, 238.0], [46.3, 238.0], [46.4, 239.0], [46.5, 239.0], [46.6, 239.0], [46.7, 239.0], [46.8, 239.0], [46.9, 240.0], [47.0, 240.0], [47.1, 240.0], [47.2, 241.0], [47.3, 241.0], [47.4, 241.0], [47.5, 242.0], [47.6, 242.0], [47.7, 242.0], [47.8, 242.0], [47.9, 243.0], [48.0, 243.0], [48.1, 243.0], [48.2, 243.0], [48.3, 244.0], [48.4, 244.0], [48.5, 244.0], [48.6, 244.0], [48.7, 245.0], [48.8, 245.0], [48.9, 245.0], [49.0, 245.0], [49.1, 246.0], [49.2, 246.0], [49.3, 246.0], [49.4, 246.0], [49.5, 247.0], [49.6, 247.0], [49.7, 247.0], [49.8, 247.0], [49.9, 248.0], [50.0, 248.0], [50.1, 248.0], [50.2, 248.0], [50.3, 249.0], [50.4, 249.0], [50.5, 249.0], [50.6, 249.0], [50.7, 249.0], [50.8, 250.0], [50.9, 250.0], [51.0, 251.0], [51.1, 251.0], [51.2, 251.0], [51.3, 252.0], [51.4, 252.0], [51.5, 252.0], [51.6, 252.0], [51.7, 253.0], [51.8, 253.0], [51.9, 253.0], [52.0, 254.0], [52.1, 254.0], [52.2, 255.0], [52.3, 255.0], [52.4, 256.0], [52.5, 256.0], [52.6, 257.0], [52.7, 258.0], [52.8, 258.0], [52.9, 259.0], [53.0, 259.0], [53.1, 259.0], [53.2, 259.0], [53.3, 260.0], [53.4, 260.0], [53.5, 261.0], [53.6, 261.0], [53.7, 261.0], [53.8, 262.0], [53.9, 262.0], [54.0, 262.0], [54.1, 263.0], [54.2, 263.0], [54.3, 264.0], [54.4, 264.0], [54.5, 264.0], [54.6, 264.0], [54.7, 265.0], [54.8, 265.0], [54.9, 266.0], [55.0, 266.0], [55.1, 267.0], [55.2, 267.0], [55.3, 268.0], [55.4, 268.0], [55.5, 268.0], [55.6, 269.0], [55.7, 269.0], [55.8, 270.0], [55.9, 270.0], [56.0, 270.0], [56.1, 271.0], [56.2, 271.0], [56.3, 271.0], [56.4, 272.0], [56.5, 272.0], [56.6, 273.0], [56.7, 273.0], [56.8, 274.0], [56.9, 274.0], [57.0, 274.0], [57.1, 275.0], [57.2, 275.0], [57.3, 276.0], [57.4, 276.0], [57.5, 276.0], [57.6, 277.0], [57.7, 277.0], [57.8, 277.0], [57.9, 277.0], [58.0, 278.0], [58.1, 278.0], [58.2, 278.0], [58.3, 279.0], [58.4, 279.0], [58.5, 280.0], [58.6, 280.0], [58.7, 281.0], [58.8, 282.0], [58.9, 283.0], [59.0, 284.0], [59.1, 284.0], [59.2, 285.0], [59.3, 285.0], [59.4, 286.0], [59.5, 286.0], [59.6, 287.0], [59.7, 287.0], [59.8, 288.0], [59.9, 288.0], [60.0, 288.0], [60.1, 288.0], [60.2, 288.0], [60.3, 289.0], [60.4, 289.0], [60.5, 289.0], [60.6, 290.0], [60.7, 290.0], [60.8, 290.0], [60.9, 291.0], [61.0, 291.0], [61.1, 291.0], [61.2, 291.0], [61.3, 292.0], [61.4, 292.0], [61.5, 293.0], [61.6, 293.0], [61.7, 294.0], [61.8, 294.0], [61.9, 295.0], [62.0, 295.0], [62.1, 296.0], [62.2, 296.0], [62.3, 297.0], [62.4, 298.0], [62.5, 299.0], [62.6, 299.0], [62.7, 300.0], [62.8, 300.0], [62.9, 300.0], [63.0, 300.0], [63.1, 301.0], [63.2, 301.0], [63.3, 301.0], [63.4, 302.0], [63.5, 302.0], [63.6, 302.0], [63.7, 303.0], [63.8, 303.0], [63.9, 304.0], [64.0, 304.0], [64.1, 305.0], [64.2, 305.0], [64.3, 306.0], [64.4, 306.0], [64.5, 306.0], [64.6, 307.0], [64.7, 307.0], [64.8, 308.0], [64.9, 308.0], [65.0, 308.0], [65.1, 309.0], [65.2, 309.0], [65.3, 309.0], [65.4, 310.0], [65.5, 310.0], [65.6, 310.0], [65.7, 310.0], [65.8, 310.0], [65.9, 311.0], [66.0, 311.0], [66.1, 311.0], [66.2, 311.0], [66.3, 311.0], [66.4, 312.0], [66.5, 312.0], [66.6, 312.0], [66.7, 312.0], [66.8, 313.0], [66.9, 313.0], [67.0, 313.0], [67.1, 314.0], [67.2, 314.0], [67.3, 314.0], [67.4, 314.0], [67.5, 314.0], [67.6, 314.0], [67.7, 315.0], [67.8, 315.0], [67.9, 315.0], [68.0, 315.0], [68.1, 315.0], [68.2, 316.0], [68.3, 316.0], [68.4, 316.0], [68.5, 316.0], [68.6, 317.0], [68.7, 317.0], [68.8, 317.0], [68.9, 317.0], [69.0, 318.0], [69.1, 318.0], [69.2, 318.0], [69.3, 319.0], [69.4, 319.0], [69.5, 319.0], [69.6, 320.0], [69.7, 320.0], [69.8, 320.0], [69.9, 320.0], [70.0, 321.0], [70.1, 321.0], [70.2, 321.0], [70.3, 321.0], [70.4, 322.0], [70.5, 322.0], [70.6, 322.0], [70.7, 323.0], [70.8, 323.0], [70.9, 324.0], [71.0, 324.0], [71.1, 325.0], [71.2, 325.0], [71.3, 325.0], [71.4, 326.0], [71.5, 327.0], [71.6, 327.0], [71.7, 328.0], [71.8, 328.0], [71.9, 328.0], [72.0, 329.0], [72.1, 329.0], [72.2, 329.0], [72.3, 330.0], [72.4, 330.0], [72.5, 330.0], [72.6, 331.0], [72.7, 331.0], [72.8, 332.0], [72.9, 332.0], [73.0, 332.0], [73.1, 332.0], [73.2, 333.0], [73.3, 333.0], [73.4, 333.0], [73.5, 333.0], [73.6, 334.0], [73.7, 334.0], [73.8, 334.0], [73.9, 335.0], [74.0, 335.0], [74.1, 335.0], [74.2, 335.0], [74.3, 335.0], [74.4, 336.0], [74.5, 336.0], [74.6, 336.0], [74.7, 337.0], [74.8, 337.0], [74.9, 337.0], [75.0, 338.0], [75.1, 338.0], [75.2, 338.0], [75.3, 339.0], [75.4, 339.0], [75.5, 339.0], [75.6, 340.0], [75.7, 340.0], [75.8, 340.0], [75.9, 341.0], [76.0, 341.0], [76.1, 341.0], [76.2, 341.0], [76.3, 341.0], [76.4, 342.0], [76.5, 342.0], [76.6, 342.0], [76.7, 342.0], [76.8, 342.0], [76.9, 343.0], [77.0, 343.0], [77.1, 343.0], [77.2, 343.0], [77.3, 343.0], [77.4, 343.0], [77.5, 344.0], [77.6, 344.0], [77.7, 344.0], [77.8, 344.0], [77.9, 344.0], [78.0, 345.0], [78.1, 345.0], [78.2, 345.0], [78.3, 345.0], [78.4, 345.0], [78.5, 346.0], [78.6, 346.0], [78.7, 346.0], [78.8, 346.0], [78.9, 347.0], [79.0, 347.0], [79.1, 347.0], [79.2, 347.0], [79.3, 347.0], [79.4, 348.0], [79.5, 348.0], [79.6, 348.0], [79.7, 348.0], [79.8, 349.0], [79.9, 349.0], [80.0, 349.0], [80.1, 350.0], [80.2, 350.0], [80.3, 350.0], [80.4, 350.0], [80.5, 350.0], [80.6, 350.0], [80.7, 351.0], [80.8, 351.0], [80.9, 351.0], [81.0, 352.0], [81.1, 352.0], [81.2, 352.0], [81.3, 353.0], [81.4, 353.0], [81.5, 353.0], [81.6, 353.0], [81.7, 353.0], [81.8, 353.0], [81.9, 353.0], [82.0, 354.0], [82.1, 354.0], [82.2, 354.0], [82.3, 354.0], [82.4, 354.0], [82.5, 355.0], [82.6, 355.0], [82.7, 355.0], [82.8, 355.0], [82.9, 355.0], [83.0, 355.0], [83.1, 356.0], [83.2, 356.0], [83.3, 356.0], [83.4, 356.0], [83.5, 356.0], [83.6, 356.0], [83.7, 357.0], [83.8, 357.0], [83.9, 357.0], [84.0, 357.0], [84.1, 357.0], [84.2, 358.0], [84.3, 358.0], [84.4, 358.0], [84.5, 358.0], [84.6, 359.0], [84.7, 359.0], [84.8, 359.0], [84.9, 359.0], [85.0, 360.0], [85.1, 361.0], [85.2, 361.0], [85.3, 361.0], [85.4, 362.0], [85.5, 362.0], [85.6, 362.0], [85.7, 363.0], [85.8, 363.0], [85.9, 363.0], [86.0, 364.0], [86.1, 364.0], [86.2, 365.0], [86.3, 365.0], [86.4, 365.0], [86.5, 365.0], [86.6, 366.0], [86.7, 366.0], [86.8, 366.0], [86.9, 366.0], [87.0, 366.0], [87.1, 366.0], [87.2, 367.0], [87.3, 367.0], [87.4, 367.0], [87.5, 367.0], [87.6, 368.0], [87.7, 368.0], [87.8, 369.0], [87.9, 369.0], [88.0, 369.0], [88.1, 370.0], [88.2, 370.0], [88.3, 371.0], [88.4, 371.0], [88.5, 372.0], [88.6, 373.0], [88.7, 373.0], [88.8, 374.0], [88.9, 374.0], [89.0, 374.0], [89.1, 375.0], [89.2, 376.0], [89.3, 376.0], [89.4, 377.0], [89.5, 377.0], [89.6, 378.0], [89.7, 378.0], [89.8, 379.0], [89.9, 379.0], [90.0, 380.0], [90.1, 380.0], [90.2, 380.0], [90.3, 381.0], [90.4, 381.0], [90.5, 381.0], [90.6, 382.0], [90.7, 382.0], [90.8, 383.0], [90.9, 383.0], [91.0, 383.0], [91.1, 384.0], [91.2, 384.0], [91.3, 384.0], [91.4, 384.0], [91.5, 385.0], [91.6, 385.0], [91.7, 386.0], [91.8, 386.0], [91.9, 386.0], [92.0, 386.0], [92.1, 387.0], [92.2, 387.0], [92.3, 387.0], [92.4, 388.0], [92.5, 388.0], [92.6, 388.0], [92.7, 389.0], [92.8, 389.0], [92.9, 390.0], [93.0, 390.0], [93.1, 390.0], [93.2, 390.0], [93.3, 391.0], [93.4, 391.0], [93.5, 391.0], [93.6, 391.0], [93.7, 392.0], [93.8, 392.0], [93.9, 392.0], [94.0, 392.0], [94.1, 393.0], [94.2, 393.0], [94.3, 393.0], [94.4, 394.0], [94.5, 394.0], [94.6, 394.0], [94.7, 395.0], [94.8, 395.0], [94.9, 395.0], [95.0, 395.0], [95.1, 396.0], [95.2, 396.0], [95.3, 396.0], [95.4, 397.0], [95.5, 398.0], [95.6, 398.0], [95.7, 399.0], [95.8, 399.0], [95.9, 400.0], [96.0, 401.0], [96.1, 401.0], [96.2, 402.0], [96.3, 402.0], [96.4, 403.0], [96.5, 404.0], [96.6, 405.0], [96.7, 406.0], [96.8, 407.0], [96.9, 408.0], [97.0, 408.0], [97.1, 409.0], [97.2, 410.0], [97.3, 410.0], [97.4, 411.0], [97.5, 411.0], [97.6, 411.0], [97.7, 411.0], [97.8, 412.0], [97.9, 412.0], [98.0, 412.0], [98.1, 413.0], [98.2, 413.0], [98.3, 414.0], [98.4, 415.0], [98.5, 416.0], [98.6, 417.0], [98.7, 418.0], [98.8, 419.0], [98.9, 420.0], [99.0, 422.0], [99.1, 423.0], [99.2, 425.0], [99.3, 426.0], [99.4, 428.0], [99.5, 429.0], [99.6, 434.0], [99.7, 437.0], [99.8, 446.0], [99.9, 452.0]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 3.0], [3.7, 3.0], [3.8, 3.0], [3.9, 3.0], [4.0, 3.0], [4.1, 3.0], [4.2, 3.0], [4.3, 3.0], [4.4, 3.0], [4.5, 3.0], [4.6, 3.0], [4.7, 3.0], [4.8, 3.0], [4.9, 3.0], [5.0, 3.0], [5.1, 3.0], [5.2, 3.0], [5.3, 3.0], [5.4, 3.0], [5.5, 3.0], [5.6, 3.0], [5.7, 3.0], [5.8, 3.0], [5.9, 4.0], [6.0, 4.0], [6.1, 4.0], [6.2, 4.0], [6.3, 4.0], [6.4, 4.0], [6.5, 4.0], [6.6, 4.0], [6.7, 4.0], [6.8, 4.0], [6.9, 4.0], [7.0, 4.0], [7.1, 4.0], [7.2, 4.0], [7.3, 4.0], [7.4, 4.0], [7.5, 4.0], [7.6, 4.0], [7.7, 4.0], [7.8, 5.0], [7.9, 5.0], [8.0, 5.0], [8.1, 5.0], [8.2, 5.0], [8.3, 5.0], [8.4, 5.0], [8.5, 5.0], [8.6, 5.0], [8.7, 5.0], [8.8, 5.0], [8.9, 5.0], [9.0, 5.0], [9.1, 5.0], [9.2, 5.0], [9.3, 6.0], [9.4, 6.0], [9.5, 6.0], [9.6, 6.0], [9.7, 6.0], [9.8, 6.0], [9.9, 6.0], [10.0, 6.0], [10.1, 6.0], [10.2, 6.0], [10.3, 6.0], [10.4, 6.0], [10.5, 7.0], [10.6, 7.0], [10.7, 7.0], [10.8, 7.0], [10.9, 7.0], [11.0, 7.0], [11.1, 7.0], [11.2, 7.0], [11.3, 7.0], [11.4, 7.0], [11.5, 7.0], [11.6, 7.0], [11.7, 8.0], [11.8, 8.0], [11.9, 8.0], [12.0, 8.0], [12.1, 8.0], [12.2, 8.0], [12.3, 8.0], [12.4, 8.0], [12.5, 9.0], [12.6, 9.0], [12.7, 9.0], [12.8, 9.0], [12.9, 9.0], [13.0, 9.0], [13.1, 9.0], [13.2, 10.0], [13.3, 10.0], [13.4, 10.0], [13.5, 10.0], [13.6, 10.0], [13.7, 10.0], [13.8, 11.0], [13.9, 11.0], [14.0, 11.0], [14.1, 11.0], [14.2, 11.0], [14.3, 12.0], [14.4, 12.0], [14.5, 12.0], [14.6, 13.0], [14.7, 13.0], [14.8, 13.0], [14.9, 14.0], [15.0, 14.0], [15.1, 15.0], [15.2, 15.0], [15.3, 15.0], [15.4, 16.0], [15.5, 16.0], [15.6, 17.0], [15.7, 17.0], [15.8, 18.0], [15.9, 18.0], [16.0, 18.0], [16.1, 19.0], [16.2, 19.0], [16.3, 20.0], [16.4, 20.0], [16.5, 20.0], [16.6, 21.0], [16.7, 21.0], [16.8, 21.0], [16.9, 22.0], [17.0, 22.0], [17.1, 23.0], [17.2, 24.0], [17.3, 25.0], [17.4, 25.0], [17.5, 26.0], [17.6, 27.0], [17.7, 27.0], [17.8, 28.0], [17.9, 28.0], [18.0, 29.0], [18.1, 29.0], [18.2, 30.0], [18.3, 31.0], [18.4, 31.0], [18.5, 32.0], [18.6, 32.0], [18.7, 33.0], [18.8, 34.0], [18.9, 35.0], [19.0, 36.0], [19.1, 36.0], [19.2, 37.0], [19.3, 38.0], [19.4, 39.0], [19.5, 39.0], [19.6, 40.0], [19.7, 40.0], [19.8, 42.0], [19.9, 42.0], [20.0, 43.0], [20.1, 44.0], [20.2, 45.0], [20.3, 45.0], [20.4, 46.0], [20.5, 46.0], [20.6, 46.0], [20.7, 47.0], [20.8, 49.0], [20.9, 50.0], [21.0, 50.0], [21.1, 52.0], [21.2, 52.0], [21.3, 53.0], [21.4, 53.0], [21.5, 54.0], [21.6, 55.0], [21.7, 55.0], [21.8, 56.0], [21.9, 56.0], [22.0, 56.0], [22.1, 57.0], [22.2, 57.0], [22.3, 57.0], [22.4, 58.0], [22.5, 58.0], [22.6, 59.0], [22.7, 59.0], [22.8, 59.0], [22.9, 59.0], [23.0, 59.0], [23.1, 60.0], [23.2, 60.0], [23.3, 60.0], [23.4, 60.0], [23.5, 61.0], [23.6, 61.0], [23.7, 61.0], [23.8, 62.0], [23.9, 62.0], [24.0, 63.0], [24.1, 63.0], [24.2, 63.0], [24.3, 64.0], [24.4, 64.0], [24.5, 65.0], [24.6, 65.0], [24.7, 65.0], [24.8, 66.0], [24.9, 66.0], [25.0, 67.0], [25.1, 67.0], [25.2, 68.0], [25.3, 68.0], [25.4, 69.0], [25.5, 69.0], [25.6, 69.0], [25.7, 70.0], [25.8, 70.0], [25.9, 70.0], [26.0, 70.0], [26.1, 71.0], [26.2, 71.0], [26.3, 71.0], [26.4, 71.0], [26.5, 72.0], [26.6, 72.0], [26.7, 72.0], [26.8, 72.0], [26.9, 73.0], [27.0, 73.0], [27.1, 73.0], [27.2, 73.0], [27.3, 73.0], [27.4, 74.0], [27.5, 74.0], [27.6, 74.0], [27.7, 74.0], [27.8, 75.0], [27.9, 75.0], [28.0, 75.0], [28.1, 75.0], [28.2, 75.0], [28.3, 76.0], [28.4, 76.0], [28.5, 76.0], [28.6, 76.0], [28.7, 77.0], [28.8, 77.0], [28.9, 77.0], [29.0, 77.0], [29.1, 78.0], [29.2, 78.0], [29.3, 78.0], [29.4, 79.0], [29.5, 79.0], [29.6, 79.0], [29.7, 80.0], [29.8, 80.0], [29.9, 80.0], [30.0, 81.0], [30.1, 81.0], [30.2, 82.0], [30.3, 82.0], [30.4, 82.0], [30.5, 83.0], [30.6, 83.0], [30.7, 83.0], [30.8, 83.0], [30.9, 84.0], [31.0, 84.0], [31.1, 85.0], [31.2, 86.0], [31.3, 87.0], [31.4, 87.0], [31.5, 88.0], [31.6, 89.0], [31.7, 89.0], [31.8, 90.0], [31.9, 91.0], [32.0, 91.0], [32.1, 91.0], [32.2, 92.0], [32.3, 92.0], [32.4, 92.0], [32.5, 93.0], [32.6, 93.0], [32.7, 93.0], [32.8, 94.0], [32.9, 94.0], [33.0, 94.0], [33.1, 94.0], [33.2, 95.0], [33.3, 95.0], [33.4, 95.0], [33.5, 95.0], [33.6, 96.0], [33.7, 96.0], [33.8, 96.0], [33.9, 97.0], [34.0, 97.0], [34.1, 97.0], [34.2, 98.0], [34.3, 98.0], [34.4, 98.0], [34.5, 98.0], [34.6, 99.0], [34.7, 99.0], [34.8, 99.0], [34.9, 99.0], [35.0, 100.0], [35.1, 100.0], [35.2, 100.0], [35.3, 100.0], [35.4, 100.0], [35.5, 101.0], [35.6, 101.0], [35.7, 101.0], [35.8, 101.0], [35.9, 101.0], [36.0, 102.0], [36.1, 102.0], [36.2, 102.0], [36.3, 102.0], [36.4, 102.0], [36.5, 103.0], [36.6, 103.0], [36.7, 103.0], [36.8, 103.0], [36.9, 103.0], [37.0, 103.0], [37.1, 104.0], [37.2, 104.0], [37.3, 104.0], [37.4, 104.0], [37.5, 104.0], [37.6, 105.0], [37.7, 105.0], [37.8, 105.0], [37.9, 105.0], [38.0, 105.0], [38.1, 105.0], [38.2, 105.0], [38.3, 105.0], [38.4, 106.0], [38.5, 106.0], [38.6, 106.0], [38.7, 106.0], [38.8, 106.0], [38.9, 106.0], [39.0, 107.0], [39.1, 107.0], [39.2, 107.0], [39.3, 107.0], [39.4, 108.0], [39.5, 108.0], [39.6, 108.0], [39.7, 109.0], [39.8, 109.0], [39.9, 109.0], [40.0, 109.0], [40.1, 110.0], [40.2, 110.0], [40.3, 110.0], [40.4, 110.0], [40.5, 110.0], [40.6, 111.0], [40.7, 111.0], [40.8, 111.0], [40.9, 111.0], [41.0, 112.0], [41.1, 112.0], [41.2, 112.0], [41.3, 112.0], [41.4, 113.0], [41.5, 113.0], [41.6, 113.0], [41.7, 113.0], [41.8, 113.0], [41.9, 113.0], [42.0, 114.0], [42.1, 114.0], [42.2, 114.0], [42.3, 114.0], [42.4, 115.0], [42.5, 115.0], [42.6, 115.0], [42.7, 115.0], [42.8, 116.0], [42.9, 116.0], [43.0, 116.0], [43.1, 116.0], [43.2, 117.0], [43.3, 117.0], [43.4, 117.0], [43.5, 117.0], [43.6, 117.0], [43.7, 118.0], [43.8, 118.0], [43.9, 118.0], [44.0, 118.0], [44.1, 119.0], [44.2, 119.0], [44.3, 119.0], [44.4, 120.0], [44.5, 120.0], [44.6, 120.0], [44.7, 120.0], [44.8, 121.0], [44.9, 121.0], [45.0, 121.0], [45.1, 121.0], [45.2, 121.0], [45.3, 121.0], [45.4, 122.0], [45.5, 122.0], [45.6, 122.0], [45.7, 122.0], [45.8, 122.0], [45.9, 123.0], [46.0, 123.0], [46.1, 123.0], [46.2, 123.0], [46.3, 123.0], [46.4, 124.0], [46.5, 124.0], [46.6, 124.0], [46.7, 124.0], [46.8, 124.0], [46.9, 124.0], [47.0, 125.0], [47.1, 125.0], [47.2, 125.0], [47.3, 125.0], [47.4, 125.0], [47.5, 126.0], [47.6, 126.0], [47.7, 126.0], [47.8, 127.0], [47.9, 127.0], [48.0, 127.0], [48.1, 127.0], [48.2, 128.0], [48.3, 128.0], [48.4, 128.0], [48.5, 128.0], [48.6, 128.0], [48.7, 129.0], [48.8, 129.0], [48.9, 129.0], [49.0, 129.0], [49.1, 129.0], [49.2, 130.0], [49.3, 130.0], [49.4, 130.0], [49.5, 130.0], [49.6, 130.0], [49.7, 131.0], [49.8, 131.0], [49.9, 131.0], [50.0, 131.0], [50.1, 131.0], [50.2, 132.0], [50.3, 132.0], [50.4, 132.0], [50.5, 132.0], [50.6, 133.0], [50.7, 133.0], [50.8, 133.0], [50.9, 133.0], [51.0, 133.0], [51.1, 133.0], [51.2, 134.0], [51.3, 134.0], [51.4, 134.0], [51.5, 134.0], [51.6, 134.0], [51.7, 135.0], [51.8, 135.0], [51.9, 135.0], [52.0, 135.0], [52.1, 135.0], [52.2, 135.0], [52.3, 135.0], [52.4, 136.0], [52.5, 136.0], [52.6, 136.0], [52.7, 136.0], [52.8, 137.0], [52.9, 137.0], [53.0, 137.0], [53.1, 137.0], [53.2, 137.0], [53.3, 137.0], [53.4, 138.0], [53.5, 138.0], [53.6, 138.0], [53.7, 138.0], [53.8, 138.0], [53.9, 138.0], [54.0, 138.0], [54.1, 138.0], [54.2, 139.0], [54.3, 139.0], [54.4, 139.0], [54.5, 139.0], [54.6, 139.0], [54.7, 139.0], [54.8, 140.0], [54.9, 140.0], [55.0, 140.0], [55.1, 140.0], [55.2, 140.0], [55.3, 140.0], [55.4, 140.0], [55.5, 141.0], [55.6, 141.0], [55.7, 141.0], [55.8, 141.0], [55.9, 141.0], [56.0, 141.0], [56.1, 141.0], [56.2, 142.0], [56.3, 142.0], [56.4, 142.0], [56.5, 142.0], [56.6, 142.0], [56.7, 142.0], [56.8, 142.0], [56.9, 142.0], [57.0, 143.0], [57.1, 143.0], [57.2, 143.0], [57.3, 143.0], [57.4, 143.0], [57.5, 143.0], [57.6, 143.0], [57.7, 143.0], [57.8, 144.0], [57.9, 144.0], [58.0, 144.0], [58.1, 144.0], [58.2, 144.0], [58.3, 144.0], [58.4, 144.0], [58.5, 145.0], [58.6, 145.0], [58.7, 145.0], [58.8, 145.0], [58.9, 145.0], [59.0, 145.0], [59.1, 145.0], [59.2, 145.0], [59.3, 146.0], [59.4, 146.0], [59.5, 146.0], [59.6, 146.0], [59.7, 146.0], [59.8, 146.0], [59.9, 147.0], [60.0, 147.0], [60.1, 147.0], [60.2, 147.0], [60.3, 147.0], [60.4, 147.0], [60.5, 147.0], [60.6, 148.0], [60.7, 148.0], [60.8, 148.0], [60.9, 148.0], [61.0, 149.0], [61.1, 149.0], [61.2, 149.0], [61.3, 149.0], [61.4, 149.0], [61.5, 150.0], [61.6, 150.0], [61.7, 150.0], [61.8, 150.0], [61.9, 151.0], [62.0, 151.0], [62.1, 151.0], [62.2, 151.0], [62.3, 151.0], [62.4, 152.0], [62.5, 152.0], [62.6, 152.0], [62.7, 152.0], [62.8, 152.0], [62.9, 153.0], [63.0, 153.0], [63.1, 153.0], [63.2, 154.0], [63.3, 154.0], [63.4, 154.0], [63.5, 154.0], [63.6, 154.0], [63.7, 154.0], [63.8, 154.0], [63.9, 155.0], [64.0, 155.0], [64.1, 155.0], [64.2, 155.0], [64.3, 155.0], [64.4, 156.0], [64.5, 156.0], [64.6, 156.0], [64.7, 156.0], [64.8, 156.0], [64.9, 156.0], [65.0, 156.0], [65.1, 157.0], [65.2, 157.0], [65.3, 157.0], [65.4, 157.0], [65.5, 157.0], [65.6, 158.0], [65.7, 158.0], [65.8, 158.0], [65.9, 159.0], [66.0, 159.0], [66.1, 159.0], [66.2, 159.0], [66.3, 160.0], [66.4, 160.0], [66.5, 160.0], [66.6, 160.0], [66.7, 160.0], [66.8, 161.0], [66.9, 161.0], [67.0, 161.0], [67.1, 161.0], [67.2, 161.0], [67.3, 162.0], [67.4, 162.0], [67.5, 162.0], [67.6, 163.0], [67.7, 163.0], [67.8, 163.0], [67.9, 163.0], [68.0, 164.0], [68.1, 164.0], [68.2, 164.0], [68.3, 164.0], [68.4, 164.0], [68.5, 165.0], [68.6, 165.0], [68.7, 165.0], [68.8, 165.0], [68.9, 165.0], [69.0, 165.0], [69.1, 166.0], [69.2, 166.0], [69.3, 166.0], [69.4, 166.0], [69.5, 166.0], [69.6, 166.0], [69.7, 167.0], [69.8, 167.0], [69.9, 167.0], [70.0, 167.0], [70.1, 167.0], [70.2, 167.0], [70.3, 167.0], [70.4, 168.0], [70.5, 168.0], [70.6, 168.0], [70.7, 168.0], [70.8, 168.0], [70.9, 169.0], [71.0, 169.0], [71.1, 169.0], [71.2, 169.0], [71.3, 169.0], [71.4, 169.0], [71.5, 169.0], [71.6, 169.0], [71.7, 170.0], [71.8, 170.0], [71.9, 170.0], [72.0, 170.0], [72.1, 170.0], [72.2, 170.0], [72.3, 170.0], [72.4, 171.0], [72.5, 171.0], [72.6, 171.0], [72.7, 171.0], [72.8, 171.0], [72.9, 171.0], [73.0, 172.0], [73.1, 172.0], [73.2, 172.0], [73.3, 172.0], [73.4, 172.0], [73.5, 172.0], [73.6, 172.0], [73.7, 173.0], [73.8, 173.0], [73.9, 173.0], [74.0, 173.0], [74.1, 173.0], [74.2, 173.0], [74.3, 173.0], [74.4, 173.0], [74.5, 173.0], [74.6, 174.0], [74.7, 174.0], [74.8, 174.0], [74.9, 174.0], [75.0, 174.0], [75.1, 174.0], [75.2, 175.0], [75.3, 175.0], [75.4, 175.0], [75.5, 175.0], [75.6, 175.0], [75.7, 175.0], [75.8, 176.0], [75.9, 176.0], [76.0, 176.0], [76.1, 176.0], [76.2, 176.0], [76.3, 176.0], [76.4, 177.0], [76.5, 177.0], [76.6, 177.0], [76.7, 177.0], [76.8, 177.0], [76.9, 178.0], [77.0, 178.0], [77.1, 178.0], [77.2, 178.0], [77.3, 178.0], [77.4, 178.0], [77.5, 179.0], [77.6, 179.0], [77.7, 179.0], [77.8, 179.0], [77.9, 179.0], [78.0, 179.0], [78.1, 179.0], [78.2, 180.0], [78.3, 180.0], [78.4, 180.0], [78.5, 180.0], [78.6, 180.0], [78.7, 180.0], [78.8, 181.0], [78.9, 181.0], [79.0, 181.0], [79.1, 181.0], [79.2, 181.0], [79.3, 181.0], [79.4, 181.0], [79.5, 181.0], [79.6, 182.0], [79.7, 182.0], [79.8, 182.0], [79.9, 182.0], [80.0, 182.0], [80.1, 182.0], [80.2, 183.0], [80.3, 183.0], [80.4, 183.0], [80.5, 183.0], [80.6, 183.0], [80.7, 183.0], [80.8, 183.0], [80.9, 183.0], [81.0, 184.0], [81.1, 184.0], [81.2, 184.0], [81.3, 184.0], [81.4, 184.0], [81.5, 185.0], [81.6, 185.0], [81.7, 185.0], [81.8, 185.0], [81.9, 185.0], [82.0, 185.0], [82.1, 186.0], [82.2, 186.0], [82.3, 186.0], [82.4, 186.0], [82.5, 186.0], [82.6, 186.0], [82.7, 187.0], [82.8, 187.0], [82.9, 187.0], [83.0, 187.0], [83.1, 187.0], [83.2, 187.0], [83.3, 187.0], [83.4, 188.0], [83.5, 188.0], [83.6, 188.0], [83.7, 188.0], [83.8, 188.0], [83.9, 189.0], [84.0, 189.0], [84.1, 189.0], [84.2, 189.0], [84.3, 189.0], [84.4, 189.0], [84.5, 189.0], [84.6, 189.0], [84.7, 189.0], [84.8, 189.0], [84.9, 190.0], [85.0, 190.0], [85.1, 190.0], [85.2, 190.0], [85.3, 190.0], [85.4, 190.0], [85.5, 190.0], [85.6, 190.0], [85.7, 190.0], [85.8, 190.0], [85.9, 191.0], [86.0, 191.0], [86.1, 191.0], [86.2, 191.0], [86.3, 191.0], [86.4, 191.0], [86.5, 192.0], [86.6, 192.0], [86.7, 192.0], [86.8, 192.0], [86.9, 192.0], [87.0, 192.0], [87.1, 192.0], [87.2, 193.0], [87.3, 193.0], [87.4, 193.0], [87.5, 193.0], [87.6, 194.0], [87.7, 194.0], [87.8, 194.0], [87.9, 194.0], [88.0, 194.0], [88.1, 194.0], [88.2, 195.0], [88.3, 195.0], [88.4, 195.0], [88.5, 195.0], [88.6, 195.0], [88.7, 195.0], [88.8, 196.0], [88.9, 196.0], [89.0, 196.0], [89.1, 196.0], [89.2, 196.0], [89.3, 197.0], [89.4, 197.0], [89.5, 197.0], [89.6, 197.0], [89.7, 197.0], [89.8, 197.0], [89.9, 198.0], [90.0, 198.0], [90.1, 198.0], [90.2, 198.0], [90.3, 198.0], [90.4, 199.0], [90.5, 199.0], [90.6, 199.0], [90.7, 199.0], [90.8, 200.0], [90.9, 200.0], [91.0, 200.0], [91.1, 200.0], [91.2, 200.0], [91.3, 200.0], [91.4, 201.0], [91.5, 201.0], [91.6, 201.0], [91.7, 201.0], [91.8, 201.0], [91.9, 202.0], [92.0, 202.0], [92.1, 202.0], [92.2, 202.0], [92.3, 202.0], [92.4, 203.0], [92.5, 203.0], [92.6, 203.0], [92.7, 203.0], [92.8, 204.0], [92.9, 204.0], [93.0, 204.0], [93.1, 204.0], [93.2, 205.0], [93.3, 205.0], [93.4, 205.0], [93.5, 205.0], [93.6, 205.0], [93.7, 206.0], [93.8, 206.0], [93.9, 206.0], [94.0, 206.0], [94.1, 206.0], [94.2, 207.0], [94.3, 207.0], [94.4, 207.0], [94.5, 207.0], [94.6, 208.0], [94.7, 208.0], [94.8, 208.0], [94.9, 208.0], [95.0, 208.0], [95.1, 209.0], [95.2, 209.0], [95.3, 210.0], [95.4, 210.0], [95.5, 210.0], [95.6, 211.0], [95.7, 211.0], [95.8, 211.0], [95.9, 211.0], [96.0, 212.0], [96.1, 212.0], [96.2, 212.0], [96.3, 212.0], [96.4, 213.0], [96.5, 213.0], [96.6, 214.0], [96.7, 214.0], [96.8, 214.0], [96.9, 215.0], [97.0, 215.0], [97.1, 215.0], [97.2, 215.0], [97.3, 216.0], [97.4, 216.0], [97.5, 217.0], [97.6, 217.0], [97.7, 217.0], [97.8, 217.0], [97.9, 218.0], [98.0, 218.0], [98.1, 219.0], [98.2, 219.0], [98.3, 219.0], [98.4, 219.0], [98.5, 220.0], [98.6, 220.0], [98.7, 221.0], [98.8, 221.0], [98.9, 223.0], [99.0, 225.0], [99.1, 225.0], [99.2, 226.0], [99.3, 227.0], [99.4, 227.0], [99.5, 228.0], [99.6, 229.0], [99.7, 231.0], [99.8, 233.0], [99.9, 235.0]], "isOverall": false, "label": "Album Read", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 782.0, "minX": 0.0, "maxY": 10272.0, "series": [{"data": [[0.0, 7159.0], [100.0, 10003.0], [200.0, 1585.0]], "isOverall": false, "label": "Browse Page", "isController": false}, {"data": [[0.0, 3957.0], [300.0, 6195.0], [100.0, 2661.0], [200.0, 5075.0], [400.0, 782.0]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[0.0, 6433.0], [100.0, 10272.0], [200.0, 1709.0]], "isOverall": false, "label": "Album Read", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2108.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 35053.0, "series": [{"data": [[0.0, 2108.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 35053.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 252.06597124330466, "minX": 1.6118394E12, "maxY": 462.55291405518494, "series": [{"data": [[1.6118394E12, 252.06597124330466], [1.61183946E12, 462.55291405518494]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61183946E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 396.9230769230769, "series": [{"data": [[4.0, 3.0], [6.0, 3.0], [7.0, 3.0], [9.0, 3.0], [10.0, 29.25], [11.0, 2.0], [12.0, 2.2], [13.0, 2.0], [14.0, 2.0], [15.0, 2.0], [16.0, 2.6666666666666665], [17.0, 2.5], [18.0, 2.6666666666666665], [19.0, 2.0], [20.0, 2.0], [21.0, 2.0], [22.0, 2.3333333333333335], [23.0, 2.5], [24.0, 4.428571428571429], [25.0, 2.0], [26.0, 2.6666666666666665], [27.0, 2.5], [28.0, 2.25], [29.0, 2.2], [30.0, 2.75], [31.0, 2.75], [32.0, 2.6666666666666665], [33.0, 2.6], [34.0, 2.75], [35.0, 2.3333333333333335], [36.0, 2.3333333333333335], [37.0, 3.1], [38.0, 2.111111111111111], [39.0, 2.333333333333333], [40.0, 3.5], [41.0, 2.0], [42.0, 2.25], [43.0, 2.0], [44.0, 3.25], [45.0, 3.0], [46.0, 2.7142857142857144], [47.0, 2.2857142857142856], [48.0, 2.75], [49.0, 2.0], [50.0, 3.076923076923077], [51.0, 3.0000000000000004], [52.0, 2.8571428571428568], [53.0, 2.5], [54.0, 2.2857142857142856], [55.0, 2.4285714285714284], [56.0, 2.5555555555555554], [57.0, 2.875], [58.0, 2.0], [59.0, 2.5], [60.0, 3.4], [61.0, 2.4], [62.0, 3.2857142857142856], [63.0, 2.6], [64.0, 3.818181818181818], [65.0, 2.714285714285714], [66.0, 3.75], [67.0, 2.166666666666667], [68.0, 2.4], [69.0, 2.4], [70.0, 2.8], [71.0, 2.875], [72.0, 3.0000000000000004], [73.0, 2.9], [74.0, 2.9411764705882364], [75.0, 2.272727272727273], [76.0, 3.9999999999999996], [77.0, 3.888888888888889], [78.0, 3.0], [79.0, 2.857142857142857], [80.0, 3.6666666666666665], [81.0, 2.6666666666666665], [82.0, 3.4], [83.0, 3.0], [84.0, 3.583333333333333], [85.0, 4.416666666666667], [86.0, 3.4285714285714284], [87.0, 2.9411764705882355], [88.0, 3.1428571428571432], [89.0, 3.333333333333333], [90.0, 4.48], [91.0, 3.0], [92.0, 3.294117647058823], [93.0, 6.416666666666668], [94.0, 2.1111111111111116], [95.0, 2.875], [96.0, 2.9375], [97.0, 2.8000000000000003], [98.0, 3.0555555555555554], [99.0, 2.285714285714286], [100.0, 4.454545454545454], [101.0, 3.8333333333333335], [102.0, 3.5555555555555554], [103.0, 3.1333333333333337], [104.0, 3.9230769230769225], [105.0, 3.5555555555555554], [106.0, 3.8333333333333335], [107.0, 4.461538461538461], [108.0, 2.9090909090909096], [109.0, 3.888888888888889], [110.0, 3.470588235294118], [111.0, 2.5], [112.0, 3.3636363636363638], [113.0, 4.909090909090909], [114.0, 3.111111111111111], [115.0, 2.736842105263158], [116.0, 2.8636363636363638], [117.0, 12.333333333333336], [118.0, 3.4999999999999996], [119.0, 3.1499999999999995], [120.0, 4.421052631578947], [121.0, 4.647058823529411], [122.0, 4.769230769230769], [123.0, 2.8], [124.0, 5.04], [125.0, 3.947368421052632], [126.0, 2.5714285714285716], [127.0, 3.333333333333333], [128.0, 3.3636363636363638], [129.0, 3.9166666666666665], [130.0, 2.857142857142857], [131.0, 4.7586206896551735], [132.0, 4.722222222222222], [133.0, 6.095238095238095], [134.0, 3.916666666666666], [135.0, 4.354838709677419], [136.0, 3.6666666666666665], [137.0, 5.066666666666666], [138.0, 4.066666666666666], [139.0, 5.076923076923076], [140.0, 3.411764705882353], [141.0, 3.944444444444445], [142.0, 4.5], [143.0, 2.3333333333333335], [144.0, 10.576923076923078], [145.0, 4.374999999999999], [146.0, 3.6666666666666665], [147.0, 5.0], [148.0, 3.538461538461538], [149.0, 3.1538461538461537], [150.0, 3.8], [151.0, 6.818181818181818], [152.0, 5.785714285714286], [153.0, 4.162162162162163], [154.0, 4.166666666666666], [155.0, 4.933333333333333], [156.0, 7.578947368421053], [157.0, 3.8823529411764706], [158.0, 9.071428571428573], [159.0, 7.562500000000002], [160.0, 4.761904761904762], [161.0, 3.4705882352941178], [162.0, 4.250000000000001], [163.0, 5.1923076923076925], [164.0, 3.375], [165.0, 8.318181818181817], [166.0, 9.178571428571429], [167.0, 10.437499999999998], [168.0, 5.933333333333334], [169.0, 4.124999999999999], [170.0, 3.071428571428571], [171.0, 4.666666666666667], [172.0, 11.02941176470588], [173.0, 5.909090909090908], [174.0, 5.3181818181818175], [175.0, 4.25], [176.0, 4.095238095238095], [177.0, 6.125], [178.0, 6.6], [179.0, 13.66666666666667], [180.0, 7.964285714285712], [181.0, 3.2941176470588234], [182.0, 4.235294117647059], [183.0, 3.1111111111111107], [184.0, 3.3571428571428568], [185.0, 4.0], [186.0, 13.70967741935484], [187.0, 10.166666666666664], [188.0, 16.117647058823533], [189.0, 9.09090909090909], [190.0, 8.937499999999998], [191.0, 7.76923076923077], [192.0, 3.5], [193.0, 13.454545454545451], [194.0, 7.239999999999999], [195.0, 5.521739130434783], [196.0, 3.1818181818181817], [197.0, 8.560606060606055], [198.0, 14.437500000000002], [199.0, 23.166666666666668], [200.0, 23.473684210526322], [201.0, 14.805555555555555], [202.0, 12.333333333333332], [203.0, 22.5], [204.0, 2.2857142857142856], [205.0, 3.4000000000000004], [206.0, 5.5], [207.0, 22.44117647058823], [208.0, 11.354838709677416], [209.0, 5.666666666666667], [210.0, 4.666666666666667], [211.0, 3.125], [212.0, 3.8461538461538463], [213.0, 4.823529411764706], [214.0, 14.125], [215.0, 30.789473684210517], [216.0, 21.675675675675674], [217.0, 8.266666666666666], [218.0, 2.833333333333333], [219.0, 55.599999999999994], [220.0, 51.833333333333336], [221.0, 46.18181818181818], [222.0, 37.0], [223.0, 51.32710280373831], [224.0, 44.71428571428571], [225.0, 71.31818181818181], [226.0, 46.99999999999999], [227.0, 5.0], [228.0, 18.8], [229.0, 22.25], [230.0, 28.571428571428573], [231.0, 44.89795918367346], [232.0, 3.2222222222222223], [233.0, 10.0], [234.0, 6.6], [235.0, 28.7], [236.0, 20.5], [237.0, 30.470588235294116], [238.0, 59.0], [239.0, 53.330188679245275], [240.0, 45.33333333333334], [241.0, 10.25], [242.0, 42.42857142857142], [243.0, 5.477272727272728], [244.0, 12.812499999999998], [245.0, 11.894736842105264], [247.0, 60.66972477064221], [246.0, 17.75], [248.0, 45.545454545454554], [249.0, 2.0], [250.0, 5.333333333333333], [251.0, 41.266666666666666], [252.0, 4.5], [253.0, 26.375000000000007], [254.0, 103.00000000000001], [255.0, 71.32799999999996], [257.0, 52.92307692307692], [256.0, 42.8], [258.0, 29.857142857142858], [259.0, 58.15384615384615], [260.0, 53.4], [261.0, 65.33333333333334], [262.0, 51.857142857142854], [263.0, 59.74999999999999], [264.0, 75.89915966386553], [270.0, 28.8], [271.0, 118.42857142857142], [268.0, 11.500000000000002], [269.0, 118.36363636363637], [265.0, 55.06249999999999], [266.0, 7.600000000000001], [267.0, 5.555555555555555], [273.0, 90.76190476190476], [272.0, 87.40136054421767], [274.0, 32.83333333333333], [275.0, 55.79310344827584], [276.0, 45.42857142857143], [277.0, 67.0], [278.0, 54.57142857142857], [279.0, 40.92857142857142], [281.0, 75.08527131782942], [280.0, 26.0], [286.0, 84.38709677419355], [287.0, 1.6666666666666667], [284.0, 104.35714285714286], [285.0, 87.76923076923076], [282.0, 2.3333333333333335], [283.0, 104.42105263157895], [289.0, 78.03703703703705], [288.0, 78.57142857142858], [290.0, 74.18320610687024], [291.0, 2.0], [292.0, 2.4], [293.0, 42.19047619047619], [294.0, 2.2500000000000004], [295.0, 2.5], [296.0, 89.40540540540542], [300.0, 2.25], [301.0, 80.95], [302.0, 88.58333333333334], [303.0, 2.0], [299.0, 95.18791946308723], [297.0, 97.5], [304.0, 2.0], [305.0, 72.13513513513514], [306.0, 96.0], [316.0, 106.36363636363636], [307.0, 94.16666666666666], [317.0, 83.21301775147928], [318.0, 50.0], [319.0, 107.88888888888887], [308.0, 96.63953488372094], [309.0, 2.3333333333333335], [310.0, 87.34615384615384], [311.0, 68.5], [312.0, 2.0], [313.0, 117.125], [314.0, 93.64285714285714], [315.0, 106.18518518518519], [332.0, 123.55555555555557], [322.0, 24.642857142857142], [320.0, 93.40000000000002], [321.0, 74.21739130434783], [323.0, 2.6666666666666665], [333.0, 102.33333333333333], [335.0, 110.0], [334.0, 124.61538461538461], [326.0, 101.8639053254438], [324.0, 109.63636363636364], [327.0, 46.83333333333333], [328.0, 119.26923076923077], [329.0, 121.41666666666666], [330.0, 93.71428571428571], [331.0, 109.10714285714285], [339.0, 2.0], [337.0, 103.73076923076924], [336.0, 130.94915254237287], [343.0, 172.0], [338.0, 171.8125], [341.0, 161.87499999999997], [340.0, 181.0], [342.0, 79.85714285714286], [344.0, 138.2142857142857], [351.0, 104.125], [348.0, 127.25], [349.0, 141.37499999999997], [350.0, 105.125], [345.0, 114.07650273224048], [346.0, 143.06896551724137], [347.0, 110.25], [354.0, 100.19540229885061], [355.0, 117.00000000000001], [364.0, 113.77348066298339], [365.0, 2.0], [366.0, 90.29411764705883], [367.0, 149.52380952380955], [356.0, 2.0], [357.0, 109.25], [358.0, 89.14285714285714], [359.0, 127.8541666666667], [353.0, 143.5], [352.0, 119.29166666666667], [360.0, 97.57142857142857], [361.0, 12.0], [362.0, 125.23255813953489], [363.0, 128.0], [369.0, 70.2], [368.0, 132.61290322580646], [370.0, 20.5], [371.0, 123.64285714285715], [372.0, 113.0], [373.0, 89.71065989847719], [374.0, 21.6], [375.0, 83.2], [376.0, 44.333333333333336], [382.0, 98.85227272727275], [383.0, 103.85714285714285], [380.0, 114.4074074074074], [381.0, 122.33999999999997], [377.0, 2.0], [378.0, 2.0], [379.0, 105.30303030303031], [385.0, 2.0], [384.0, 74.0], [386.0, 127.09090909090908], [387.0, 114.66666666666667], [388.0, 103.73333333333332], [389.0, 121.87500000000001], [391.0, 107.32038834951452], [390.0, 122.8125], [392.0, 102.33333333333334], [397.0, 1.3333333333333333], [393.0, 104.71428571428572], [394.0, 104.79166666666667], [395.0, 108.16666666666667], [401.0, 97.9375], [400.0, 101.3551912568306], [402.0, 107.0], [403.0, 75.0], [404.0, 3.4], [405.0, 62.5], [406.0, 111.58333333333333], [407.0, 118.0], [409.0, 98.57894736842105], [408.0, 150.2261904761905], [414.0, 43.75], [415.0, 130.42105263157893], [412.0, 139.50000000000003], [413.0, 79.0], [410.0, 111.7985074626866], [411.0, 1.0], [418.0, 154.0], [419.0, 112.4935064935065], [428.0, 99.71559633027529], [429.0, 165.54000000000002], [430.0, 1.0], [431.0, 146.53333333333333], [420.0, 114.46376811594203], [421.0, 102.66666666666667], [422.0, 143.28571428571428], [423.0, 129.5], [417.0, 153.0], [416.0, 157.33333333333337], [424.0, 134.84615384615384], [425.0, 121.15384615384616], [426.0, 115.47619047619048], [434.0, 107.0], [432.0, 141.5], [433.0, 148.3448275862069], [435.0, 137.99999999999997], [444.0, 114.71428571428572], [447.0, 161.66666666666669], [446.0, 188.33333333333331], [445.0, 183.53571428571428], [436.0, 134.00000000000003], [437.0, 136.85714285714286], [438.0, 98.35849056603772], [439.0, 56.0], [440.0, 129.32352941176472], [441.0, 108.86666666666666], [443.0, 183.2173913043478], [442.0, 126.75000000000001], [449.0, 71.0], [448.0, 156.0521739130435], [450.0, 106.875], [451.0, 2.0], [452.0, 129.21568627450975], [453.0, 92.25], [454.0, 93.66666666666666], [455.0, 104.0], [456.0, 116.8125], [457.0, 118.53571428571426], [463.0, 198.04000000000002], [462.0, 195.0], [460.0, 185.16666666666666], [461.0, 112.42857142857143], [458.0, 154.67605633802822], [459.0, 181.3571428571428], [476.0, 5.0], [464.0, 2.0], [465.0, 182.76923076923077], [466.0, 191.92307692307693], [469.0, 156.56474820143882], [468.0, 175.2], [470.0, 2.0], [471.0, 3.0], [474.0, 158.77173913043478], [475.0, 111.55555555555556], [479.0, 179.10000000000002], [472.0, 172.0], [478.0, 177.33333333333334], [477.0, 176.59459459459455], [492.0, 2.0], [481.0, 82.0], [480.0, 173.88936170212742], [482.0, 153.0], [486.0, 3.4], [484.0, 152.9], [487.0, 149.5], [488.0, 149.38888888888894], [489.0, 106.32352941176471], [490.0, 154.10294117647075], [491.0, 2.0], [493.0, 2.0], [495.0, 3.0], [510.0, 145.5], [496.0, 3.0], [497.0, 24.5], [509.0, 140.85714285714286], [508.0, 147.36111111111117], [501.0, 157.3677685950413], [502.0, 97.125], [503.0, 2.0], [504.0, 78.0], [506.0, 33.0], [505.0, 127.77254901960777], [507.0, 143.8666666666667], [511.0, 138.39999999999998], [518.0, 118.60714285714283], [524.0, 92.75000000000001], [512.0, 155.29323308270682], [513.0, 138.80769230769232], [517.0, 2.5], [516.0, 129.4285714285714], [515.0, 121.59999999999998], [514.0, 124.0], [528.0, 114.05882352941175], [541.0, 143.9387755102041], [540.0, 154.4814814814815], [542.0, 133.18749999999997], [543.0, 175.5], [536.0, 169.19999999999996], [519.0, 106.3], [537.0, 155.25], [539.0, 128.2692307692308], [529.0, 2.0], [531.0, 156.33333333333334], [530.0, 127.7179487179487], [532.0, 146.0], [533.0, 167.3445692883895], [534.0, 101.4761904761905], [535.0, 2.0], [520.0, 155.93939393939397], [521.0, 149.0666666666667], [522.0, 155.44905660377353], [523.0, 161.0], [525.0, 105.4736842105263], [526.0, 120.75], [527.0, 2.0], [547.0, 114.38461538461536], [557.0, 152.14285714285714], [545.0, 184.0], [544.0, 178.03571428571436], [558.0, 141.3], [559.0, 155.1764705882353], [546.0, 116.05263157894737], [549.0, 115.41666666666666], [548.0, 140.0], [551.0, 175.40000000000003], [550.0, 141.39473684210526], [568.0, 109.6], [569.0, 126.71428571428572], [571.0, 177.2352941176471], [570.0, 178.5], [572.0, 100.28571428571429], [573.0, 94.83333333333334], [574.0, 44.857142857142854], [575.0, 163.33333333333334], [560.0, 134.14285714285714], [561.0, 2.0], [562.0, 115.5], [567.0, 189.83617747440275], [566.0, 198.0], [565.0, 171.6592592592593], [564.0, 92.92857142857143], [563.0, 96.42857142857142], [553.0, 162.0], [552.0, 165.45454545454547], [554.0, 171.6875], [555.0, 174.6996587030715], [556.0, 158.16666666666669], [582.0, 88.28888888888889], [578.0, 174.6739926739927], [577.0, 96.6875], [591.0, 160.7021276595745], [576.0, 131.5], [589.0, 179.06563706563708], [590.0, 178.59183673469389], [579.0, 130.7735849056604], [580.0, 21.8], [581.0, 18.666666666666664], [583.0, 188.3333333333334], [600.0, 169.6919431279622], [601.0, 99.74999999999999], [602.0, 177.7], [603.0, 1.5], [605.0, 205.0], [604.0, 194.83333333333331], [607.0, 143.90322580645162], [606.0, 172.85714285714286], [592.0, 153.67741935483866], [593.0, 2.5], [594.0, 47.333333333333336], [595.0, 149.03703703703704], [596.0, 10.0], [598.0, 171.69465648854973], [597.0, 175.66666666666666], [599.0, 185.0], [585.0, 175.62068965517244], [584.0, 196.5], [587.0, 168.42857142857144], [586.0, 180.20408163265301], [588.0, 165.0], [615.0, 213.71428571428572], [611.0, 143.66666666666666], [608.0, 149.25], [610.0, 135.66666666666669], [609.0, 141.66666666666666], [622.0, 212.0], [621.0, 204.14705882352945], [623.0, 171.82919254658376], [612.0, 179.57861635220146], [613.0, 139.1081081081081], [614.0, 154.79545454545453], [624.0, 2.0], [638.0, 138.0], [639.0, 182.97530864197535], [636.0, 182.78571428571428], [637.0, 145.125], [634.0, 174.36645962732914], [633.0, 180.80952380952382], [632.0, 211.91666666666666], [635.0, 179.9047619047619], [625.0, 72.0], [627.0, 128.71428571428572], [626.0, 170.64516129032256], [628.0, 160.7053571428571], [629.0, 181.55555555555554], [631.0, 217.625], [630.0, 166.48], [616.0, 205.0], [617.0, 199.25], [618.0, 177.91666666666666], [619.0, 210.6], [620.0, 199.625], [640.0, 159.71428571428572], [645.0, 170.0454545454546], [644.0, 172.2325581395348], [643.0, 187.3832335329341], [646.0, 1.5], [647.0, 160.6315789473684], [642.0, 189.0], [641.0, 187.00000000000003]], "isOverall": false, "label": "Browse Page", "isController": false}, {"data": [[408.7592681495716, 111.67626820291315]], "isOverall": false, "label": "Browse Page-Aggregated", "isController": false}, {"data": [[2.0, 9.0], [3.0, 8.0], [4.0, 3.0], [5.0, 8.0], [6.0, 3.0], [7.0, 3.0], [8.0, 9.0], [9.0, 3.0], [10.0, 9.0], [11.0, 2.0], [12.0, 4.5], [13.0, 8.0], [14.0, 2.0], [15.0, 11.0], [16.0, 6.5], [17.0, 24.166666666666668], [18.0, 3.5], [19.0, 8.25], [20.0, 7.4], [21.0, 5.5], [22.0, 7.166666666666667], [23.0, 7.333333333333333], [24.0, 6.0], [25.0, 7.333333333333333], [26.0, 7.75], [27.0, 3.0], [28.0, 3.5], [29.0, 6.5], [30.0, 7.333333333333333], [31.0, 4.333333333333333], [32.0, 5.75], [33.0, 4.666666666666667], [34.0, 5.25], [35.0, 6.0], [36.0, 3.3333333333333335], [37.0, 6.25], [38.0, 6.0], [39.0, 7.777777777777778], [40.0, 8.625], [41.0, 6.5], [42.0, 6.2], [43.0, 7.333333333333333], [44.0, 7.125], [45.0, 7.166666666666666], [46.0, 7.8999999999999995], [47.0, 7.142857142857143], [48.0, 4.8], [49.0, 3.75], [50.0, 5.6], [51.0, 6.5], [52.0, 10.0], [53.0, 6.2], [54.0, 4.25], [55.0, 6.6], [56.0, 6.2857142857142865], [57.0, 9.3], [58.0, 5.999999999999999], [59.0, 6.142857142857143], [60.0, 6.5], [61.0, 9.0], [62.0, 7.999999999999999], [63.0, 9.76923076923077], [64.0, 8.857142857142858], [65.0, 7.75], [66.0, 7.875], [67.0, 7.0], [68.0, 5.6], [69.0, 7.833333333333334], [70.0, 6.555555555555555], [71.0, 6.624999999999999], [72.0, 8.0], [73.0, 6.833333333333333], [74.0, 7.928571428571427], [75.0, 9.636363636363637], [76.0, 7.833333333333333], [77.0, 6.333333333333333], [78.0, 9.0], [79.0, 8.583333333333332], [80.0, 9.461538461538462], [81.0, 10.066666666666668], [82.0, 9.4], [83.0, 8.8], [84.0, 10.440000000000001], [85.0, 10.416666666666666], [86.0, 8.0], [87.0, 9.157894736842106], [88.0, 5.857142857142857], [89.0, 7.0], [90.0, 7.285714285714286], [91.0, 6.75], [92.0, 9.5], [93.0, 11.818181818181817], [94.0, 5.571428571428571], [95.0, 7.7142857142857135], [96.0, 7.3], [97.0, 10.555555555555555], [98.0, 7.538461538461538], [99.0, 8.083333333333334], [100.0, 11.181818181818182], [101.0, 16.884615384615383], [102.0, 10.899999999999999], [103.0, 18.666666666666668], [104.0, 11.871794871794872], [105.0, 8.88888888888889], [106.0, 7.8], [107.0, 7.999999999999999], [108.0, 7.25], [109.0, 7.111111111111111], [110.0, 8.285714285714285], [111.0, 5.625], [112.0, 7.499999999999999], [113.0, 12.0625], [114.0, 7.249999999999999], [115.0, 9.428571428571427], [116.0, 9.058823529411764], [117.0, 14.0], [118.0, 7.699999999999999], [119.0, 8.545454545454545], [120.0, 11.514285714285712], [121.0, 15.485714285714288], [122.0, 14.588235294117647], [123.0, 12.0], [124.0, 15.432432432432432], [125.0, 11.32], [126.0, 6.571428571428571], [127.0, 8.375], [128.0, 8.333333333333334], [129.0, 7.8], [130.0, 5.666666666666666], [131.0, 12.4375], [132.0, 10.538461538461538], [133.0, 9.473684210526315], [134.0, 6.699999999999999], [135.0, 8.227272727272728], [136.0, 7.125], [137.0, 12.545454545454545], [138.0, 16.057142857142853], [139.0, 25.393939393939394], [140.0, 11.199999999999998], [141.0, 22.827586206896548], [142.0, 13.153846153846153], [143.0, 6.75], [144.0, 21.449999999999996], [145.0, 23.166666666666664], [146.0, 10.5], [147.0, 10.285714285714285], [148.0, 13.076923076923077], [149.0, 22.037037037037038], [150.0, 15.000000000000002], [151.0, 18.499999999999996], [152.0, 10.000000000000002], [153.0, 12.411764705882355], [154.0, 20.266666666666666], [155.0, 17.76923076923077], [156.0, 40.22222222222223], [157.0, 25.916666666666668], [158.0, 33.35714285714286], [159.0, 28.77777777777778], [160.0, 10.0], [161.0, 13.064516129032256], [162.0, 11.961538461538462], [163.0, 27.47916666666667], [164.0, 8.166666666666668], [165.0, 17.200000000000003], [166.0, 18.624999999999996], [167.0, 25.270270270270267], [168.0, 10.3125], [169.0, 11.0625], [170.0, 7.0], [171.0, 11.5], [172.0, 18.76923076923077], [173.0, 10.05263157894737], [174.0, 11.272727272727273], [175.0, 7.733333333333332], [176.0, 76.1111111111111], [177.0, 49.33333333333333], [178.0, 30.11111111111111], [179.0, 29.76666666666667], [180.0, 46.58536585365854], [181.0, 18.709677419354836], [182.0, 69.57575757575756], [183.0, 78.58333333333333], [184.0, 124.20689655172413], [185.0, 64.0], [186.0, 36.942857142857136], [187.0, 49.173913043478265], [188.0, 45.577777777777776], [189.0, 8.2], [190.0, 13.363636363636365], [191.0, 12.181818181818183], [192.0, 10.4], [193.0, 28.516129032258064], [194.0, 16.096774193548388], [195.0, 10.000000000000002], [196.0, 7.333333333333333], [197.0, 22.677419354838708], [198.0, 29.923076923076927], [199.0, 53.357142857142854], [200.0, 37.86486486486486], [201.0, 18.625000000000004], [202.0, 22.809523809523807], [203.0, 33.08571428571428], [204.0, 40.06666666666666], [205.0, 208.96774193548393], [206.0, 129.14285714285714], [207.0, 70.25], [208.0, 42.24390243902438], [209.0, 65.4375], [210.0, 22.307692307692307], [211.0, 5.6], [212.0, 88.66666666666667], [213.0, 51.41666666666667], [214.0, 93.76923076923076], [215.0, 55.5890410958904], [216.0, 53.00000000000001], [217.0, 73.07142857142858], [218.0, 5.0], [219.0, 59.5], [220.0, 81.53846153846153], [221.0, 119.89999999999998], [222.0, 67.66666666666667], [223.0, 70.28735632183906], [224.0, 40.7], [225.0, 16.0], [226.0, 53.14285714285714], [227.0, 7.5], [228.0, 35.0], [229.0, 50.17857142857143], [230.0, 22.454545454545457], [231.0, 79.1875], [232.0, 7.166666666666666], [233.0, 19.0], [234.0, 29.111111111111107], [235.0, 46.58333333333333], [236.0, 22.5], [237.0, 79.125], [239.0, 96.0], [240.0, 80.71052631578947], [241.0, 65.15384615384615], [242.0, 86.6875], [243.0, 125.49999999999996], [244.0, 121.39999999999999], [245.0, 63.666666666666664], [246.0, 61.25], [247.0, 109.20869565217394], [248.0, 88.41176470588235], [249.0, 27.6], [250.0, 7.666666666666667], [251.0, 89.76923076923077], [252.0, 10.0], [253.0, 115.91666666666671], [255.0, 134.05645161290326], [254.0, 117.28571428571429], [257.0, 158.00000000000003], [256.0, 48.333333333333336], [258.0, 67.28571428571429], [259.0, 158.8], [260.0, 45.5], [261.0, 99.6], [262.0, 159.26666666666665], [263.0, 136.22222222222223], [264.0, 140.50806451612914], [268.0, 7.2857142857142865], [270.0, 182.5], [269.0, 212.23076923076923], [271.0, 189.375], [265.0, 45.0], [266.0, 30.0], [267.0, 33.77777777777778], [273.0, 156.47222222222229], [272.0, 160.75781250000003], [274.0, 124.0], [275.0, 149.76470588235293], [276.0, 51.5], [277.0, 129.11111111111111], [279.0, 142.62499999999997], [278.0, 149.125], [280.0, 99.89655172413794], [286.0, 175.1951219512195], [287.0, 112.25], [284.0, 185.53846153846155], [285.0, 154.66666666666666], [281.0, 152.35384615384615], [282.0, 6.0], [283.0, 249.66666666666666], [290.0, 146.73333333333346], [289.0, 148.93103448275863], [288.0, 184.6], [291.0, 108.0], [300.0, 86.0], [301.0, 206.23529411764704], [302.0, 150.77777777777777], [303.0, 5.0], [292.0, 84.66666666666667], [293.0, 113.0], [294.0, 5.0], [295.0, 5.0], [296.0, 186.25], [298.0, 177.0], [297.0, 202.10000000000002], [299.0, 169.91034482758616], [305.0, 193.55555555555554], [307.0, 216.88235294117644], [306.0, 224.83333333333334], [308.0, 183.2277777777779], [309.0, 94.0909090909091], [310.0, 221.12], [311.0, 63.0], [312.0, 180.5], [315.0, 230.0344827586207], [314.0, 235.38461538461542], [313.0, 240.0], [319.0, 198.375], [316.0, 232.4375], [317.0, 190.61988304093578], [318.0, 43.333333333333336], [321.0, 205.14285714285714], [320.0, 195.66666666666669], [322.0, 112.76923076923077], [323.0, 88.0], [324.0, 282.96296296296305], [325.0, 339.0], [326.0, 182.44936708860763], [327.0, 230.0], [329.0, 257.4117647058824], [332.0, 282.5757575757575], [333.0, 143.0], [335.0, 223.85714285714286], [328.0, 312.1], [334.0, 270.37500000000006], [330.0, 249.8], [331.0, 295.1923076923076], [339.0, 88.25], [336.0, 230.77011494252878], [343.0, 313.6666666666667], [342.0, 298.22222222222223], [341.0, 311.94594594594605], [340.0, 316.6], [337.0, 204.96153846153842], [338.0, 292.3846153846155], [345.0, 248.68000000000012], [346.0, 270.2631578947369], [347.0, 261.76923076923083], [348.0, 190.81818181818178], [349.0, 184.5], [351.0, 181.8], [344.0, 314.37500000000006], [350.0, 276.125], [364.0, 207.19125683060108], [354.0, 210.69886363636357], [352.0, 238.75000000000003], [353.0, 274.0], [359.0, 252.31707317073167], [355.0, 253.53571428571425], [357.0, 189.20000000000005], [358.0, 210.0], [362.0, 257.33333333333326], [363.0, 266.0], [365.0, 3.6666666666666665], [366.0, 198.15000000000003], [367.0, 234.3888888888889], [360.0, 229.5], [370.0, 192.0], [369.0, 155.33333333333334], [368.0, 257.40000000000003], [371.0, 236.42857142857144], [381.0, 252.16071428571433], [380.0, 216.2857142857143], [382.0, 187.3826530612246], [383.0, 222.66666666666666], [372.0, 248.33333333333334], [373.0, 204.46268656716416], [374.0, 125.0], [375.0, 227.07692307692312], [376.0, 5.0], [377.0, 215.375], [379.0, 237.39285714285714], [378.0, 243.66666666666666], [385.0, 158.0], [384.0, 211.70000000000002], [386.0, 258.7142857142857], [396.0, 67.0], [398.0, 127.5], [388.0, 218.91666666666666], [389.0, 295.1333333333333], [391.0, 200.34408602150543], [390.0, 269.5], [392.0, 215.4666666666667], [393.0, 193.66666666666666], [394.0, 257.35294117647055], [395.0, 200.61290322580646], [403.0, 230.16666666666669], [401.0, 262.15789473684214], [400.0, 204.0256410256409], [402.0, 235.60000000000002], [404.0, 177.2], [406.0, 273.2380952380953], [405.0, 305.5], [407.0, 204.14285714285714], [408.0, 297.02112676056345], [409.0, 282.0], [414.0, 208.33333333333334], [415.0, 304.0], [412.0, 239.0], [413.0, 232.625], [410.0, 218.69387755102042], [411.0, 20.166666666666668], [418.0, 291.42857142857144], [416.0, 300.0], [417.0, 303.0], [419.0, 241.01204819277103], [420.0, 263.47540983606564], [421.0, 197.0], [422.0, 244.35], [423.0, 308.0], [425.0, 275.5], [427.0, 18.0], [426.0, 234.77777777777774], [431.0, 259.6333333333333], [424.0, 288.27272727272725], [428.0, 215.82587064676622], [429.0, 294.19672131147536], [430.0, 3.5], [434.0, 240.16666666666669], [432.0, 166.87500000000003], [433.0, 281.4090909090908], [435.0, 284.6969696969697], [445.0, 346.4666666666667], [444.0, 356.0], [446.0, 304.5], [447.0, 324.1666666666667], [437.0, 250.25], [436.0, 317.2941176470588], [438.0, 195.99074074074082], [439.0, 173.5], [440.0, 320.49999999999994], [441.0, 291.0], [442.0, 269.7142857142857], [443.0, 365.0499999999999], [460.0, 265.0], [448.0, 247.0675675675675], [449.0, 316.5], [450.0, 250.7], [451.0, 9.0], [454.0, 303.9333333333334], [453.0, 335.0], [452.0, 316.64444444444445], [455.0, 316.14285714285717], [458.0, 308.6267281105992], [459.0, 322.2340425531915], [461.0, 253.85714285714286], [463.0, 352.34615384615387], [457.0, 288.7368421052632], [456.0, 310.2857142857143], [462.0, 354.0], [464.0, 221.0], [466.0, 311.00000000000006], [465.0, 332.6060606060606], [468.0, 322.1333333333334], [469.0, 314.42084942084966], [470.0, 4.0], [471.0, 6.0], [472.0, 47.0], [475.0, 336.8], [474.0, 310.47311827957003], [476.0, 347.0], [479.0, 326.0], [478.0, 308.96551724137936], [477.0, 317.4807692307692], [480.0, 329.28991596638645], [482.0, 254.63235294117646], [481.0, 291.75], [483.0, 253.0], [486.0, 245.66666666666666], [490.0, 329.519379844961], [492.0, 9.0], [489.0, 226.41666666666666], [488.0, 271.6], [487.0, 273.5], [485.0, 253.0], [484.0, 257.05882352941177], [498.0, 309.0], [496.0, 140.0], [499.0, 311.0], [509.0, 256.75], [508.0, 285.52777777777777], [501.0, 316.33061224489796], [502.0, 6.0], [503.0, 186.33333333333334], [504.0, 170.0], [507.0, 241.79999999999998], [506.0, 248.0], [505.0, 260.71747211895905], [511.0, 284.38461538461536], [510.0, 209.0], [518.0, 272.8947368421052], [524.0, 211.21428571428572], [512.0, 316.55252918287954], [513.0, 249.83333333333331], [514.0, 220.42857142857144], [516.0, 272.99999999999994], [515.0, 272.6923076923076], [528.0, 287.5], [539.0, 274.8125000000001], [538.0, 224.0], [537.0, 195.0], [536.0, 307.34693877551024], [519.0, 265.37500000000006], [541.0, 305.4999999999999], [540.0, 256.78571428571433], [542.0, 282.8571428571429], [529.0, 186.0], [533.0, 332.395348837209], [532.0, 309.0], [531.0, 290.3333333333333], [530.0, 267.08333333333337], [534.0, 160.92857142857144], [535.0, 3.3333333333333335], [520.0, 276.035294117647], [521.0, 282.3928571428571], [522.0, 317.5037878787878], [523.0, 288.6666666666667], [525.0, 243.9523809523809], [526.0, 271.2352941176471], [568.0, 109.16666666666666], [545.0, 346.06796116504864], [544.0, 341.8950276243093], [546.0, 239.17857142857144], [547.0, 277.07575757575756], [551.0, 228.44444444444446], [550.0, 216.53846153846152], [549.0, 269.0], [548.0, 307.0], [574.0, 277.3333333333333], [573.0, 306.57142857142856], [572.0, 320.0], [571.0, 318.8999999999999], [570.0, 317.4285714285714], [569.0, 319.5], [575.0, 348.3333333333333], [560.0, 323.090909090909], [554.0, 303.52631578947364], [552.0, 336.37499999999994], [555.0, 355.08185053380816], [556.0, 200.68421052631575], [558.0, 330.15789473684214], [557.0, 334.41666666666663], [559.0, 332.47222222222223], [561.0, 245.0], [562.0, 300.33333333333337], [563.0, 294.65000000000003], [564.0, 298.74074074074076], [566.0, 366.0], [565.0, 329.8492063492064], [567.0, 360.6907894736841], [583.0, 338.57692307692315], [590.0, 351.62264150943395], [578.0, 361.7041666666665], [579.0, 336.6363636363637], [580.0, 86.36363636363636], [582.0, 264.3148148148149], [581.0, 229.0], [595.0, 316.7407407407408], [592.0, 337.29166666666674], [607.0, 321.5384615384616], [606.0, 317.49999999999994], [604.0, 355.0], [602.0, 338.42857142857144], [603.0, 210.0], [600.0, 366.18407960198994], [601.0, 204.8888888888889], [596.0, 309.25], [598.0, 338.9379310344826], [597.0, 321.1666666666667], [599.0, 350.46153846153845], [585.0, 332.2903225806453], [584.0, 334.8461538461538], [586.0, 320.73684210526324], [587.0, 301.375], [589.0, 367.38910505836566], [588.0, 316.79999999999995], [591.0, 313.4745762711863], [576.0, 253.33333333333331], [577.0, 262.92307692307696], [613.0, 308.54285714285714], [610.0, 355.3478260869565], [608.0, 351.04651162790697], [609.0, 321.25], [612.0, 346.48709677419373], [611.0, 353.375], [615.0, 357.00000000000006], [614.0, 311.58], [632.0, 396.9230769230769], [633.0, 377.0], [634.0, 338.8942307692309], [635.0, 326.66666666666663], [637.0, 280.0], [636.0, 370.08333333333337], [639.0, 357.78571428571416], [638.0, 341.4], [618.0, 358.5357142857142], [617.0, 337.8235294117647], [616.0, 382.2142857142858], [620.0, 374.0], [619.0, 354.6666666666667], [622.0, 388.0], [621.0, 377.65000000000003], [623.0, 350.4406250000002], [624.0, 3.0], [625.0, 137.83333333333334], [627.0, 366.8], [626.0, 356.7894736842105], [628.0, 361.15000000000003], [629.0, 367.40000000000003], [631.0, 373.55555555555554], [630.0, 273.12500000000006], [640.0, 271.0], [641.0, 366.45833333333337], [645.0, 352.82993197278927], [644.0, 365.6842105263158], [643.0, 349.8742857142858], [647.0, 385.0000000000001], [642.0, 361.0], [1.0, 7.0]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[408.3754151044472, 227.5652919121591]], "isOverall": false, "label": "Transaction Controller-Aggregated", "isController": true}, {"data": [[2.0, 7.0], [3.0, 6.0], [5.0, 6.0], [8.0, 6.0], [10.0, 6.0], [12.0, 5.0], [13.0, 6.0], [15.0, 9.0], [16.0, 8.0], [17.0, 4.6], [18.0, 2.0], [19.0, 5.75], [20.0, 5.2], [21.0, 3.5], [22.0, 4.666666666666666], [23.0, 4.666666666666667], [24.0, 7.0], [25.0, 5.333333333333333], [26.0, 5.75], [27.0, 2.0], [28.0, 3.0], [29.0, 4.0], [30.0, 2.8], [31.0, 2.5], [32.0, 4.666666666666667], [33.0, 3.0], [34.0, 3.333333333333333], [35.0, 3.666666666666667], [36.0, 2.0], [37.0, 5.0], [38.0, 4.2], [39.0, 5.875], [40.0, 6.0], [41.0, 4.25], [42.0, 4.2], [43.0, 5.0], [44.0, 4.0], [45.0, 4.666666666666667], [46.0, 5.666666666666667], [47.0, 5.142857142857143], [48.0, 3.25], [49.0, 2.0], [50.0, 3.75], [51.0, 5.0], [52.0, 7.0], [53.0, 4.0], [54.0, 3.0], [55.0, 4.0], [56.0, 4.5], [57.0, 4.800000000000001], [58.0, 3.857142857142857], [59.0, 4.166666666666666], [60.0, 3.666666666666667], [61.0, 6.363636363636363], [62.0, 5.222222222222222], [63.0, 6.769230769230769], [64.0, 5.2857142857142865], [65.0, 5.125], [66.0, 5.857142857142857], [67.0, 4.428571428571429], [68.0, 3.2], [69.0, 4.5], [70.0, 3.2222222222222223], [71.0, 3.6250000000000004], [72.0, 4.666666666666667], [73.0, 4.2], [74.0, 5.384615384615386], [75.0, 5.818181818181818], [76.0, 5.0], [77.0, 4.375], [78.0, 5.25], [79.0, 5.666666666666667], [80.0, 7.25], [81.0, 7.866666666666666], [82.0, 5.4], [83.0, 6.2142857142857135], [84.0, 7.249999999999999], [85.0, 8.166666666666668], [86.0, 4.125], [87.0, 6.777777777777778], [88.0, 3.5], [89.0, 3.0], [90.0, 6.2], [91.0, 3.6250000000000004], [92.0, 6.0], [93.0, 8.181818181818183], [94.0, 2.8571428571428568], [95.0, 4.428571428571429], [96.0, 4.555555555555555], [97.0, 4.611111111111112], [98.0, 4.416666666666667], [99.0, 5.583333333333334], [100.0, 4.454545454545455], [101.0, 13.653846153846152], [102.0, 7.399999999999999], [103.0, 15.466666666666667], [104.0, 8.717948717948717], [105.0, 5.222222222222222], [106.0, 4.888888888888889], [107.0, 4.666666666666667], [108.0, 3.7142857142857144], [109.0, 3.9999999999999996], [110.0, 5.153846153846153], [111.0, 3.0], [112.0, 3.8571428571428568], [113.0, 7.6], [114.0, 3.571428571428571], [115.0, 4.785714285714286], [116.0, 5.375000000000001], [117.0, 10.0], [118.0, 4.777777777777778], [119.0, 5.5], [120.0, 8.117647058823529], [121.0, 11.6], [122.0, 10.5625], [123.0, 6.8], [124.0, 8.833333333333334], [125.0, 7.800000000000001], [126.0, 2.428571428571429], [127.0, 4.285714285714286], [128.0, 6.125], [129.0, 4.2], [130.0, 3.25], [131.0, 6.4], [132.0, 6.5], [133.0, 5.833333333333334], [134.0, 4.111111111111111], [135.0, 3.8095238095238098], [136.0, 5.142857142857143], [137.0, 7.9523809523809526], [138.0, 11.970588235294118], [139.0, 19.15151515151515], [140.0, 6.0], [141.0, 18.75], [142.0, 10.166666666666668], [143.0, 2.25], [144.0, 16.666666666666664], [145.0, 16.294117647058822], [146.0, 8.222222222222221], [147.0, 6.923076923076923], [148.0, 8.538461538461538], [149.0, 15.407407407407408], [150.0, 9.666666666666666], [151.0, 6.909090909090909], [152.0, 6.375000000000001], [153.0, 7.812499999999999], [154.0, 16.71428571428571], [155.0, 14.153846153846153], [156.0, 37.0], [157.0, 23.727272727272727], [158.0, 23.678571428571427], [159.0, 17.11111111111111], [160.0, 5.687499999999999], [161.0, 8.700000000000001], [162.0, 8.0], [163.0, 23.27659574468085], [164.0, 3.181818181818182], [165.0, 8.36], [166.0, 13.636363636363633], [167.0, 17.486486486486488], [168.0, 6.0625], [169.0, 5.0625], [170.0, 4.5], [171.0, 7.666666666666667], [172.0, 11.999999999999996], [173.0, 4.722222222222222], [174.0, 6.090909090909092], [175.0, 3.8571428571428568], [176.0, 67.29411764705883], [177.0, 40.88235294117647], [178.0, 25.75], [179.0, 18.137931034482754], [180.0, 33.175], [181.0, 9.580645161290324], [182.0, 65.36363636363636], [183.0, 73.83333333333334], [184.0, 110.93103448275859], [185.0, 41.25], [186.0, 20.97142857142857], [187.0, 33.434782608695656], [188.0, 28.08888888888889], [189.0, 3.7777777777777777], [190.0, 6.272727272727273], [191.0, 4.6], [192.0, 6.0], [193.0, 15.161290322580648], [194.0, 8.2], [195.0, 7.066666666666667], [196.0, 4.333333333333333], [197.0, 18.63333333333333], [198.0, 25.416666666666668], [199.0, 30.692307692307693], [200.0, 22.81081081081081], [201.0, 10.478260869565219], [202.0, 12.80952380952381], [203.0, 18.294117647058822], [204.0, 18.400000000000002], [205.0, 113.19354838709678], [206.0, 75.42857142857143], [207.0, 39.72222222222222], [208.0, 23.60975609756097], [209.0, 36.8125], [210.0, 11.538461538461538], [211.0, 2.25], [212.0, 50.285714285714285], [213.0, 22.833333333333332], [214.0, 37.30769230769231], [215.0, 37.71232876712331], [216.0, 19.818181818181813], [217.0, 42.738095238095234], [218.0, 2.666666666666667], [219.0, 29.8], [220.0, 54.38461538461538], [221.0, 84.68421052631578], [222.0, 46.666666666666664], [223.0, 40.00000000000001], [224.0, 24.6], [225.0, 2.857142857142857], [226.0, 34.44444444444445], [227.0, 5.5], [228.0, 22.714285714285715], [229.0, 19.62962962962963], [230.0, 13.181818181818182], [231.0, 48.589473684210525], [232.0, 3.166666666666667], [233.0, 12.0], [234.0, 23.555555555555557], [235.0, 29.363636363636363], [236.0, 14.0], [237.0, 45.53124999999999], [239.0, 51.97058823529412], [240.0, 55.47368421052631], [241.0, 35.76923076923077], [242.0, 49.3125], [243.0, 63.04347826086957], [244.0, 59.263157894736835], [245.0, 2.666666666666667], [246.0, 25.75], [247.0, 63.12389380530972], [248.0, 44.25], [249.0, 14.4], [250.0, 5.0], [251.0, 39.50000000000001], [252.0, 7.0], [253.0, 72.62499999999997], [255.0, 74.55645161290327], [254.0, 91.14285714285715], [257.0, 56.66666666666667], [256.0, 24.666666666666668], [258.0, 23.5], [259.0, 55.0], [260.0, 25.0], [261.0, 33.75], [262.0, 53.46666666666667], [263.0, 57.22222222222222], [264.0, 74.91935483870971], [268.0, 2.7142857142857144], [270.0, 136.0], [269.0, 142.08333333333331], [271.0, 104.25], [265.0, 33.5], [266.0, 15.0], [267.0, 11.0], [273.0, 84.11111111111111], [272.0, 83.21093749999997], [274.0, 60.833333333333336], [275.0, 77.11764705882354], [276.0, 39.0], [277.0, 52.0], [279.0, 50.53333333333333], [278.0, 66.42857142857143], [280.0, 30.92857142857143], [286.0, 89.19512195121949], [287.0, 65.0], [284.0, 89.08333333333333], [285.0, 84.0], [281.0, 77.46923076923076], [282.0, 3.666666666666667], [283.0, 157.87500000000003], [290.0, 75.9777777777778], [289.0, 72.96428571428572], [288.0, 85.06666666666665], [291.0, 60.0], [300.0, 44.333333333333336], [301.0, 93.43749999999999], [302.0, 77.55555555555556], [303.0, 1.5], [292.0, 41.0], [293.0, 17.666666666666668], [294.0, 2.1], [295.0, 3.0], [296.0, 97.67741935483872], [298.0, 81.0], [297.0, 102.7], [299.0, 98.55555555555554], [305.0, 85.27777777777777], [307.0, 94.58823529411767], [306.0, 96.0], [308.0, 98.61111111111106], [309.0, 52.90909090909091], [310.0, 118.48000000000002], [311.0, 35.0], [312.0, 101.75], [315.0, 108.07142857142856], [314.0, 121.6923076923077], [313.0, 133.625], [319.0, 91.75], [316.0, 101.3125], [317.0, 89.9824561403508], [318.0, 2.0], [321.0, 71.35], [320.0, 89.33333333333333], [322.0, 20.384615384615387], [323.0, 11.0], [324.0, 156.8148148148148], [325.0, 168.0], [326.0, 101.55696202531641], [327.0, 110.8], [329.0, 109.29411764705883], [332.0, 143.75757575757578], [335.0, 114.33333333333334], [328.0, 134.4], [334.0, 124.87499999999999], [330.0, 104.8], [331.0, 116.76923076923077], [339.0, 47.0], [336.0, 132.45977011494253], [343.0, 171.66666666666666], [342.0, 173.0], [341.0, 177.8611111111111], [340.0, 181.2], [337.0, 89.12], [338.0, 169.2307692307692], [345.0, 117.74137931034485], [346.0, 148.52631578947367], [347.0, 146.38461538461536], [348.0, 101.6], [349.0, 107.31249999999999], [351.0, 56.8], [344.0, 171.0], [350.0, 139.5], [364.0, 112.39560439560442], [354.0, 102.60795454545456], [352.0, 136.37142857142857], [353.0, 149.0], [359.0, 132.90000000000003], [355.0, 135.25], [357.0, 89.39999999999999], [358.0, 110.6], [362.0, 127.51428571428573], [363.0, 129.0], [365.0, 2.0], [366.0, 89.26315789473685], [367.0, 131.55555555555554], [360.0, 134.0], [370.0, 69.5], [369.0, 67.5], [368.0, 133.9777777777778], [371.0, 115.42857142857143], [381.0, 145.00000000000003], [380.0, 83.83333333333334], [382.0, 100.7704081632653], [383.0, 126.8], [372.0, 110.33333333333333], [373.0, 90.32500000000003], [374.0, 65.5], [375.0, 113.23076923076923], [376.0, 2.6666666666666665], [377.0, 91.875], [379.0, 100.42857142857143], [378.0, 117.66666666666667], [385.0, 89.66666666666667], [384.0, 127.6], [386.0, 127.8], [396.0, 1.0], [398.0, 3.0], [388.0, 96.90909090909092], [389.0, 133.9333333333333], [391.0, 102.42702702702705], [390.0, 140.2], [392.0, 112.28571428571429], [393.0, 92.33333333333333], [394.0, 129.2941176470588], [395.0, 113.5], [403.0, 136.16666666666669], [401.0, 138.15789473684208], [400.0, 99.87179487179488], [402.0, 120.0], [404.0, 95.8], [406.0, 143.6], [405.0, 161.0], [407.0, 79.83333333333333], [408.0, 160.83571428571432], [409.0, 108.0], [414.0, 104.33333333333333], [415.0, 154.33333333333331], [412.0, 142.72727272727275], [413.0, 121.74999999999999], [410.0, 119.31282051282052], [411.0, 2.166666666666667], [418.0, 155.57142857142858], [416.0, 145.69230769230768], [417.0, 173.0], [419.0, 117.64919354838699], [420.0, 119.43333333333331], [421.0, 102.66666666666667], [422.0, 126.89999999999999], [423.0, 164.0], [425.0, 136.0], [427.0, 15.0], [426.0, 111.88888888888889], [431.0, 155.5862068965517], [424.0, 156.0], [428.0, 109.04477611940305], [429.0, 167.95081967213113], [430.0, 2.0], [434.0, 89.33333333333334], [432.0, 95.57142857142858], [433.0, 144.00000000000003], [435.0, 137.87878787878788], [445.0, 191.23333333333338], [444.0, 199.0], [446.0, 140.25], [447.0, 167.9090909090909], [437.0, 132.0], [436.0, 138.05882352941177], [438.0, 100.0046511627907], [439.0, 73.0], [440.0, 132.76923076923075], [441.0, 125.16666666666667], [442.0, 144.15], [443.0, 195.2820512820512], [460.0, 147.5], [448.0, 151.27601809954737], [449.0, 142.5], [450.0, 114.0], [451.0, 6.666666666666667], [454.0, 111.19999999999999], [453.0, 142.0], [452.0, 136.73333333333332], [455.0, 117.64285714285714], [458.0, 154.3824884792627], [459.0, 176.2127659574468], [461.0, 140.0], [463.0, 192.76923076923072], [457.0, 115.10526315789473], [456.0, 112.71428571428572], [462.0, 194.5], [464.0, 66.0], [466.0, 194.2941176470588], [465.0, 196.66666666666666], [468.0, 176.53333333333333], [469.0, 156.68725868725855], [470.0, 2.0], [471.0, 4.0], [472.0, 2.0], [475.0, 191.0], [474.0, 150.11111111111106], [476.0, 164.0], [479.0, 179.0], [478.0, 173.48275862068968], [477.0, 175.90384615384613], [480.0, 179.801687763713], [482.0, 144.2647058823529], [481.0, 164.5], [483.0, 152.0], [486.0, 103.66666666666667], [490.0, 161.57751937984497], [492.0, 5.6], [489.0, 111.41666666666667], [488.0, 152.64], [487.0, 153.5], [485.0, 150.0], [484.0, 152.6875], [498.0, 123.0], [496.0, 3.0], [499.0, 128.0], [509.0, 137.33333333333334], [508.0, 153.25], [501.0, 163.21632653061215], [502.0, 3.0], [503.0, 103.0], [504.0, 78.0], [507.0, 144.85], [506.0, 156.0], [505.0, 129.14716981132082], [511.0, 152.46153846153845], [510.0, 114.0], [518.0, 122.28070175438597], [524.0, 90.92857142857142], [512.0, 165.30350194552508], [513.0, 133.95652173913044], [514.0, 113.42857142857143], [516.0, 125.63888888888887], [515.0, 127.53846153846152], [528.0, 135.9230769230769], [539.0, 152.0322580645161], [538.0, 165.0], [537.0, 166.0], [536.0, 170.43749999999997], [519.0, 135.99999999999994], [541.0, 145.71875000000003], [540.0, 156.18518518518516], [542.0, 131.0], [529.0, 5.0], [533.0, 173.09689922480624], [532.0, 141.0], [531.0, 127.33333333333333], [530.0, 126.54545454545455], [534.0, 70.92857142857143], [535.0, 2.0], [520.0, 156.13095238095238], [521.0, 146.6428571428571], [522.0, 163.8636363636364], [523.0, 151.90243902439025], [525.0, 105.28571428571428], [526.0, 124.12499999999999], [568.0, 60.66666666666667], [545.0, 182.04901960784315], [544.0, 179.75138121546962], [546.0, 102.14814814814815], [547.0, 115.4848484848485], [551.0, 167.44444444444446], [550.0, 143.60526315789474], [549.0, 156.33333333333334], [548.0, 156.0], [574.0, 63.333333333333336], [573.0, 126.85714285714286], [572.0, 174.0], [571.0, 173.0], [570.0, 176.42857142857142], [569.0, 178.0], [575.0, 172.0], [560.0, 156.72727272727272], [554.0, 171.05555555555551], [552.0, 164.75000000000003], [555.0, 179.46975088967963], [556.0, 142.33333333333331], [558.0, 156.94736842105263], [557.0, 164.83333333333334], [559.0, 154.83333333333331], [561.0, 76.5], [562.0, 126.45454545454545], [563.0, 111.6], [564.0, 102.66666666666667], [566.0, 202.44444444444443], [565.0, 170.05555555555554], [567.0, 191.40131578947364], [583.0, 176.07692307692307], [590.0, 188.1698113207547], [578.0, 177.72916666666663], [579.0, 144.11688311688317], [580.0, 11.181818181818182], [582.0, 107.50980392156862], [581.0, 27.0], [595.0, 149.83999999999997], [592.0, 156.2553191489361], [607.0, 157.63999999999996], [606.0, 173.25], [604.0, 197.3125], [602.0, 169.99999999999997], [603.0, 104.0], [600.0, 175.16417910447763], [601.0, 47.0], [596.0, 101.0], [598.0, 177.78620689655173], [597.0, 174.4], [599.0, 186.53846153846155], [585.0, 182.29032258064515], [584.0, 196.46153846153848], [586.0, 180.12499999999991], [587.0, 150.57142857142858], [589.0, 183.08560311284052], [588.0, 156.5], [591.0, 156.48275862068965], [576.0, 172.0], [577.0, 113.25], [613.0, 122.08571428571427], [610.0, 149.30434782608697], [608.0, 149.02380952380952], [609.0, 139.42857142857144], [612.0, 179.98064516129037], [611.0, 141.625], [615.0, 214.12], [614.0, 150.66], [632.0, 221.33333333333334], [633.0, 178.20689655172413], [634.0, 172.1189710610933], [635.0, 170.19047619047623], [637.0, 114.4], [636.0, 185.72727272727275], [639.0, 186.2261904761905], [638.0, 137.8], [618.0, 198.07142857142858], [617.0, 218.1764705882353], [616.0, 223.42857142857142], [620.0, 212.16666666666666], [619.0, 208.86666666666665], [622.0, 204.0], [621.0, 207.31578947368422], [623.0, 172.07836990595618], [624.0, 2.0], [625.0, 71.83333333333334], [627.0, 165.8], [626.0, 178.86486486486487], [628.0, 165.74000000000004], [629.0, 185.25], [631.0, 225.11111111111111], [630.0, 146.625], [640.0, 128.33333333333334], [641.0, 172.2173913043478], [645.0, 170.39726027397256], [644.0, 181.642105263158], [643.0, 186.99421965317927], [647.0, 199.42857142857142], [642.0, 147.6], [1.0, 5.0]], "isOverall": false, "label": "Album Read", "isController": false}, {"data": [[410.066416856741, 117.617139133268]], "isOverall": false, "label": "Album Read-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 647.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.6118394E12, "maxY": 1950306.8, "series": [{"data": [[1.6118394E12, 359018.1], [1.61183946E12, 1950306.8]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6118394E12, 0.0], [1.61183946E12, 4642.333333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61183946E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 51.72708024560645, "minX": 1.6118394E12, "maxY": 269.2099250527533, "series": [{"data": [[1.6118394E12, 51.72708024560645], [1.61183946E12, 131.86594409583506]], "isOverall": false, "label": "Browse Page", "isController": false}, {"data": [[1.6118394E12, 111.40491171098037], [1.61183946E12, 269.2099250527533]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[1.6118394E12, 54.27853680035255], [1.61183946E12, 138.33136350533272]], "isOverall": false, "label": "Album Read", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61183946E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6118394E12, "maxY": 5.235101506221342, "series": [{"data": [[1.6118394E12, 0.0], [1.61183946E12, 1.3988876212207682]], "isOverall": false, "label": "Browse Page", "isController": false}, {"data": [[1.6118394E12, 0.0], [1.61183946E12, 5.235101506221342]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[1.6118394E12, 0.0], [1.61183946E12, 3.798284808302109]], "isOverall": false, "label": "Album Read", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61183946E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 51.621003599407054, "minX": 1.6118394E12, "maxY": 263.35567197846217, "series": [{"data": [[1.6118394E12, 51.621003599407054], [1.61183946E12, 130.41607244723306]], "isOverall": false, "label": "Browse Page", "isController": false}, {"data": [[1.6118394E12, 111.21331439009525], [1.61183946E12, 263.35567197846217]], "isOverall": false, "label": "Transaction Controller", "isController": true}, {"data": [[1.6118394E12, 54.19193477302769], [1.61183946E12, 133.9677140386283]], "isOverall": false, "label": "Album Read", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61183946E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.61183946E12, "maxY": 276.0, "series": [{"data": [[1.61183946E12, 276.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61183946E12, 125.10000000000014]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61183946E12, 172.90999999999985]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61183946E12, 139.54999999999995]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61183946E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61183946E12, 10.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61183946E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 23.0, "maxY": 198.0, "series": [{"data": [[557.0, 32.0], [272.0, 6.0], [587.0, 45.0], [150.0, 3.0], [627.0, 94.0], [666.0, 14.5], [701.0, 122.0], [751.0, 156.0], [373.0, 6.0], [845.0, 115.0], [55.0, 5.0], [485.0, 9.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[517.0, 22.0], [557.0, 6.0], [597.0, 5.0], [587.0, 36.0], [614.0, 74.0], [638.0, 101.0], [627.0, 22.0], [662.0, 9.0], [666.0, 96.0], [701.0, 146.0], [734.0, 111.0], [744.0, 59.0], [751.0, 131.0], [768.0, 99.0], [812.0, 77.0], [863.0, 112.0], [845.0, 72.0], [899.0, 124.0], [906.0, 144.0], [932.0, 168.0], [975.0, 169.0], [968.0, 167.0], [1002.0, 118.0], [1020.0, 158.0], [1062.0, 181.0], [1032.0, 140.0], [1105.0, 188.0], [1096.0, 147.0], [1199.0, 110.0], [1156.0, 197.0], [1194.0, 198.0], [1158.0, 167.5], [1244.0, 180.0], [1218.0, 176.0], [1233.0, 145.0], [1283.0, 185.0], [1288.0, 190.0], [95.0, 2.0], [170.0, 3.0], [236.0, 3.0], [310.0, 3.0], [23.0, 2.0], [371.0, 4.0], [373.0, 3.0], [458.0, 4.5], [485.0, 4.0], [510.0, 4.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1288.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 23.0, "maxY": 154.0, "series": [{"data": [[557.0, 29.0], [272.0, 4.0], [587.0, 37.0], [150.0, 3.0], [627.0, 92.0], [666.0, 12.5], [701.0, 118.0], [751.0, 154.0], [373.0, 5.0], [845.0, 110.0], [55.0, 4.0], [485.0, 8.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[517.0, 0.0], [557.0, 0.0], [597.0, 0.0], [587.0, 0.0], [614.0, 0.0], [638.0, 0.0], [627.0, 0.0], [662.0, 0.0], [666.0, 0.0], [701.0, 0.0], [734.0, 0.0], [744.0, 0.0], [751.0, 0.0], [768.0, 0.0], [812.0, 0.0], [863.0, 0.0], [845.0, 0.0], [899.0, 0.0], [906.0, 0.0], [932.0, 0.0], [975.0, 0.0], [968.0, 0.0], [1002.0, 0.0], [1020.0, 0.0], [1062.0, 0.0], [1032.0, 0.0], [1105.0, 0.0], [1096.0, 0.0], [1199.0, 0.0], [1156.0, 0.0], [1194.0, 0.0], [1158.0, 0.0], [1244.0, 0.0], [1218.0, 0.0], [1233.0, 0.0], [1283.0, 0.0], [1288.0, 0.0], [95.0, 0.0], [170.0, 0.0], [236.0, 0.0], [310.0, 0.0], [23.0, 0.0], [371.0, 0.0], [373.0, 0.0], [458.0, 0.0], [485.0, 0.0], [510.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1288.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 159.86666666666667, "minX": 1.6118394E12, "maxY": 459.48333333333335, "series": [{"data": [[1.6118394E12, 159.86666666666667], [1.61183946E12, 459.48333333333335]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61183946E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 35.13333333333333, "minX": 1.6118394E12, "maxY": 429.8666666666667, "series": [{"data": [[1.61183946E12, 35.13333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6118394E12, 154.35], [1.61183946E12, 429.8666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.BindException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61183946E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 14.95, "minX": 1.6118394E12, "maxY": 218.7, "series": [{"data": [[1.6118394E12, 75.63333333333334], [1.61183946E12, 211.16666666666666]], "isOverall": false, "label": "Album Read-failure", "isController": false}, {"data": [[1.61183946E12, 20.1]], "isOverall": false, "label": "Album Read-success", "isController": false}, {"data": [[1.61183946E12, 14.95]], "isOverall": false, "label": "Transaction Controller-success", "isController": true}, {"data": [[1.6118394E12, 78.71666666666667], [1.61183946E12, 218.7]], "isOverall": false, "label": "Browse Page-failure", "isController": false}, {"data": [[1.61183946E12, 15.033333333333333]], "isOverall": false, "label": "Browse Page-success", "isController": false}, {"data": [[1.6118394E12, 82.11666666666666], [1.61183946E12, 214.1]], "isOverall": false, "label": "Transaction Controller-failure", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61183946E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 50.083333333333336, "minX": 1.6118394E12, "maxY": 643.9666666666667, "series": [{"data": [[1.61183946E12, 50.083333333333336]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6118394E12, 236.46666666666667], [1.61183946E12, 643.9666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61183946E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

